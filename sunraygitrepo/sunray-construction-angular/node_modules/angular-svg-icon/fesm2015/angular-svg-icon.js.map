{"version":3,"file":"angular-svg-icon.js.map","sources":["ng://angular-svg-icon/src/svg-loader.ts","ng://angular-svg-icon/src/svg-icon-registry.service.ts","ng://angular-svg-icon/src/svg-icon.component.ts","ng://angular-svg-icon/src/angular-svg-icon.module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport abstract class SvgLoader {\r\n\tabstract getSvg(url: string): Observable<string>;\r\n}\r\n\r\n@Injectable()\r\nexport class SvgHttpLoader extends SvgLoader {\r\n\r\n\tconstructor(private http: HttpClient) {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tgetSvg(url: string): Observable<string> {\r\n\t\treturn this.http.get(url, { responseType: 'text' });\r\n\t}\r\n}\r\n","import { Inject, Injectable, InjectionToken, Optional, PLATFORM_ID, SkipSelf } from '@angular/core';\n\nimport { Observable, of as observableOf, throwError as observableThrowError } from 'rxjs';\nimport { catchError, finalize, map, share, tap } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { SvgLoader } from './svg-loader';\n\nexport const SERVER_URL = new InjectionToken<string>('SERVER_URL');\n\n@Injectable()\nexport class SvgIconRegistryService {\n\n\tprivate document: Document;\n\tprivate iconsByUrl = new Map<string, SVGElement>();\n\tprivate iconsLoadingByUrl = new Map<string, Observable<SVGElement>>();\n\n\tconstructor(private loader: SvgLoader,\n\t\t\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t\t\t@Optional() @Inject(SERVER_URL) protected serverUrl: string,\n\t\t\t\t@Optional() @Inject(DOCUMENT) private _document: any) {\n\t\t\tthis.document = this._document;\n\t}\n\n\t/** Add a SVG to the registry by passing a name and the SVG. */\n\taddSvg(name: string, data: string) {\n\t\tif (!this.iconsByUrl.has(name)) {\n\t\t\tconst div = this.document.createElement('DIV');\n\t\t\tdiv.innerHTML = data;\n\t\t\tconst svg = <SVGElement>div.querySelector('svg');\n\t\t\tthis.iconsByUrl.set(name, svg);\n\t\t}\n\t}\n\n\t/** Load a SVG to the registry from a URL. */\n\tloadSvg(url: string, name: string = url) : Observable<SVGElement> {\n\n\t\t// not sure if there should be a possibility to use name for server usage\n\t\t// so overriding it for now if provided\n\t\t// maybe should separate functionality for url and name use-cases\n\t\tif (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n\t\t\turl = this.serverUrl + url;\n\t\t\tname = url;\n\t\t}\n\n\t\tif (this.iconsByUrl.has(name)) {\n\t\t\treturn observableOf(this.iconsByUrl.get(name));\n\t\t} else if (this.iconsLoadingByUrl.has(name)) {\n\t\t\treturn this.iconsLoadingByUrl.get(name);\n\t\t}\n\t\tconst o = <Observable<SVGElement>> this.loader.getSvg(url).pipe(\n\t\t\tmap(svg => {\n\t\t\t\tconst div = this.document.createElement('DIV');\n\t\t\t\tdiv.innerHTML = svg;\n\t\t\t\treturn <SVGElement>div.querySelector('svg');\n\t\t\t}),\n\t\t\ttap (svg => this.iconsByUrl.set(name, svg) ),\n\t\t\tcatchError(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn observableThrowError(err);\n\t\t\t}),\n\t\t\tfinalize(() => this.iconsLoadingByUrl.delete(name) ),\n\t\t\tshare()\n\t\t);\n\n\t\tthis.iconsLoadingByUrl.set(name, o);\n\t\treturn o;\n\t}\n\n\t/** Get loaded SVG from registry by name. (also works by url because of blended map) */\n\tgetSvgByName(name: string) : Observable<SVGElement> {\n\t\tif (this.iconsByUrl.has(name)) {\n\t\t\treturn observableOf(this.iconsByUrl.get(name));\n\t\t} else if (this.iconsLoadingByUrl.has(name)) {\n\t\t\treturn this.iconsLoadingByUrl.get(name);\n\t\t}\n\t\treturn observableThrowError(`No svg with name '${name}' has been loaded`);\n\t}\n\n\t/** Remove a SVG from the registry by URL (or name). */\n\tunloadSvg(url: string) {\n\t\tif (this.iconsByUrl.has(url)) {\n\t\t\tthis.iconsByUrl.delete(url);\n\t\t}\n\t}\n}\n\nexport function SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry: SvgIconRegistryService, loader: SvgLoader,\n\tplatformId: Object, serverUrl?: string, document?: any) {\n\treturn parentRegistry || new SvgIconRegistryService(loader, platformId,  serverUrl, document);\n}\n\nexport const SVG_ICON_REGISTRY_PROVIDER = {\n\tprovide: SvgIconRegistryService,\n\tdeps: [ [new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID as InjectionToken<any>],\n\t\t\t[new Optional(), SERVER_URL as InjectionToken<string>], [new Optional(), DOCUMENT as InjectionToken<any>]\n\t],\n\tuseFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\n};\n","import { Component, DoCheck, ElementRef, HostBinding, Input,\n\tKeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDiffers,\n\tOnChanges, OnDestroy, OnInit, Renderer2, SimpleChange } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { SvgIconRegistryService } from './svg-icon-registry.service';\n\n\n@Component({\n\tselector: 'svg-icon',\n\tstyles: [ `:host { display: inline-block; }` ],\n\ttemplate: '<ng-content></ng-content>'\n})\n\nexport class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {\n\t@Input() src: string;\n\t@Input() name: string;\n\t@Input() stretch = false;\n\n\t// Adapted from ngStyle\n\t@Input()\n\tset svgStyle(v: {[key: string]: string }) {\n\t\tthis._svgStyle = v;\n\t\tif (!this.differ && v) {\n\t\t\tthis.differ = this.differs.find(v).create();\n\t\t}\n\t}\n\n\tprivate svg: SVGElement;\n\tprivate icnSub: Subscription;\n\tprivate differ: KeyValueDiffer<string, string|number>;\n\tprivate _svgStyle: {[key: string]: string};\n\n\tconstructor(private element: ElementRef,\n\t\tprivate differs: KeyValueDiffers,\n\t\tprivate renderer: Renderer2,\n\t\tprivate iconReg: SvgIconRegistryService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.init();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.destroy();\n\t}\n\n\tngOnChanges(changeRecord: {[key: string]: SimpleChange}) {\n\t\tif (changeRecord['src'] || changeRecord['name']) {\n\t\t\tif (this.svg) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\tthis.init();\n\t\t}\n\t\tif (changeRecord['stretch']) {\n\t\t\tthis.stylize();\n\t\t}\n\t}\n\n\tngDoCheck() {\n\t\tif (this.svg && this.differ) {\n\t\t\tconst changes = this.differ.diff(this._svgStyle);\n\t\t\tif (changes) {\n\t\t\t\tthis.applyChanges(changes);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate init() {\n\t\tif (this.name) {\n\t\t\tthis.icnSub = this.iconReg.getSvgByName(this.name).subscribe(this.initSvg.bind(this));\n\t\t\treturn;\n\t\t}\n\t\tthis.icnSub = this.iconReg.loadSvg(this.src).subscribe(this.initSvg.bind(this));\n\t}\n\n\tprivate initSvg(svg: SVGElement) : void {\n\t\tthis.setSvg(svg);\n\t\tthis.resetDiffer();\n\t}\n\n\tprivate destroy() {\n\t\tthis.svg = undefined;\n\t\tthis.differ = undefined;\n\t\tif (this.icnSub) {\n\t\t\tthis.icnSub.unsubscribe();\n\t\t}\n\t}\n\n\tprivate resetDiffer() {\n\t\tif (this._svgStyle && !this.differ) {\n\t\t\tthis.differ = this.differs.find(this._svgStyle).create();\n\t\t}\n\t}\n\n\tprivate setSvg(svg: SVGElement) {\n\t\tif (svg) {\n\t\t\tthis.svg = svg;\n\t\t\tconst icon = <SVGElement>svg.cloneNode(true);\n\t\t\tconst elem = this.element.nativeElement;\n\n\t\t\telem.innerHTML = '';\n\t\t\tthis.renderer.appendChild(elem, icon);\n\n\t\t\tthis.stylize();\n\t\t}\n\t}\n\n\tprivate stylize() {\n\t\tif (this.svg) {\n\t\t\tconst svg = this.element.nativeElement.firstChild;\n\n\t\t\tif (this.stretch === true) {\n\t\t\t\tthis.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\n\t\t\t} else if (this.stretch === false) {\n\t\t\t\tthis.renderer.removeAttribute(svg, 'preserveAspectRatio');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate applyChanges(changes: KeyValueChanges<string, string|number>) {\n\t\tchanges.forEachRemovedItem((record: KeyValueChangeRecord<string, string|number>) => this.setStyle(record.key, null));\n\t\tchanges.forEachAddedItem((record: KeyValueChangeRecord<string, string|number>) => this.setStyle(record.key, record.currentValue));\n\t\tchanges.forEachChangedItem((record: KeyValueChangeRecord<string, string|number>) => this.setStyle(record.key, record.currentValue));\n\t}\n\n\tprivate setStyle(nameAndUnit: string, value: string|number|null|undefined) {\n\t\tconst [name, unit] = nameAndUnit.split('.');\n\t\tvalue = value !== null && unit ? `${value}${unit}` : value;\n\t\tconst svg = this.element.nativeElement.firstChild;\n\n\t\tif (value !== null) {\n\t\t\tthis.renderer.setStyle(svg, name, value as string);\n\t\t} else {\n\t\t\tthis.renderer.removeStyle(svg, name);\n\t\t}\n\t}\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SvgHttpLoader, SvgLoader } from './svg-loader';\n\nexport interface AngularSvgIconConfig {\n\tloader?: Provider;\n}\n\n@NgModule({\n\timports:\t  [\n\t\tCommonModule,\n\t],\n\tdeclarations: [ SvgIconComponent ],\n\tproviders:    [ SVG_ICON_REGISTRY_PROVIDER, { provide: SvgLoader, useClass: SvgHttpLoader } ],\n\texports:      [ SvgIconComponent ]\n})\nexport class AngularSvgIconModule {\n\n\tstatic forRoot(config: AngularSvgIconConfig = {}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: AngularSvgIconModule,\n\t\t\tproviders: [\n\t\t\t\tconfig.loader || { provide: SvgLoader, useClass: SvgHttpLoader },\n\t\t\t\tSVG_ICON_REGISTRY_PROVIDER\n\t\t\t]\n\t\t}\n\t}\n}\n"],"names":["observableOf","observableThrowError"],"mappings":"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"}
