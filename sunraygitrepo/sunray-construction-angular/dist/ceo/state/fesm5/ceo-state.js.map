{"version":3,"file":"ceo-state.js.map","sources":["ng://@ceo/state/lib/classes/actions/payload/action.ts","ng://@ceo/state/lib/classes/actions/slice/type-for.ts","ng://@ceo/state/lib/classes/actions/slice/actions.ts","ng://@ceo/state/lib/classes/actions/slice/functions.ts","ng://@ceo/state/lib/effects/log.effects.ts","ng://@ceo/state/lib/effects/index.ts","ng://@ceo/state/lib/services/public-api.ts","ng://@ceo/state/lib/slices/application-config/actions.ts","ng://@ceo/state/lib/slices/application-config/initial-state.ts","ng://@ceo/state/lib/slices/application-config/effects.ts","ng://@ceo/state/lib/slices/application-config/reducer.ts","ng://@ceo/state/lib/slices/router/initial-state.ts","ng://@ceo/state/lib/slices/router/selectors.ts","ng://@ceo/state/lib/slices/router/custom-serializer.ts","ng://@ceo/state/lib/slices/application-config/selectors.ts","ng://@ceo/state/lib/slices/system-components/actions.ts","ng://@ceo/state/lib/slices/system-components/initial-state.ts","ng://@ceo/state/lib/slices/system-components/effects.ts","ng://@ceo/state/lib/slices/system-components/reducer.ts","ng://@ceo/state/lib/slices/system-components/selectors.ts","ng://@ceo/state/lib/util/selector-functions.ts","ng://@ceo/state/lib/state.ts","ng://@ceo/state/lib/state.module.ts"],"sourcesContent":["import { Action } from '@ngrx/store'\n\nexport class PayloadAction implements Action {\n  public type: string;\n\n  constructor(public payload?: any) {}\n}\n","import { Action } from '@ngrx/store';\n\n/**\n * This function coerces a string into a string literal type.\n * Using tagged union types in TypeScript 2.0, this enables\n * powerful typechecking of our reducers.\n *\n * Since every action label passes through this function it\n * is a good place to ensure all of our action labels\n * are unique.\n */\n\nconst typeCache: { [label: string]: boolean } = {};\n\nexport function type<T>(label: T | ''): T {\n  if (typeCache[<string>label]) {\n    throw new Error(`Action type \"${label}\" is not unique\"`);\n  }\n\n  typeCache[<string>label] = true;\n\n  return <T>label;\n}\n\nconst typeForCache: { [slice: string]: { [action: string]: string } } = {};\n\n// Takes the slice key + an action name\n// Return the UNIQUE String which defines that action type.\nexport function typeFor(slice: string, action: string) {\n  if (typeForCache[slice] && typeForCache[slice][action]) {\n    return typeForCache[slice][action];\n  }\n  else {\n    typeForCache[slice] = typeForCache[slice] || {};\n    typeForCache[slice][action] = `[${slice}] ${action}`;\n    type(typeForCache[slice][action]);\n    return typeForCache[slice][action];\n  }\n}\n","import { Action } from '@ngrx/store';\n\nimport { PayloadAction } from '../payload/index'\n\nimport { typeFor } from './type-for'\n\nexport const sliceActions = {\n  INIT: 'INIT',\n  INITIALIZED: 'INITIALIZED',\n  LOAD: 'LOAD',\n  LOAD_FAIL: 'LOAD_FAIL',\n  LOAD_SUCCESS: 'LOAD_SUCCESS',\n  PATCH: 'PATCH',\n  UPDATE: 'UPDATE',\n  UPDATE_SUCCESS: 'UPDATE_SUCCESS'\n};\n\nexport class SliceAction extends PayloadAction implements Action {\n  protected actionName = '';\n\n  constructor(public slice: string, public payload?: any) {\n    super(payload);\n  }\n\n  get type() {\n    return typeFor(this.slice, this.actionName);\n  }\n\n  get verb() {\n    return this.actionName;\n  }\n}\n\nexport class Init extends SliceAction {\n  protected actionName: string = sliceActions.INIT;\n}\n\nexport class Initialized extends SliceAction {\n  protected actionName: string = sliceActions.INITIALIZED;\n}\n\nexport class LoadFail extends SliceAction {\n  protected actionName: string = sliceActions.LOAD_FAIL;\n}\n\nexport class LoadSuccess extends SliceAction {\n  protected actionName: string = sliceActions.LOAD_SUCCESS;\n}\n\nexport class Patch extends SliceAction {\n  protected actionName: string = sliceActions.PATCH;\n\n  constructor(public slice: any, path: string[], val: any) {\n    super(slice, { path, val });\n  }\n}\n\nexport class Update extends SliceAction {\n  protected actionName: string = sliceActions.UPDATE;\n\n  constructor(public slice: any, path: string[], val: any) {\n    super(slice, { path, val });\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Action } from '@ngrx/store';\nimport { Actions } from '@ngrx/effects';\n\nimport { Observable ,  of } from 'rxjs';\n\nimport { PayloadAction }   from '../payload';\n\nimport { typeFor }         from './type-for';\nimport { SliceAction }     from './actions';\nimport * as ActionClasses  from './actions';\n\nexport function load(state: {}, action: SliceAction): any {\n    const newState = _.merge({}, state, {\n        hasError: false\n    });\n    return newState;\n    // return setSliceLoading(newState, action);\n};\n\nexport function loadFail(state, action: SliceAction): any {\n    const newState = _.merge({}, state, {\n        hasError: true,\n    });\n    return newState;\n    // return setSliceLoading(newState, action);\n}\n\nexport function loadSuccess(state, action): any {\n    const newState = _.merge({}, state, action.payload, {\n        hasError: false,\n    });\n    return newState;\n    // return setSliceLoading(newState, action);\n}\n\nexport function update(state: any, action: SliceAction): any {\n    return patchOrUpdate(state, action, true);\n}\n\nexport function patch(state: any, action: SliceAction): any {\n    return patchOrUpdate(state, action, false);\n}\n\n/**\n *\n * @param state\n * @param action contains a payload that could be a primitive value, an object or a function with argument state\n * that could return a primitive value or an object\n * @param update boolean true if updating, false if patching\n */\nfunction patchOrUpdate(state: any, action: SliceAction, update: boolean): any {\n    let obj = [state];\n    let patch = !update;\n    const path = action.payload.path;\n    const hasPath = path && path.length;\n    const pathLength = hasPath ? path.length : 0;\n    const key = path[path.length - 1]\n    let val = {};\n    let pos = pathLength;\n\n    // object\n    if (typeof action.payload.val === 'object') {\n        // return [val, pos];\n        val = action.payload.val;\n    } else if (typeof action.payload.val === 'function') {\n        // function\n        val[key] = action.payload.val(state);\n        pos--;\n        patch = true;\n    } else {\n        // primitive\n        val[key] = action.payload.val;\n        pos--;\n        patch = true;\n    }\n\n    let i = 0;\n    for (i = 0; i < pos; i++) {\n        obj[i + 1] = obj[i][path[i]];\n    }\n\n    if (patch) {\n        val = _.merge({}, obj[pos], val);\n    }\n\n    obj = [];\n    obj[pos] = val;\n    for (i = pos - 1; i >= 0; i--) {\n        obj[i] = {};\n        obj[i][path[i]] = obj[i + 1];\n    }\n\n    return { ...state, ...obj[0] };\n}\n","import { tap } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\nimport { Action }          from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\n\n@Injectable()\nexport class LogEffects {\n  constructor(private actions$: Actions) {}\n\n  @Effect({ dispatch: false })\n  log$: Observable<Action> =\n    this.actions$\n      .pipe(tap(action => this.log(action)));\n\n\n  private log(action: any, loggingEnabled: boolean = false): void {\n    if(loggingEnabled) {\n      console.log(action)\n    }\n  }\n}\n","import { LogEffects } from './log.effects'; \n//import { ApplicationConfigEffects } from './application-config.effects'; \n\nexport const effects: any[] = [\n  LogEffects,\n  //ApplicationConfigEffects,\n]\n","export const services: any[] = []\n","import { Action } from '@ngrx/store';\n\nimport { PayloadAction } from '../../classes';\n\nexport enum ApplicationConfigActionTypes {\n  ROUTER_NAVIGATION = 'ROUTER_NAVIGATION',\n  LAUNCH = '[ApplicationConfig] LAUNCH',\n  LOAD_RESOURCE_BY_ID = '[ApplicationConfig] LOAD_RESOURCE_BY_ID',\n  SET_PRIMARY_ENTITY = '[ApplicationConfig] SET_PRIMARY_ENTITY',\n  SET_RESOURCE_TYPE= '[ApplicationConfig] SET_RESOURCE_TYPE',\n}\n\nexport class RouterNavigation implements Action {\n  readonly type = ApplicationConfigActionTypes.ROUTER_NAVIGATION;\n  payload: any;\n}\n\nexport class Launch implements Action {\n  readonly type = ApplicationConfigActionTypes.LAUNCH;\n}\n\nexport class LoadResourceById implements Action {\n  readonly type = ApplicationConfigActionTypes.LOAD_RESOURCE_BY_ID;\n}\n\nexport class SetPrimaryEntity extends PayloadAction {\n  readonly type = ApplicationConfigActionTypes.SET_PRIMARY_ENTITY;\n}\n\nexport class SetResourceType extends PayloadAction {\n  readonly type = ApplicationConfigActionTypes.SET_RESOURCE_TYPE;\n}\n\nexport type ApplicationConfigActionsUnion =\n  Launch |\n  LoadResourceById |\n  RouterNavigation |\n  SetPrimaryEntity |\n  SetResourceType;\n","import { iApplicationConfigState } from './state';\n\nexport const applicationConfigInitialState: iApplicationConfigState = {\n  route: {},\n  launched: false,\n  resourceType: null,\n  primaryEntity: null,\n};\n","import * as _ from 'lodash';\n\nimport { Observable, defer } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\nimport { Store, Action }    from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\n\n@Injectable()\nexport class ApplicationConfigEffects {\n  constructor(\n    private store: Store<any>,\n    private actions$: Actions<any>,\n  ) {}\n\n\n  @Effect()\n  init$: Observable<Action> =\n    defer(() => {})\n\n}\n","import * as _ from 'lodash';\n\nimport {\n  ApplicationConfigActionTypes,\n  ApplicationConfigActionsUnion,\n} from './actions';\n\nimport {\n  iApplicationConfigState\n} from './state';\n\nexport function applicationConfigReducer(\n  state: iApplicationConfigState,\n  action: ApplicationConfigActionsUnion\n): iApplicationConfigState {\n  var deltaState = {};\n\n  switch (action.type) {\n    case 'ROUTER_NAVIGATION':\n      deltaState = {\n        route:  action.payload.routerState\n      };\n      return _.assign({}, state, deltaState); \n    case ApplicationConfigActionTypes.LAUNCH:\n      deltaState = {\n        launched: true\n      };\n      return _.assign({}, state, deltaState); \n    case ApplicationConfigActionTypes.SET_PRIMARY_ENTITY:\n      deltaState = {\n       primaryEntity: action.payload,\n      };\n      return _.assign({}, state, deltaState);\n    case ApplicationConfigActionTypes.SET_RESOURCE_TYPE:\n      deltaState = {\n        resourceType: action.payload,\n      };\n      return _.assign({}, state, deltaState);\n    default:\n      return state;\n  }\n}\n","import { RouterState } from './state';\n\nexport var routerInitialState: RouterState = {\n  state: null,\n  navigationId: null,\n}\n","import * as _ from 'lodash';\n\nimport { createFeatureSelector, createSelector, MemoizedSelector } from '@ngrx/store';\n\nimport { RouterState } from './state';\n\nexport const selectRouter = createFeatureSelector<any> ('router');\n\nlet selectState = (state: RouterState) => {\n  if(state && state.state) {\n    return state.state;\n  }\n  else {\n    return null;\n  }\n};\n\nexport const selectRouterState = createSelector(\n  selectRouter,\n  selectState,\n)\n\nlet selectParamId = (state: any) => {\n  if(state) {\n    return _.get(state, 'params.id');\n  }\n  else {\n    return null;\n  }\n}\n\nexport const selectRouteParamId = createSelector(\n  selectRouterState,\n  selectParamId,\n)\n\nexport const routerSelectors = {\n  selectState: selectRouterState,\n  selectRouteParamId: selectRouteParamId,\n}\n","import * as _ from 'lodash'\n\nimport { Injectable }                  from '@angular/core'\nimport { RouterStateSnapshot, Params } from '@angular/router'\n\nimport { StoreModule, ActionReducerMap } from '@ngrx/store'\n\nimport {\n  RouterStateSerializer,\n} from '@ngrx/router-store'\n\nimport { iRouterStateUrl } from './state'\n\n\n// https://github.com/ngrx/platform/blob/master/docs/router-store/api.md#navigation-actions\n// https://ngrx.io/guide/router-store/configuration\n\n@Injectable()\nexport class RouterCustomSerializer\n  implements RouterStateSerializer<iRouterStateUrl> {\n\n  serialize(routerState: RouterStateSnapshot): iRouterStateUrl {\n    let route = routerState.root\n\n    let params = {}\n    while (route.firstChild) {\n      Object.assign(params, route.params)\n      route = route.firstChild\n    }\n    Object.assign(params, route.params)\n\n    let segments = <any>_.get(routerState, 'root.children[0]._urlSegment.segments')\n\n    const {\n      url,\n      root: { queryParams },\n    } = routerState\n\n    return { url, params, segments, queryParams }\n  }\n}\n\n","import { pipe }   from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { \n  select, createFeatureSelector,\n  createSelector, MemoizedSelector\n} from '@ngrx/store';\n\nimport { routerSelectors }        from '../router';\n\nimport { iApplicationConfigState } from './state';\n\nexport const selectApplicationConfig  = createFeatureSelector<any> ('applicationConfig');\n\nlet selectLaunched = (state: iApplicationConfigState) => {\n  return state.launched;\n};\n\nexport const selectApplicationConfigLaunched = createSelector(\n  selectApplicationConfig,\n  selectLaunched,\n);\n\n\nlet selectResourceType = (state: iApplicationConfigState) => {\n  return state.resourceType;\n};\n\nexport const selectApplicationConfigResourceType = createSelector(\n  selectApplicationConfig,\n  selectResourceType,\n);\n\nlet buildResourceById = (resourceType, routeParamId) => {\n  let idParam = {\n    id: routeParamId\n  }\n  return Object.assign({}, resourceType, idParam);\n}\n\n/*\n{\n  feature: 'sunray',\n  type: 'companies',\n  id: 57\n}\n*/\n\nexport const selectApplicationConfigResourceById = createSelector(\n  selectApplicationConfigResourceType,\n  routerSelectors.selectRouteParamId,\n  buildResourceById,\n)\n\nlet selectPrimaryEntity = (state: iApplicationConfigState) => {\n  return state.primaryEntity;\n};\nexport const selectApplicationConfigPrimaryEntity = createSelector(\n  selectApplicationConfig,\n  selectPrimaryEntity,\n);\n\nexport const applicationConfigSelectors = {\n  launched: selectApplicationConfigLaunched,\n  resourceType: selectApplicationConfigResourceType,\n  resourceById: selectApplicationConfigResourceById,\n  primaryEntity: selectApplicationConfigPrimaryEntity,\n}\n","import { Action } from '@ngrx/store';\n\nimport { PayloadAction } from '../../classes';\n\nexport enum SystemComponentsActionTypes {\n  ACTIVATE_COMPONENT = '[SystemComponents] ACTIVATE_COMPONENT',\n}\n\nexport class ActivateComponent implements Action {\n  readonly type = SystemComponentsActionTypes.ACTIVATE_COMPONENT;\n  payload: any;\n}\n\n\nexport type SystemComponentsActionsUnion =\n  ActivateComponent;\n","import { iSystemComponentsState } from './state';\n\nexport const systemComponentsInitialState: iSystemComponentsState = {\n  activeComponents: [],\n};\n","import * as _ from 'lodash';\n\nimport { Observable, defer } from 'rxjs';\n\nimport { Injectable } from '@angular/core';\n\nimport { Store, Action }    from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\n\n@Injectable()\nexport class SystemComponentsEffects {\n  constructor(\n    private store: Store<any>,\n    private actions$: Actions<any>,\n  ) {}\n\n\n  @Effect()\n  activateComponent$: Observable<Action> =\n  defer(() => {})\n    // Probably dont worry about this at all\n   // this.actions$\n   //   .ofType('[SystemComponents] ACTIVATE_COMPONENT')\n   //   .pipe(\n   //     _.map((payload: any) => {\n   //       alert(\"System Component requested\")\n   //     })\n   //   )\n}\n","import * as _ from 'lodash';\n\nimport {\n  SystemComponentsActionTypes,\n  SystemComponentsActionsUnion,\n} from './actions';\n\nimport {\n  iSystemComponentsState\n} from './state';\n\nexport function systemComponentsReducer(\n  state: iSystemComponentsState,\n  action: SystemComponentsActionsUnion\n): iSystemComponentsState {\n  var deltaState = {};\n  switch (action.type) {\n    case '[SystemComponents] ACTIVATE_COMPONENT':\n      // Make sure you can reach this piont\n      let currentActiveComponents = state.activeComponents\n      let addActiveComponent = (components, component) => {\n        components.push(component)\n        return components\n      }\n      let components = _.reduce(currentActiveComponents, addActiveComponent, [])\n      components.push(action.payload)\n      \n      deltaState = {\n        activeComponents: components\n      };\n\n      return _.assign({}, state, deltaState);\n    default:\n      return state;\n  }\n}\n","import { pipe }   from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport {\n  select, createFeatureSelector,\n  createSelector, MemoizedSelector\n} from '@ngrx/store';\n\nimport { routerSelectors }        from '../router';\n\nimport { iSystemComponentsState } from './state';\n\nexport const selectSystemComponents = createFeatureSelector<any>('systemComponents')\n\n\nlet selectActiveComponents = (state: iSystemComponentsState) => {\n  return state.activeComponents\n};\n\nexport const selectSystemComponentsActiveComponents = createSelector(\nselectSystemComponents,\nselectActiveComponents,\n);\n\nexport const systemComponentsSelectors = {\n  slice: selectSystemComponents,\n  activeComponents: selectSystemComponentsActiveComponents\n}\n","export const propertySelector = () => {\n  return true;\n}\n","import { routerReducer } from '@ngrx/router-store';\n\nimport {\n  applicationConfigReducer,\n} from './slices/application-config/reducer'\n\nimport {\n  applicationConfigInitialState,\n} from './slices/application-config/initial-state'\n\nimport {\n  systemComponentsReducer,\n} from './slices/system-components/reducer'\n\nimport {\n  systemComponentsInitialState,\n} from './slices/system-components/initial-state'\n\nexport interface RootState {\n  applicationConfig?: any,\n  layout?: any,\n  theme?: any,\n  sunray?: any,\n  wordpress?: any,\n  router?: any,\n  systemComponents?: any,\n}\n\nexport const initialState: RootState = {\n  applicationConfig: applicationConfigInitialState,\n  systemComponents: systemComponentsInitialState,\n};\n\nexport const reducer: any = {\n  applicationConfig: applicationConfigReducer,\n  systemComponents: systemComponentsReducer,\n  router: routerReducer,\n}\n","import { NgModule } from '@angular/core'\n\n//import { StoreDevtoolsModule }         from '@ngrx/store-devtools'\n\nimport { StoreModule }                 from '@ngrx/store'\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer,\n} from '@ngrx/router-store'\nimport { EffectsModule } from '@ngrx/effects'\n\nimport { reducer, initialState }  from './state'\nimport { effects }                from './effects/index'\nimport { services }               from './services/index'\n\nimport {\n  ApplicationConfigEffects,\n  RouterCustomSerializer,\n  SystemComponentsEffects,\n} from './slices/index'\n\n// @DEEPAK, @JEETHU\n// This method (used below in the *serialize*\n// option for the StoreDevtoolsModule,\n// can be used for adding in the name to be displayed for the action.\n// (now it's always showing \"<UNDEFINED>\"\n// More Info:\n// https://github.com/ngrx/platform/blob/master/docs/store-devtools/README.md\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md#serialize\n//let storeDevtoolsReplacer = (key, value) => {\n//  return value\n//}\n\n//@ts-ignore\n@NgModule({\n  imports: [\n    StoreModule.forRoot(\n      reducer,\n      {\n        initialState: initialState,\n      }\n    ),\n    EffectsModule.forRoot([\n      ...effects,\n      ApplicationConfigEffects,\n      SystemComponentsEffects,\n    ]),\n    //@ts-ignore: This is the correct interface\n    //for some reason, the ngrx store-devtools package\n    //does not have this correct interface,\n    //they say *serialize* should be just boolean.\n    //See links above for more info.\n    // TODO -- This is not working when moved to the @ceo/state package\n    //StoreDevtoolsModule.instrument({\n    //  name: \"SunRay\",\n    //  //name: environment.applicationName,\n    //  maxAge: 25,\n    //  serialize: {\n    //    replacer: \"storeDevtoolsReplacer\",\n    //  },\n    //}),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router',\n    }),\n  ],\n  declarations: [],\n  providers: [\n    ...services,\n    {\n      provide: RouterStateSerializer,\n      useClass: RouterCustomSerializer\n    }\n  ],\n})\nexport class StateModule {}\n"],"names":["tslib_1.__extends","_.merge","tslib_1.__decorate","_.assign","_.get","_.reduce"],"mappings":"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"}
