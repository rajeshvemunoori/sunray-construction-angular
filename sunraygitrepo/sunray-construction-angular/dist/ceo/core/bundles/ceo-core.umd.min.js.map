{"version":3,"sources":["ng://@ceo/core/lib/interfaces/istorage.ts","ng://@ceo/core/lib/services/console.service.ts","node_modules/tslib/tslib.es6.js","ng://@ceo/core/lib/services/logging/log.target.ts","ng://@ceo/core/lib/services/logging/console.target.ts","ng://@ceo/core/lib/utils/config.ts","ng://@ceo/core/lib/utils/type.ts","ng://@ceo/core/lib/utils/string-utils/camel-case.ts","ng://@ceo/core/lib/utils/string-utils/pascal-case.ts","ng://@ceo/core/lib/utils/string-utils/singularize.ts","ng://@ceo/core/lib/utils/string-utils/plural-list.ts","ng://@ceo/core/lib/utils/string-utils/remove-prefix.ts","ng://@ceo/core/lib/utils/string-utils/slugify.ts","ng://@ceo/core/lib/utils/string-utils/words.ts","ng://@ceo/core/lib/utils/string-utils/snake-case.ts","ng://@ceo/core/lib/services/logging/log.service.ts","ng://@ceo/core/lib/services/router-extensions.service.ts","ng://@ceo/core/lib/services/window.service.ts","ng://@ceo/core/lib/services/app.service.ts","ng://@ceo/core/lib/services/storage.service.ts","ng://@ceo/core/lib/services/inflection.service.ts","ng://@ceo/core/lib/services/route-reusable-strategy.ts","ng://@ceo/core/lib/testing/mocks/window.mock.ts","ng://@ceo/core/lib/testing/mocks/router-extensions.mock.ts","ng://@ceo/core/lib/testing/providers/http.ts","ng://@ceo/core/lib/core.module.ts","ng://@ceo/core/lib/testing/providers/core.ts","ng://@ceo/core/lib/testing/providers/router.ts","ng://@ceo/core/lib/utils/json-to-query-params.ts","ng://@ceo/core/lib/utils/json-to-query-params-object.ts","ng://@ceo/core/lib/utils/string-utils/classify.ts","ng://@ceo/core/lib/utils/string-utils/kebab-case.ts","ng://@ceo/core/lib/utils/string-utils/pluralize.ts","ng://@ceo/core/lib/utils/string-utils/starts-with.ts"],"names":["USERNAME","ConsoleService","prototype","log","m","debug","error","warn","info","Injectable","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","create","__read","o","n","Symbol","iterator","r","e","i","call","ar","next","done","push","value","Debug","Info","Warning","Error","LogTargetBase","options","event","level","minLogLevel","writeToLog","Promise","resolve","ConsoleTarget","console","_this","_super","tslib_1.__extends","LogLevel","message","LogTargetOptions","Config","IS_WEB","PLATFORM_TARGET","PLATFORMS","WEB","IS_MOBILE_NATIVE","MOBILE_NATIVE","IS_MOBILE_HYBRID","MOBILE_HYBRID","IS_DESKTOP","DESKTOP","ENVIRONMENT","JSON","parse","exp","IS_DEBUG_MODE","key","DEBUG","RESET","LEVEL_1","LEVEL_2","LEVEL_3","LEVEL_4","typeCache","camelCase","_.camelCase","pascalCase","_.upperFirst","_.replace","singularize","toString","replace","pluralList","name","removePrefix","prefix","prefixLength","length","_.startsWith","slice","slugify","toLowerCase","words","_.snakeCase","LogService","targets","msg","_i","arguments","all","_.map","logger","logEvent","err","target","Inject","args","LogTarget","RouterExtensions","router","locationStrategy","navigate","commands","extras","navigateByUrl","url","back","Router","LocationStrategy","WindowService","navigator","location","alert","confirm","AppService","ENV","StorageService","setItem","localStorage","stringify","getItem","removeItem","InflectionService","inflect","inflections","_.reduce","inflection","applyInflection","capitalize","_.capitalize","classify","temp","kebabCase","_.kebabCase","pluralize","inflectionName","inflectionArgs","_.isString","_.head","_.flatten","_.drop","_.bind","_","apply","concat","__spread","RouteReusableStrategy","shouldDetach","route","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","future","curr","routeConfig","data","reuseRoute","RouteReuseStrategy","WindowMock","language","userAgent","WindowMockFrench","WindowMockNoLanguage","undefined","RouterExtensionsMock","providers","BaseRequestOptions","MockBackend","CoreModule","parentModule","forRoot","configuredProviders","ngModule","NgModule","imports","provide","useClass","decorators","type","Optional","SkipSelf","consoleService","logLevel","deps","multi","useFactory","c","useValue","window","additionalProviders","ReflectiveInjector","resolveAndCreate","Location","SpyLocation","MockLocationStrategy","APP_BASE_HREF","params","queryParams","param","json","_a","ObjectType","ArrayType","join","path","flatten","obj","result","val","label","pluralWord","filter","item"],"mappings":"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","sourcesContent":["// standard localStorage interface\nexport interface IStorage {\n  setItem(key: StorageKey, value: any): void;\n  getItem(key: StorageKey): any;\n  removeItem(key: StorageKey): void;\n}\n\n// to limit interaction with localStorage to a certain whitelist, you can list those keys here\nexport enum StorageKey {\n  USERNAME\n}\n","// angular\nimport { Injectable } from '@angular/core';\n\n// module\nimport { IConsole } from '../interfaces';\n\n@Injectable()\nexport class ConsoleService implements IConsole {\n  \n  public log(m: any): void { return; }\n  public debug(m: any): void { return; }\n  public error(m: any): void { return; }\n  public warn(m: any): void { return; }\n  public info(m: any): void { return; }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum LogLevel {\n  Debug = 0,\n  Info = 1,\n  Warning = 2,\n  Error = 4\n}\n\nexport interface LogEvent {\n  message: string | Object;\n  level: LogLevel;\n}\n\nexport abstract class LogTargetOptions {\n  minLogLevel: LogLevel;\n}\n\nexport abstract class LogTarget {\n  abstract log(event: LogEvent): Promise<any>;\n}\n\nexport abstract class LogTargetBase implements LogTarget {\n  constructor(protected options: LogTargetOptions) {\n  }\n\n  log(event: LogEvent): Promise<any> {\n    if (event.level >= this.options.minLogLevel) {\n      return this.writeToLog(event);\n    }\n    return Promise.resolve();\n  }\n\n  protected abstract writeToLog(event: LogEvent): Promise<any>;\n}\n","import { Injectable, Provider } from '@angular/core';\n\nimport { LogTargetBase, LogEvent, LogLevel, LogTargetOptions, LogTarget } from './log.target';\nimport { ConsoleService } from '../console.service';\n\n@Injectable()\nexport class ConsoleTarget extends LogTargetBase {\n  constructor(private console: ConsoleService, options: LogTargetOptions) {\n    super(options);\n  }\n\n  writeToLog(event: LogEvent) {\n    switch (event.level) {\n      case LogLevel.Debug:\n        this.console.log(event.message);\n        break;\n      case LogLevel.Info:\n        this.console.info(event.message);\n        break;\n      case LogLevel.Warning:\n        this.console.warn(event.message);\n        break;\n      case LogLevel.Error:\n        this.console.error(event.message);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n\nexport function createConsoleTarget(level: LogLevel, consoleService: ConsoleService) {\n  return new ConsoleTarget(consoleService, { minLogLevel: level });\n}\n\nexport function provideConsoleTarget(logLevel: LogLevel): Provider {\n  return {\n    provide: LogTarget, deps: [ConsoleService],\n    multi: true,\n    useFactory: (c: ConsoleService) => new ConsoleTarget(c, { minLogLevel: logLevel })\n  };\n}\n","// Feel free to extend this interface\n// depending on your app specific config.\nexport interface EnvConfig {\n  API?: string;\n  ENV?: string;\n  WORDPRESS_API_URL?: string;\n  SUNRAY_API_URL?: string;\n}\n\nexport interface iPlatforms {\n  WEB: string;\n  MOBILE_NATIVE: string;\n  MOBILE_HYBRID: string;\n  DESKTOP: string;\n}\n\nexport interface iConfig {}\n\nexport class Config implements iConfig {\n  public PageClass: any;\n\n  public static DEBUG = {\n    LEVEL_1: false, // .info only\n    LEVEL_2: false, // .warn only\n    LEVEL_3: false, // .error only\n    LEVEL_4: false  // .log + all the above\n  };\n\n  // supported platforms\n  public static PLATFORMS: iPlatforms = {\n    WEB: 'web',\n    MOBILE_NATIVE: 'mobile_native',\n    MOBILE_HYBRID: 'mobile_hybrid',\n    DESKTOP: 'desktop'\n  };\n\n  // current target (defaults to web)\n  public static PLATFORM_TARGET: string = Config.PLATFORMS.WEB;\n\n  // convenient platform checks\n  public static IS_WEB(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.WEB;\n  }\n\n  public static IS_MOBILE_NATIVE(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_NATIVE;\n  }\n\n  public static IS_MOBILE_HYBRID(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_HYBRID;\n  }\n\n  public static IS_DESKTOP(): boolean {\n    return Config.PLATFORM_TARGET === Config.PLATFORMS.DESKTOP;\n  }\n\n  public static ENVIRONMENT(): EnvConfig {\n    try {\n      return JSON.parse('<%= ENV_CONFIG %>');\n    } catch (exp) {\n      return {};\n    }\n  }\n\n  public static IS_DEBUG_MODE(): boolean {\n    for (let key in Config.DEBUG) {\n      if (Config.DEBUG[key]) {\n        // if any level is on, debug mode is on\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // reset debug defaults\n  public static RESET() {\n    for (let key in Config.DEBUG) {\n      Config.DEBUG[key] = false;\n    }\n  }\n}\n","/**\n * This function coerces a string into a string literal type.\n * Using tagged union types in TypeScript 2.0, this enables\n * powerful typechecking of our reducers.\n * \n * Since every action label passes through this function it\n * is a good place to ensure all of our action labels\n * are unique.\n */\n\nlet typeCache: { [label: string]: boolean } = {};\nexport function type<T>(label: T | ''): T {\n  if (typeCache[<string>label]) {\n    throw new Error(`Action type \"${label}\" is not unqiue\"`);\n  }\n\n  typeCache[<string>label] = true;\n\n  return <T>label;\n}\n","import * as _ from \"lodash\"\n\n// camelCase('Foo Bar')\n// => 'fooBar'\n \n//camelCase('--foo-bar--')\n// => 'fooBar'\n \n//camelCase('__FOO_BAR__')\n// => 'fooBar'\n\nexport function camelCase(value: string) {\n  return _.camelCase(value)\n}\n","import * as _ from \"lodash\";\n\nexport function pascalCase(\n  value: string\n): string {\n\n  if (value == 'print-batches') {\n    return \"PrintBatch\";\n  }\n  else {\n    return _.upperFirst(_.camelCase(_.replace(value, /_/g, \"-\")));\n  }\n}\n","// Simple singularization;\n// simply removes the trailing 's'\n// from any string\n\nexport function singularize(\n  value: string\n): string {\n\n  var re = /s$/\n  return value.toString().replace(re, \"\")\n}\n","export const pluralList = [\n  {\n    name: 'address',\n    value: 'addresses'\n  },\n  {\n    name: 'category',\n    value: 'categories'\n  },\n  {\n    name: 'gallery',\n    value: 'galleries'\n  },\n  {\n    name: 'company',\n    value: 'companies'\n  },\n]\n","import * as _ from 'lodash'\n\n// Removes the prefix from the front of the string,\n// if it exists\nexport function removePrefix(\n  value: string,\n  prefix: string = '',\n): string {\n\n  let prefixLength = prefix.length\n\n  if(_.startsWith(value, prefix)) {\n    return value.slice(prefixLength)\n  }\n\n  return value\n}\n","/**\n * convert the string into its slugified counterpart\n * @param value\n */\n\nexport function slugify(\n  value:string\n): string {\n\n  return value.toString().toLowerCase()\n    .replace(/\\s+/g, '-')           // Replace spaces with -\n    .replace(/_/g, '-')           // Replace underscores with -\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n    .replace(/^-+/, '')             // Trim - from start of text\n    .replace(/-+$/, '')            // Trim - from end of text\n}\n","import * as _ from \"lodash\"\n\nimport { slugify } from './slugify'\n\nexport function words(value: string) {\n  return slugify(value)\n    .replace(/-/g, ' ')\n}\n","/**\n * convert a string into its snake-cased (aka \"underscored\") counterpart\n * @param value\n */\n\nimport * as _ from \"lodash\"\n\n// _.snakeCase('Foo Bar')\n// => 'foo_bar'\n \n_.snakeCase('fooBar')\n// => 'foo_bar'\n \n_.snakeCase('--FOO-BAR--')\n// => 'foo_bar'\n\nexport function snakeCase(value: string) {\n  return _.snakeCase(value)\n}\n","// angular\nimport { Injectable, Inject, forwardRef } from '@angular/core';\nimport * as _ from 'lodash';\n\n// module\nimport { Config }                        from '../../utils'\nimport { ConsoleService }                from '../console.service'\nimport { LogTarget, LogEvent, LogLevel } from './log.target'\n\n@Injectable()\nexport class LogService {\n\n  constructor( @Inject(LogTarget) private targets: LogTarget[]) {\n  }\n\n  // debug (standard output)\n  public debug(...msg) {\n    if (Config.DEBUG.LEVEL_4) {\n      // console.debug does not work on {N} apps... use `log`\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, msg, LogLevel.Debug)));\n    }\n    return Promise.resolve();\n  }\n\n  // error\n  public error(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_3) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Error)));\n    }\n    return Promise.resolve();\n  }\n\n  // warn\n  public warn(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_2) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Warning)));\n    }\n    return Promise.resolve();\n  }\n\n  // info\n  public info(...err) {\n    if (Config.DEBUG.LEVEL_4 || Config.DEBUG.LEVEL_1) {\n      return Promise.all(_.map(this.targets, logger => this.logEvent(logger, err, LogLevel.Info)));\n    }\n    return Promise.resolve();\n  }\n\n  private logEvent(target: LogTarget, message: string | Object, level: LogLevel) {\n    return target.log({ level: level, message: message });\n  }\n}\n","// angular\nimport { Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { Router, UrlTree, NavigationExtras } from '@angular/router';\n\nexport interface ExtendedNavigationExtras extends NavigationExtras {\n  // Options for nativescript\n  clearHistory?: boolean;\n  animated?: boolean;\n  transition?: { // See -> https://docs.nativescript.org/api-reference/interfaces/_ui_frame_.navigationtransition.html\n    name?: string;\n    instance?: any;\n    duration?: number;\n    curve?: any;\n  };\n  // END - Options for nativescript\n}\n\nexport interface IRouterExtensions {\n  navigate(commands: Array<any>, extras?: ExtendedNavigationExtras): Promise<boolean>;\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise<boolean>;\n  back(): void;\n}\n\n@Injectable()\nexport class RouterExtensions implements IRouterExtensions {\n\n  constructor(public router: Router, private locationStrategy: LocationStrategy) { }\n\n  public navigate(commands: Array<any>, extras?: ExtendedNavigationExtras): Promise<boolean> {\n    return this.router.navigate(commands, extras);\n  }\n\n  public navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise<boolean> {\n    return this.router.navigateByUrl(url);\n  }\n\n  public back() {\n    this.locationStrategy.back();\n  }\n}\n","// angular\nimport { Injectable } from '@angular/core';\n\n// module\nimport { IWindow } from '../interfaces'\n\n@Injectable()\nexport class WindowService implements IWindow {\n  \n  public navigator: any = {};\n  public location: any = {};\n  public alert(msg: string): void { return; }\n  public confirm(msg: string): void { return; }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Config }     from '../utils';\n\nimport { LogService } from './logging/log.service';\n\n@Injectable()\nexport class AppService {\n  constructor(public log: LogService) {\n    this.log.debug(`AppService -> Config env: ${Config.ENVIRONMENT().ENV}`);\n  }\n\n  public debug(message) {\n    this.log.debug(message);\n  }\n}\n","import { Injectable } from '@angular/core'\n\nimport { IStorage, StorageKey } from '../interfaces'\n\n@Injectable()\nexport class StorageService implements IStorage {\n\n  setItem(key: StorageKey, value: any): void {\n    localStorage.setItem('' + key, value === null ? null : JSON.stringify(value));\n  }\n\n  getItem(key: StorageKey): any {\n    const value = localStorage.getItem('' + key);\n    return value === null ? null : JSON.parse(value);\n  }\n\n  removeItem(key: StorageKey): void {\n    localStorage.removeItem('' + key);\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  slugify, startsWith,\n  camelCase, removePrefix,\n  words,\n} from '../utils/index'\n\nexport type InflectionType = string | any[]\n\n@Injectable()\nexport class InflectionService {\n\n  inflect(value: string, inflections: InflectionType[]): string {\n    let applyInflection = (value: string, inflection: InflectionType) => {\n      return this.applyInflection(value, inflection)\n    }\n\n    return _.reduce(inflections, applyInflection, value)\n  }\n\n  camelCase(value: string): string {\n    return camelCase(value)\n  }\n\n  capitalize(value: string): string {\n    return _.capitalize(value)\n  }\n\n  classify(value: string): string {\n    let temp = this.pascalCase(value)\n    return this.singularize(temp)\n  }\n\n  kebabCase(value: string): string {\n    return _.kebabCase(value)\n  }\n\n  pascalCase(value: string): string {\n    if (value == 'print-batches') {\n      return \"PrintBatch\";\n    }\n    else {\n      return _.upperFirst(camelCase(_.replace(value, /_/g, \"-\")))\n    }\n  }\n\n  // Simple pluralization;\n  // just appends the letter 's'\n  // to the tne of the string.\n  pluralize(value: string): string {\n    return `${value}s`\n  }\n\n  removePrefix(value: string, prefix: string = ''): string {\n    return removePrefix(value, prefix)\n  }\n\n  // Simple singularization;\n  // simply removes the trailing 's'\n  // from any string\n  singularize(value: string): string {\n    var re = /s$/\n    return value.toString().replace(re, \"\")\n  }\n\n  slugify(value: string): string {\n    return slugify(value)\n  }\n\n  words(value: string): string {\n    return words(value)\n  }\n  \n  // Apply an inflection; if it does not exist, delegate it to underscore\n  private applyInflection(value: string, inflection: InflectionType): string {\n    var inflectionName\n    var inflectionArgs\n    if(_.isString(inflection)) {\n      inflectionName = inflection\n      inflectionArgs = [value]\n    }\n    else {\n      inflectionName = _.head(inflection)\n      inflectionArgs = _.flatten([value, _.drop(inflection)])\n    }\n\n    var executeInflection\n    if(this[inflectionName]) {\n      executeInflection = _.bind(this[inflectionName], this)\n    }\n    else {\n      executeInflection = _[inflectionName]\n    }\n\n    return executeInflection(...inflectionArgs)\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router'\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuseRoute\n  }\n}\n","export class WindowMock {\n  public navigator: any = {\n    language: 'en-US',\n    userAgent: 'testing'\n  };\n  public location: any = {};\n  public alert(msg: string): void {\n    return;\n  }\n  public confirm(msg: string): void {\n    return;\n  }\n}\n\nexport class WindowMockFrench extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = 'fr-US';\n  }\n}\n\nexport class WindowMockNoLanguage extends WindowMock {\n  constructor() {\n    super();\n    this.navigator.language = undefined;\n  }\n}\n","// angular\nimport { Injectable } from '@angular/core';\nimport { UrlTree } from '@angular/router';\n\n// module\nimport { IRouterExtensions, ExtendedNavigationExtras } from '../../services';\n\n@Injectable()\nexport class RouterExtensionsMock implements IRouterExtensions {\n  navigate(commands: Array<any>, extras?: ExtendedNavigationExtras): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  navigateByUrl(url: string | UrlTree, options?: ExtendedNavigationExtras): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  back(): void {\n    return;\n  }\n}\n","// angular\nimport { ReflectiveInjector } from '@angular/core';\nimport { BaseRequestOptions, ConnectionBackend } from '@angular/http';\nimport { MockBackend } from '@angular/http/testing';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\n\nlet providers: Array<any> = [\n  BaseRequestOptions,\n  MockBackend,\n];\n\n/*\n* For instances where you need the injector\n* @returns `ReflectiveInjector`\n*/\nexport function GET_HTTP_PROVIDERS_INJECTOR(additionalProviders?: Array<any>): ReflectiveInjector {\n\n  if (additionalProviders) {\n    providers = providers.concat(additionalProviders);\n  }\n\n  return ReflectiveInjector.resolveAndCreate(providers);\n}\n\n/*\n* For testing http services\n* @returns `Array<any>`\n*/\nexport function TEST_HTTP_PROVIDERS(): Array<any> {\n  return providers;\n}\n\n\n\n","// angular\nimport { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core'\n\nimport { RouteReuseStrategy } from '@angular/router';\n\n// module\nimport {\n  ConsoleService,\n  LogService,\n  RouterExtensions,\n  WindowService,\n  AppService,\n  StorageService,\n  InflectionService,\n  RouteReusableStrategy,\n} from './services/index'\n\n\n@NgModule({\n  imports: [],\n  providers: [\n    ConsoleService,\n    LogService,\n    RouterExtensions,\n    WindowService,\n    AppService,\n    StorageService,\n    InflectionService,\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    },\n  ]\n})\nexport class CoreModule {\n  static forRoot(configuredProviders: Array<any>): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: configuredProviders\n    };\n  }\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule already loaded; Import in root module only.');\n    }\n  }\n}\n","// app\n// Removing dev on analytics module\n//import { analyticsProviders } from '../../../analytics';\n\n// module\nimport { WindowService, StorageService, ConsoleService, LogService, LogTarget, ConsoleTarget, LogLevel, RouterExtensions, AppService } from '../../services';\n\n// mocks\nimport { WindowMock } from '../mocks/window.mock';\nimport { RouterExtensionsMock } from '../mocks/router-extensions.mock';\n\nexport function TEST_CORE_PROVIDERS(options?: any): Array<any> {\n  // options:\n  // window:   = custom window mock (mainly for changing out language)\n\n  let providers = [\n    { provide: ConsoleService, useValue: console },\n    { provide: StorageService, useValue: localStorage },\n    { provide: WindowService, useClass: (options && options.window) || WindowMock },\n    {\n      provide: LogTarget,\n      deps: [ConsoleService],\n      useFactory: (c: ConsoleService) => new ConsoleTarget(c, { minLogLevel: LogLevel.Debug }),\n      multi: true\n    },\n    LogService,\n    //analyticsProviders,\n    { provide: RouterExtensions, useClass: RouterExtensionsMock },\n    AppService\n  ];\n\n  return providers;\n}\n","// angular\nimport { Location, LocationStrategy, APP_BASE_HREF } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\n\nexport function TEST_LOCATION_PROVIDERS(): Array<any> {\n\n  return [\n    {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    { provide: APP_BASE_HREF, useValue: '/' }\n  ];\n}\n","import * as _ from \"lodash\";\n\nexport function jsonToQueryParams(params): any {\n  let queryParams = \"\";\n\n  for(let param in params) {\n    queryParams += '&filter[' + param + ']=' + params[param];\n  }\n\n  return queryParams;\n}\n","/**\n *\n * taken from:\n * https://github.com/DylanPiercey/q-flat\n *\n * @description\n * Creates a querystring style object from a nested one.\n *\n * @example\n * var result = flatten({ a: { b: 1 }, c: { d: 1 } })\n * result //-> { \"a[b]\": 1, \"c[d]\": 2 }\n *\n * @param obj The object to flatten.\n */\n\nexport function jsonToQueryParamsObject(json): any {\n  const { toString, hasOwnProperty } = Object.prototype\n  const ObjectType = \"[object Object]\"\n  const ArrayType = \"[object Array]\"\n\n  /**\n   * Join path keys using query string `a[b]` style syntax.\n   */\n  let join = (path: string | void, key: string) => {\n    return path != null ? path + \"[\" + key + \"]\" : key\n  }\n\n  let flatten = (obj: any, path?: string, result?: any) => {\n    const type = toString.call(obj)\n\n    if (result === undefined) {\n      if (type === ObjectType) {\n        result = {}\n      } else if (type === ArrayType) {\n        result = []\n      } else {\n        return\n      }\n    }\n\n    if (type === ArrayType) {\n      //result[join(path, '[]')] = obj\n      console.log(\"The path is \" + path)\n      result[path] = obj\n    }\n    else {\n      for (const key in obj) {\n        /* istanbul ignore if */\n        if (!hasOwnProperty.call(obj, key)) {\n          continue\n        }\n\n        const val = obj[key]\n        /*\n        if (val == null) {\n          continue\n        }\n        */\n\n        switch (toString.call(val)) {\n          case ArrayType:\n            let resultKey = join(path, key) + \"[]\"\n            result[resultKey] = val\n            break\n          case ObjectType:\n            flatten(val, join(path, key), result)\n            break\n          default:\n            result[join(path, key)] = val\n            break\n        }\n      }\n    }\n\n\n    return result\n  }\n  \n  return flatten(json)\n}\n","import { pascalCase }  from './pascal-case';\nimport { singularize } from './singularize';\n\nexport function classify(\n  value: string\n): string {\n  return singularize(pascalCase(value));\n}\n","import * as _ from \"lodash\"\n\n// _.kebabCase('Foo Bar');\n// => 'foo-bar'\n \n// _.kebabCase('fooBar');\n// => 'foo-bar'\n \n// _.kebabCase('__FOO_BAR__');\n// => 'foo-bar'\n\nexport function kebabCase(value: string) {\n  return _.kebabCase(value)\n}\n","import { pluralList } from './plural-list'\n\nexport function pluralize(\n  value: string\n): string {\n  let pluralWord = pluralList.filter(item => item.name === value)\n  if(pluralWord.length > 0){\n    return pluralWord[0].value\n  }\n  return value.toString().concat('s');\n}\n","import * as _ from \"lodash\";\n\nexport function startsWith(\n  value: string,\n  target: string\n): boolean {\n\n  if(!target) {\n    return true;\n  }\n\n  if(!(value && target)) {\n    return true;\n  }\n\n  return _.startsWith(value.toLowerCase(), target.toLowerCase());\n\n}\n"]}