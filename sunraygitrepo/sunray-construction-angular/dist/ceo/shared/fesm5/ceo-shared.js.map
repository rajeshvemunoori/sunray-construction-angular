{"version":3,"file":"ceo-shared.js.map","sources":["ng://@ceo/shared/lib/declarables/directives/click-stop-event-bubble/click-stop-event-bubble.directive.ts","ng://@ceo/shared/lib/declarables/directives/container.directive.ts","ng://@ceo/shared/lib/declarables/directives/navigation.directive.ts","ng://@ceo/shared/lib/declarables/directives/route-transformer/route-transformer.directive.ts","ng://@ceo/shared/lib/declarables/directives/scroll-top/scroll-top.directive.ts","ng://@ceo/shared/lib/declarables/directives/index.ts","ng://@ceo/shared/lib/declarables/pipes/custom-search.pipe.ts","ng://@ceo/shared/lib/declarables/pipes/safe-html.pipe.ts","ng://@ceo/shared/lib/declarables/pipes/index.ts","ng://@ceo/shared/lib/providers/decorators/mixin.decorator.ts","ng://@ceo/shared/lib/providers/mixins/attribute-getter-setter.mixin.ts","ng://@ceo/shared/lib/providers/mixins/attribute-updater.mixin.ts","ng://@ceo/shared/lib/providers/mixins/data-inspector.mixin.ts","ng://@ceo/shared/lib/providers/mixins/memoizer.mixin.ts","ng://@ceo/shared/lib/providers/mixins/property-delegator.mixin.ts","ng://@ceo/shared/lib/declarables/components/base/base.component.ts","ng://@ceo/shared/lib/declarables/components/base/index.ts","ng://@ceo/shared/lib/declarables/components/attribute-list/attribute-list.component.ts","ng://@ceo/shared/lib/declarables/components/attribute-list/index.ts","ng://@ceo/shared/lib/declarables/components/body/body.component.ts","ng://@ceo/shared/lib/declarables/components/body/index.ts","ng://@ceo/shared/lib/declarables/components/breadcrumb/breadcrumb.component.ts","ng://@ceo/shared/lib/declarables/components/breadcrumb/index.ts","ng://@ceo/shared/lib/declarables/components/select-list/select-list.component.ts","ng://@ceo/shared/lib/declarables/components/card-select-list/card-select-list.component.ts","ng://@ceo/shared/lib/declarables/components/card-select-list/index.ts","ng://@ceo/shared/lib/declarables/components/card/card.component.ts","ng://@ceo/shared/lib/declarables/components/card/index.ts","ng://@ceo/shared/lib/declarables/components/datepicker/date-parser-formatter.service.ts","ng://@ceo/shared/lib/declarables/components/datepicker/datepicker.component.ts","ng://@ceo/shared/lib/declarables/components/datepicker/index.ts","ng://@ceo/shared/lib/declarables/components/dropdown/dropdown.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/custom-content/custom-content.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/item/item.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/link/link.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/text/text.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/index.ts","ng://@ceo/shared/lib/declarables/components/field/field.component.ts","ng://@ceo/shared/lib/declarables/components/field/index.ts","ng://@ceo/shared/lib/declarables/components/form-group/form-group.component.ts","ng://@ceo/shared/lib/declarables/components/form-group/index.ts","ng://@ceo/shared/lib/providers/classes/api-config.ts","ng://@ceo/shared/lib/providers/classes/breadcrumb.ts","ng://@ceo/shared/lib/providers/classes/card.ts","ng://@ceo/shared/lib/providers/classes/pane.ts","ng://@ceo/shared/lib/providers/services/notification.service.ts","ng://@ceo/shared/lib/providers/services/ngb-date-adapter.service.ts","ng://@ceo/shared/lib/providers/services/input-control.service.ts","ng://@ceo/shared/lib/providers/services/csv-to-json.service.ts","ng://@ceo/shared/lib/providers/tokens/api-config.ts","ng://@ceo/shared/lib/providers/tokens/custom-elements-config.ts","ng://@ceo/shared/lib/providers/tokens/pane-list.ts","ng://@ceo/shared/lib/providers/tokens/providers.ts","ng://@ceo/shared/lib/providers/services/pane-factory.service.ts","ng://@ceo/shared/lib/providers/services/pane-provider.service.ts","ng://@ceo/shared/lib/providers/services/pane-manager.service.ts","ng://@ceo/shared/lib/providers/services/api/base/request-options-builder.service.ts","ng://@ceo/shared/lib/providers/services/api/base/request-url-builder.service.ts","ng://@ceo/shared/lib/providers/services/api/base/response-parser.service.ts","ng://@ceo/shared/lib/providers/services/api/base/api.service.ts","ng://@ceo/shared/lib/providers/services/api/base/index.ts","ng://@ceo/shared/lib/providers/services/api/json-api/response-parser.service.ts","ng://@ceo/shared/lib/providers/services/api/json-api/index.ts","ng://@ceo/shared/lib/providers/services/api/index.ts","ng://@ceo/shared/lib/providers/services/auth/auth.service.ts","ng://@ceo/shared/lib/providers/services/auth/index.ts","ng://@ceo/shared/lib/providers/services/cache/request-cache.service.ts","ng://@ceo/shared/lib/providers/services/cache/index.ts","ng://@ceo/shared/lib/providers/services/custom-element/manager.service.ts","ng://@ceo/shared/lib/providers/services/custom-element/factory.service.ts","ng://@ceo/shared/lib/providers/services/custom-element/index.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/caching-interceptor.service.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/noop-interceptor.service.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/index.ts","ng://@ceo/shared/lib/providers/services/index.ts","ng://@ceo/shared/lib/providers/guards/auth-guard.ts","ng://@ceo/shared/lib/providers/guards/index.ts","ng://@ceo/shared/lib/declarables/components/form/form.component.ts","ng://@ceo/shared/lib/declarables/components/form/index.ts","ng://@ceo/shared/lib/declarables/components/iframe/iframe.component.ts","ng://@ceo/shared/lib/declarables/components/iframe/index.ts","ng://@ceo/shared/lib/declarables/components/input/input.component.ts","ng://@ceo/shared/lib/declarables/components/input/index.ts","ng://@ceo/shared/lib/declarables/components/item/item.component.ts","ng://@ceo/shared/lib/declarables/components/item/index.ts","ng://@ceo/shared/lib/declarables/components/list/list.component.ts","ng://@ceo/shared/lib/declarables/components/list/index.ts","ng://@ceo/shared/lib/declarables/components/navbar-toggle/navbar-toggle.component.ts","ng://@ceo/shared/lib/declarables/components/navbar-toggle/index.ts","ng://@ceo/shared/lib/declarables/components/navigation/navigation.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-item/nav-item.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-link/nav-link.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav/nav.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-text/nav-text.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/index.ts","ng://@ceo/shared/lib/declarables/components/page/page.component.ts","ng://@ceo/shared/lib/declarables/components/page/index.ts","ng://@ceo/shared/lib/declarables/components/pane/pane.component.ts","ng://@ceo/shared/lib/declarables/components/pane/index.ts","ng://@ceo/shared/lib/declarables/components/search/search.component.ts","ng://@ceo/shared/lib/declarables/components/search/index.ts","ng://@ceo/shared/lib/declarables/components/select-list/index.ts","ng://@ceo/shared/lib/declarables/components/svg-loader/svg-loader.component.ts","ng://@ceo/shared/lib/declarables/components/svg-loader/index.ts","ng://@ceo/shared/lib/declarables/components/table/table.component.ts","ng://@ceo/shared/lib/declarables/components/table/index.ts","ng://@ceo/shared/lib/declarables/components/index.ts","ng://@ceo/shared/lib/declarables/pages/base/base.page.ts","ng://@ceo/shared/lib/declarables/pages/index.ts","ng://@ceo/shared/lib/declarables/declarables.module.ts","ng://@ceo/shared/lib/providers/providers.module.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/close/close.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/dialog.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/widget.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/header/header.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/footer/footer.component.ts","ng://@ceo/shared/lib/common/dialogs/components/modal-navigation-item/modal-navigation-item.component.ts","ng://@ceo/shared/lib/common/dialogs/components/modal/modal.component.ts","ng://@ceo/shared/lib/common/dialogs/tokens/dialogs-config.ts","ng://@ceo/shared/lib/common/dialogs/tokens/providers.ts","ng://@ceo/shared/lib/common/dialogs/services/config.service.ts","ng://@ceo/shared/lib/common/dialogs/services/mat-dialog-adapter.service.ts","ng://@ceo/shared/lib/common/dialogs/services/dialog.service.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/components.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/components.ts","ng://@ceo/shared/lib/common/dialogs/components/modal/components.ts","ng://@ceo/shared/lib/common/dialogs/components/modal-navigation-item/components.ts","ng://@ceo/shared/lib/common/dialogs/components/components.ts","ng://@ceo/shared/lib/common/dialogs/services/services.ts","ng://@ceo/shared/lib/common/dialogs/dialogs.module.ts","ng://@ceo/shared/lib/common/forms/classes/form-member.ts","ng://@ceo/shared/lib/common/forms/classes/form-group.ts","ng://@ceo/shared/lib/common/forms/classes/form-item.ts","ng://@ceo/shared/lib/common/forms/classes/form-wrapper.ts","ng://@ceo/shared/lib/common/forms/classes/label-element.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/base.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/checkbox.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/select.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/input.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/textbox.form-control.ts","ng://@ceo/shared/lib/common/forms/components/form/form.component.ts","ng://@ceo/shared/lib/common/forms/components/form-control/form-control.component.ts","ng://@ceo/shared/lib/common/forms/components/form-group/form-group.component.ts","ng://@ceo/shared/lib/common/forms/components/form-item/form-item.component.ts","ng://@ceo/shared/lib/common/forms/components/form-item-error/form-item-error.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/label/label.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/base/base.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/input.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/base/base.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/checkbox/checkbox.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/radio/radio.component.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/form-control-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/form-group-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-control-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-group-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-item-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-member-factory.service.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/components.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/components.ts","ng://@ceo/shared/lib/common/forms/components/elements/components.ts","ng://@ceo/shared/lib/common/forms/components/components.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/services.ts","ng://@ceo/shared/lib/common/forms/services/services.ts","ng://@ceo/shared/lib/common/forms/forms.module.ts","ng://@ceo/shared/lib/common/html/components/html-video/html-video.component.ts","ng://@ceo/shared/lib/common/html/constants/mime-types.ts","ng://@ceo/shared/lib/common/html/components/html-video/components.ts","ng://@ceo/shared/lib/common/html/components/components.ts","ng://@ceo/shared/lib/common/html/html.module.ts"],"sourcesContent":["import { Directive, HostListener } from \"@angular/core\"\n\n@Directive({\n  selector: \"[ceoClickStopEventBubble]\"\n})\nexport class ClickStopEventBubbleDirective\n{\n  @HostListener(\"click\", [\"$event\"])\n  public onClick(event: any): void {\n    this.stopEventBubble(event)\n  }\n\n  protected stopEventBubble(event) {\n    if(event.stopPropagation) {\n      event.stopPropagation()\n    }\n    if(event.preventDefault) {\n      event.preventDefault()\n    }\n  }\n}\n","import {\n  Directive, ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[shared-declarables-container]'\n})\nexport class ContainerDirective {\n  constructor(\n    public viewContainerRef: ViewContainerRef\n  ) { }\n}\n","import {\n  Directive, ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[sharedDeclarablesNavigation]'\n})\nexport class NavigationDirective {\n\n  constructor(\n    public viewContainerRef: ViewContainerRef\n  ) { }\n\n}\n","import * as _ from 'lodash'\n\nimport {\n  Directive, ElementRef,\n  HostListener, EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { Router } from '@angular/router'\nimport {\n  HttpParams,\n} from '@angular/common/http'\n\n\n\nimport { startsWith } from '@ceo/core'\n\n\nimport {\n  ClickStopEventBubbleDirective,\n} from '../click-stop-event-bubble/click-stop-event-bubble.directive'\n\n@Directive({\n  selector: '[ceoRouteTransformer]'\n})\nexport class RouteTransformerDirective extends ClickStopEventBubbleDirective {\n  @Output()\n  routeEvent: EventEmitter<any> = new EventEmitter<any>()\n  \n  constructor(private el: ElementRef, private router: Router) {\n    super()\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event) {\n    let linkElement = this.getLink(event)\n\n    if(linkElement) {\n      this.handleLink(linkElement)\n      this.stopEventBubble(event)\n    }\n    else {\n      return\n    }\n  }\n\n  private getLink(event) {\n    if (event.target.tagName === 'A') {\n      return event.target\n    }\n    else if (event.target.parentElement.tagName === 'A') {\n      return event.target.parentElement\n    }\n    else {\n      return null\n    }\n  }\n\n  private handleLink(element) {\n    if(this.canRoute(element)) {\n      this.navigate(element)\n    }\n    else {\n      this.emitRouteEvent(element)\n    }\n  }\n\n  private emitRouteEvent(element): void {\n    let event = {\n      target: element\n    }\n    this.routeEvent.emit(event)\n  }\n\n  private canRoute(element) {\n    return window.location.origin == element.origin\n  }\n\n  private navigate(element) {\n    let url = element.pathname\n    let opts = {}\n    let extras = this.buildNavigationExtras(element)\n    this.router.navigate([url, opts], extras)\n  }\n\n  private buildNavigationExtras(element) {\n    let extras = (<any>{})\n\n    let queryParams = this.buildQueryParams(element)\n    if(!_.isEmpty(queryParams)) {\n      extras.queryParams = queryParams\n    }\n\n    let fragment = this.getUrlFragment(element)\n    if(!_.isEmpty(fragment)) {\n      extras.fragment = fragment\n    }\n\n    return extras\n  }\n\n  private getUrlFragment(element) {\n    return element.hash.substring(1)\n  }\n\n  private buildQueryParams(element) {\n    let pairs = element.search.slice(1).split('&')\n    var result = {}\n    if(pairs[0].length > 0) {\n      _.forEach(pairs, function(pair) {\n        pair = pair.split('=')\n        result[pair[0]] = decodeURI(pair[1] || '')\n      })\n    }\n    return result \n  }\n}\n","import { \n  Observable,\n} from 'rxjs'\n\nimport { filter } from 'rxjs/operators'\n\nimport {\n  Directive,\n  HostListener,\n  OnInit,\n} from \"@angular/core\"\n\nimport {\n  Router,\n  NavigationEnd,\n} from '@angular/router'\n\n\n@Directive({\n  selector: \"[ceoScrollTop]\"\n})\nexport class ScrollTopDirective implements OnInit {\n  private _routerNavigationEnd$: Observable<NavigationEnd>\n  \n  constructor(\n    private router: Router,\n  ) {}\n  \n  ngOnInit() {\n    this.routerNavigationEnd$\n      .subscribe(event => this.scrollTop())\n\n    this.scrollTop()\n  }\n\n  get routerNavigationEnd$(): Observable<NavigationEnd> {\n    if(!this._routerNavigationEnd$) {\n      this._routerNavigationEnd$ = this.buildNavEndEvent()\n    }\n\n    return this._routerNavigationEnd$\n  }\n\n  private buildNavEndEvent(): Observable<NavigationEnd> {\n    return this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ) as Observable<NavigationEnd>\n  }\n  \n  scrollTop() {\n    console.log(\"scroll to the top -- directive\")\n    window.scrollTo(0, 0)\n  }\n}\n\n","import { ClickStopEventBubbleDirective }  from './click-stop-event-bubble/click-stop-event-bubble.directive'\nimport { ContainerDirective }             from './container.directive'\nimport { NavigationDirective }            from './navigation.directive'\nimport { RouteTransformerDirective }      from './route-transformer/route-transformer.directive'\nimport { ScrollTopDirective }             from './scroll-top/scroll-top.directive'\n\n\nexport const directives: any[] = [\n  ClickStopEventBubbleDirective,\n  ContainerDirective,\n  NavigationDirective,\n  RouteTransformerDirective,\n  ScrollTopDirective,\n]\n\nexport { ClickStopEventBubbleDirective }\nexport { ContainerDirective }\nexport { NavigationDirective }\nexport { RouteTransformerDirective }\nexport { ScrollTopDirective }\n","import * as _  from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'customSearch'\n})\nexport class CustomSearchPipe implements PipeTransform {\n  transform(collection: any, args?: any): any {\n    if (!_.isEmpty(args) && collection) {\n      return this.filter(collection, args);\n    }\n\n    return collection;\n  }\n\n  filter(collection, attributes) {\n    let filterCollection = (value, key) => {\n      if(_.isEmpty(value)) {\n        return collection.entities\n      }\n\n      return _.reduce(collection.entities, function(entities, entity) {\n        if(_.includes(_.lowerCase(entity[key]),\n          _.lowerCase(value)) &&\n          !_.isEmpty(value)) {\n          entities.push(entity);\n          return entities;\n        }\n        return entities;\n      }, [])\n    }\n\n    return _.uniqBy(\n      _.flatten(_.map(attributes, filterCollection)),\n      'id');\n  }\n}\n","import { PipeTransform, Pipe } from \"@angular/core\"\nimport { DomSanitizer, SafeHtml }        from '@angular/platform-browser'\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(\n    private sanitized: DomSanitizer,\n  ) {}\n\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value)\n  }\n}\n","import { CustomSearchPipe }   from './custom-search.pipe'\nimport { SafeHtmlPipe }       from './safe-html.pipe'\n\nexport const pipes: any[] = [\n  CustomSearchPipe,\n  SafeHtmlPipe,\n]\n\nexport { CustomSearchPipe }\nexport { SafeHtmlPipe }\n","// https://medium.com/@dmyl/mixins-as-class-decorators-in-typescript-angular2-8e09f1bc1f02\n\n// Decorator to create mixins\n\nexport function Mixin(baseCtors: Function[]) {\n  return function (derivedCtor: Function) {\n    baseCtors.forEach(baseCtor => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n        const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name)\n\n        if (name === 'constructor')\n        return\n\n        if (\n          descriptor &&\n          (!descriptor.writable || !descriptor.configurable ||\n           !descriptor.enumerable || descriptor.get || descriptor.set\n          )\n         ) {\n          Object.defineProperty(derivedCtor.prototype, name, descriptor)\n        }\n        else {\n          derivedCtor.prototype[name] = baseCtor.prototype[name]\n        }\n\n      })\n    })\n  }\n}\n","// https://stackoverflow.com/questions/45236274/is-it-possible-to-create-dynamic-getters-setters-in-typescript\n\nimport * as _ from 'lodash'\n\nimport { camelCase } from '@ceo/core'\n\n\nexport const createGetSet = (\n  obj: any,\n  props,\n  key: string,\n  name: string\n) => {\n\n\n  let generateGetSet = (props, key, name) => {\n    let getProp = _.bind(obj.getProp, obj)\n    let setProp = _.bind(obj.setProp, obj)\n\n    return {\n      get: () => getProp(props, key),\n      set: (value: any) => {\n        if(getProp(props, key) !== value) {\n          setProp(props, key, value)\n        }\n      },\n    }\n  }\n\n  let getSetProps = generateGetSet(props, key, name)\n  Object.defineProperty(obj, name, getSetProps)\n\n}\n\nexport class AttributeGetterSetter {\n  attributes: any = {}\n  updatedKeys: string[] = []\n\n  createAttributeSettersAndGetters(): void {\n    this.createSettersAndGetters(this.attributes)\n  }\n\n  createSettersAndGetters(props: any): void {\n    for(let key in props) {                                                    \n      var camelizedKey = camelCase(key)\n      createGetSet(this, props, key, camelizedKey)\n      createGetSet(this, props, key, key)\n    } \n  }\n\n  setProp(props, key, value): void {\n    props[key] = value\n\n    if(this.updatedKeys) {\n      this.updatedKeys.push(key)\n    }\n  }\n\n  getProp(props, key): any {\n    return props[key]\n  }\n}\n","import * as _ from 'lodash'\n\nimport { AttributeGetterSetter } from './attribute-getter-setter.mixin'\n\nexport class AttributeUpdater extends AttributeGetterSetter {\n  updateAttributes(attributes: any): void {\n    _.extend(this.attributes, attributes)\n    this.createSettersAndGetters(this.attributes)\n  }\n}\n","export class DataInspector {\n  inspectData(data: any) {\n    var inspect = (data) => {\n      console.log(data)\n    }\n\n    if(data.subscribe) {\n      data.subscribe(data => inspect(data))\n    }\n    else {\n      inspect(data)\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nexport class Memoizer {\n  memoized(property: string, value: any): any {\n    if(!this[property]) {\n      let theFunction = _.bind(value, this)\n      let result = theFunction()\n      this[property] = <any>result\n    }\n\n    return this[property]\n  }\n}\n","import * as _ from 'lodash'\n\nexport class Helper {\n  constructor(\n    public source: any,\n    public target: any,\n    public propNames: any,\n    public bindToSource: boolean,\n  ) {}\n\n  run() {\n    let copyProperty = _.bind(this.copyProperty, this)\n    _.map(this.propNames, copyProperty)\n  }\n\n  private copyProperty(propName) {\n    let sourceDescriptor = this.getDescriptor(this.source, propName)\n\n    if(sourceDescriptor) {\n      this.copyFromSource(propName, sourceDescriptor)\n    }\n    else {\n      _.assignIn(this.target, _.pick(this.source, propName) )\n    }\n  }\n\n  private copyFromSource(propName, propDescriptor) {\n    if(this.bindToSource) {\n\n      let valueWithBinding = (value) => {\n        if(_.isFunction(value)) {\n          return _.bind(value, this.source)\n        }\n        else {\n          return value\n        }\n      }\n\n      propDescriptor = _.mapValues(propDescriptor, valueWithBinding)\n    }\n\n    Object.defineProperty(this.target, propName, _.clone(propDescriptor))\n  }\n\n  private getDescriptor(source, propName) {\n    let descriptor = Object.getOwnPropertyDescriptor(source, propName)\n    if(descriptor) {\n      return descriptor\n    }\n    else {\n      let parentSource = Object.getPrototypeOf(source)\n      if(parentSource) {\n        return this.getDescriptor(parentSource, propName)\n      } else {\n        return null\n      }\n    }\n  }\n}\n\nexport class PropertyDelegator {\n  delegatedProperties: any = {}\n\n  setDelegatedProperties(\n    source: any,\n    propNames: string[],\n    bindToSource: boolean = true\n  ): void {\n\n    let helper = new Helper(source, this, propNames, bindToSource)\n    helper.run()\n  }\n\n  setAllDelegatedProperties() {\n    let setDelegatedProperties = (propNames, sourceName) => {\n      let source = this[sourceName]\n      this.setDelegatedProperties(source, propNames)\n    }\n    _.forEach(this.delegatedProperties, setDelegatedProperties)\n  }\n}\n","import { Component, OnInit } from '@angular/core'\n\nimport {\n  Mixin,\n} from '../../../providers/decorators/index'\n\nimport {\n  DataInspector,\n} from '../../../providers/mixins/index'\n\n@Component({\n  selector: 'shared-base',\n  template: '',\n  styleUrls: ['./base.component.scss']\n})\n@Mixin([DataInspector])\nexport class BaseComponent implements OnInit {\n  id: string;\n  \n  constructor() {\n    this.log()\n  }\n\n  ngOnInit() {}\n\n  log(isEnabled: boolean = false) {\n    if(isEnabled) {\n      let date = new Date()\n      this.id = date.toISOString()\n      let message = \"The id of the \" + this.constructor.name + \" component is \" + this.id\n      console.log(message)\n    }\n  }\n\n  //Mixin properties\n  inspectData(...args: any[]) {}\n}\n","import { BaseComponent } from './base.component'\n\nexport const components: any[] = [\n  BaseComponent,\n]\n\nexport { BaseComponent }\n","import { Observable } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\n\nimport { \n  Component, Input, OnInit\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-attribute-list',\n  templateUrl: './attribute-list.component.html',\n  styleUrls: ['./attribute-list.component.scss']\n})\nexport class AttributeListComponent extends BaseComponent {\n  @Input()\n  attributeEntity$: Observable<any>\n  @Input()\n  attributeEntityLabels$: Observable<any>\n\n  attributeEntities$: Observable<any>\n\n  ngOnInit() {\n    this.attributeEntities$ = this.attributeEntity$\n      .pipe(mergeMap((entity) => {\n        return entity.getAttributeEntities$(this.attributeEntityLabels$)\n      }))\n  }\n\n  getAttributeValue(attributeEntity, attribute) {\n    return attributeEntity[attribute]\n  }\n}\n","import { AttributeListComponent } from './attribute-list.component'\n\nexport const components: any[] = [\n  AttributeListComponent,\n]\n\nexport { AttributeListComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport { Component, OnInit } from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-body',\n  templateUrl: 'body.component.html',\n  styleUrls: ['./body.component.scss'],\n})\nexport class BodyComponent extends BaseComponent {}\n","import { BodyComponent } from './body.component'\n\nexport const components: any[] = [\n  BodyComponent,\n]\n\nexport { BodyComponent }\n","import {\n  Observable,\n} from 'rxjs'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport {\n  iBreadcrumb,\n} from '../../../providers/interfaces/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent extends BaseComponent {\n  @Input() breadcrumb$: Observable<iBreadcrumb>\n  @Output() itemSelected = new EventEmitter<any>()\n\n  onItemClick(item) {\n    let event = {\n      item: item\n    }\n    this.itemSelected.emit(event)\n  }\n}\n","import { BreadcrumbComponent } from './breadcrumb.component'\n\nexport const components: any[] = [\n  BreadcrumbComponent,\n]\n\nexport { BreadcrumbComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-select-list',\n  templateUrl: './select-list.component.html',\n  styleUrls: ['./select-list.component.scss']\n})\nexport class SelectListComponent extends BaseComponent {\n  @Input()\n  items$: Observable<any>;\n\n  @Input()\n  selectedItem: any;\n\n  @Output()\n  itemEmitter: EventEmitter<any> = new EventEmitter();\n\n  isSelectedItem(item) {\n    return (this.selectedItem == item);\n  }\n\n  select(item) {\n    this.selectedItem = item;\n    this.emit();\n  }\n\n  emit() {\n    let event = {\n      item: this.selectedItem\n    }\n    this.itemEmitter.emit(event);\n  }\n}\n","import { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n\n\nimport { SelectListComponent } from '../select-list/select-list.component'\n\n@Component({\n  selector: 'ceo-shared-declarables-card-select-list',\n  templateUrl: './card-select-list.component.html',\n  styleUrls: ['./card-select-list.component.css']\n})\nexport class CardSelectListComponent extends SelectListComponent {\n  @Input()\n  cards$: Observable<any>\n\n  constructor() {\n    super()\n  }\n}\n","import { CardSelectListComponent } from './card-select-list.component'\n\nexport const components: any[] = [\n  CardSelectListComponent,\n]\n\nexport { CardSelectListComponent }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent extends BaseComponent {\n  @Input()\n  card: any;\n}\n","import { CardComponent } from './card.component'\n\nexport const components: any[] = [\n  CardComponent,\n]\n\nexport { CardComponent }\n","// Current Implementation taken from:\n// https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/datepicker/ngb-date-parser-formatter.ts\n\nimport * as  _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  NgbDateStruct,\n  NgbDate,\n} from '@ng-bootstrap/ng-bootstrap'\n\nexport function padNumber(value: number): string {\n  if (_.isNumber(value)) {\n    return `0${value}`.slice(-2)\n  } else {\n    return ''\n  }\n}\n\n@Injectable()\nexport class DateParserFormatter {\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-')\n      if (dateParts.length === 1 && _.isNumber(dateParts[0])) {\n        return {year: _.toInteger(dateParts[0]), month: null, day: null}\n      } else if (dateParts.length === 2 && _.isNumber(dateParts[0]) && _.isNumber(dateParts[1])) {\n        return {year: _.toInteger(dateParts[0]), month: _.toInteger(dateParts[1]), day: null}\n      } else if (dateParts.length === 3 && _.isNumber(dateParts[0]) && _.isNumber(dateParts[1]) && _.isNumber(dateParts[2])) {\n        return {year: _.toInteger(dateParts[0]), month: _.toInteger(dateParts[1]), day: _.toInteger(dateParts[2])}\n      }\n    }\n    return null\n  }\n\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    if(!date) {\n      return ''\n    }\n\n    let separator = '/'\n    let year = _.isNumber(date.year) ? padNumber(date.year) : ''\n    let month = _.isNumber(date.month) ? padNumber(date.month) : ''\n    let day = _.isNumber(date.day) ? padNumber(date.day) : ''\n\n    return _.join([month, day, year], separator)\n  }\n}\n","import { Component, Input, } from '@angular/core'\nimport { FormControl }       from '@angular/forms'\n\nimport {\n  NgbDate,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport { DateParserFormatter } from './date-parser-formatter.service'\n\n@Component({\n  selector: 'ceo-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [\n    {\n      provide: NgbDateParserFormatter,\n      useClass: DateParserFormatter,\n    },\n  ],\n})\nexport class DatepickerComponent extends BaseComponent {\n  @Input() control: FormControl\n\n  ngOnInit() {\n    super.ngOnInit()\n    this.control.valueChanges.subscribe(value => this.onControlValue(value))\n  }\n\n  onDateSelect(date: NgbDate) {\n    //console.log(\"date selected\")\n  }\n\n  onControlValue(value: Date) {\n    //console.log(\"on control value\")\n  }\n}\n","import { DatepickerComponent } from './datepicker.component'\n\nexport const components: any[] = [\n  DatepickerComponent,\n]\n\nexport { DatepickerComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport {\n  iNavigationMenu,\n} from '../../../providers/interfaces'\n\n@Component({\n  selector: 'ceo-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  className(item) {\n    let classes = [item.className]\n\n    if(item.hasSubmenu()) {\n      classes.push('dropdown-column')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","declare var $: any\n\nimport * as _ from 'lodash'\n\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-custom-content',\n  templateUrl: './custom-content.component.html',\n  styleUrls: ['./custom-content.component.scss']\n})\nexport class CustomContentComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  onRouteEvent(event: any) {\n    event.item = this.item\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  displayType() {\n    return this.item.displayType\n  }\n\n  className(item) {\n    let classes = [item.className]\n\n    if(item.hasSubmenu()) {\n      classes.push('dropdown-column')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss']\n})\nexport class LinkComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import { DropdownComponent }      from './dropdown.component'\nimport { CustomContentComponent as DropdownCustomContentComponent }  from './custom-content/custom-content.component'\nimport { ItemComponent as DropdownItemComponent }                    from './item/item.component'\nimport { LinkComponent as DropdownLinkComponent}                     from './link/link.component'\nimport { TextComponent as DropdownTextComponent}                     from './text/text.component'\n\nexport const components: any[] = [\n  DropdownComponent,\n  DropdownItemComponent,\n  DropdownLinkComponent,\n  DropdownTextComponent,\n  DropdownCustomContentComponent,\n]\n\nexport { DropdownComponent }\n\nexport { DropdownItemComponent }\nexport { DropdownLinkComponent }\nexport { DropdownTextComponent }\nexport { DropdownCustomContentComponent }\n","import {\n  Component, OnInit, Input\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.scss']\n})\nexport class FieldComponent extends BaseComponent {\n  @Input()\n  field: any\n\n  @Input()\n  formGroup: FormGroup\n}\n","import { FieldComponent } from './field.component'\n\nexport const components: any[] = [\n  FieldComponent,\n]\n\nexport { FieldComponent }\n\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport {\n  iInputGroup,\n} from '../../../providers/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss']\n})\nexport class FormGroupComponent extends BaseComponent {\n  @Input()\n  inputGroup: iInputGroup\n\n  @Input()\n  formGroup: FormGroup\n\n  isInputGroup(input) {\n    return (input.constructor.name == 'InputGroup')\n  }\n}\n","import { FormGroupComponent } from './form-group.component'\n\nexport const components: any[] = [\n  FormGroupComponent,\n]\n\nexport { FormGroupComponent }\n","import {\n  iApiConfig,\n  iApiRequestParams,\n  iApiResourceTypeMap,\n} from '../interfaces/index'\n\nexport class ApiConfig implements iApiConfig {\n  _url: string\n  _defaultBodyParams: any\n  _defaultQueryParams: any\n  _resourceTypes: any\n\n  constructor(params) {\n    this._url = params.url\n    this._defaultQueryParams = params.defaultQueryParams || {}\n    this._defaultBodyParams = params.defaultBodyParams || {}\n    this._resourceTypes = params.resourceTypes || {}\n  }\n\n  get url(): string {\n    return this._url\n  }\n\n  get defaultQueryParams(): iApiRequestParams {\n    return this._defaultQueryParams\n  }\n\n  get defaultBodyParams(): iApiRequestParams {\n    return this._defaultBodyParams\n  }\n\n  get resourceTypes(): iApiResourceTypeMap {\n    return this._resourceTypes\n  }\n}\n\n","import * as _ from 'lodash'\n\nimport {\n  iBreadcrumb,\n  iBreadcrumbItem,\n} from '../interfaces/index'\n\nexport class Breadcrumb implements iBreadcrumb {\n  public length: number\n\n  constructor(\n    public items: iBreadcrumbItem[] = []\n  ) {\n    this.length = items.length\n  }\n\n\n  // Iterator\n  // Allows us to use the collections in angular directives\n  // (i.e. ngFor, etc)\n  [Symbol.iterator]() {\n    let current = 0\n    let items = this.items\n    return  {\n      next: function () {\n        let noItems = _.isEmpty(items)\n        let value = noItems ? null : items[current++]\n        let done = noItems ? true : current > items.length\n        return {\n          value: value,\n          done: done\n        }\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { iCard } from '../interfaces/index'\n\nexport class Card implements iCard {\n  data: any\n  title: string\n  iconName: string\n\n  constructor(attributes) {\n    this.setAttributes(attributes)\n  }\n\n  private setAttributes(attributes) {\n    let setAttribute = (value, key) => {\n      this[key] = value\n    }\n\n    _.map(attributes, _.bind(setAttribute, this))\n  }\n}\n","import * as _ from 'lodash'\n\nimport { iPane } from '../interfaces/index'\n\nimport { Card } from './card'\n\nexport class Pane implements iPane {\n  name: string\n  iconName: string\n  componentClass: any\n  active: boolean\n  directive: string\n\n  constructor(attributes) {\n    this.setAttributes(attributes)\n  }\n\n  toCard() {\n    let attributes = {\n      data: this,\n      title: this.name,\n      iconName: this.iconName,\n    }\n    return new Card(attributes)\n  }\n\n  private setStatus(status) {\n    this.active = status\n  }\n\n  private setAttributes(attributes) {\n    let setAttribute = (value, key) => {\n      this[key] = value\n    }\n\n    _.map(attributes, _.bind(setAttribute, this))\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NotificationService {\n  constructor() { }\n\n  showNotification(message, action, timeout) {}\n}\n","// Native Date adapter for NgbDatepicker. Taken from:\n// https://ng-bootstrap.github.io/#/components/datepicker/examples\n\nimport * as _ from \"lodash\";\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  NgbDateAdapter, NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return this.isValidDate(date) ? this.ngbDateStructFromValidDate(date) : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? this.dateFromValidNgbDateStruct(date) : null;\n  }\n\n  private isValidDate(date: Date): Boolean {\n    return (date && _.has(date, 'getFullYear'));\n  }\n\n  private ngbDateStructFromValidDate(date: Date): NgbDateStruct {\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    };\n  }\n\n  private dateFromValidNgbDateStruct(date: NgbDateStruct): Date {\n    return new Date(date.year, date.month - 1, date.day);\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\nimport {\n  FormControl, FormGroup,\n  Validators, AbstractControl,\n} from '@angular/forms'\n\nimport {\n  iInputGroup,\n} from '../interfaces/index'\n\nexport interface iAbstractControlMap {\n  [key: string]: AbstractControl\n}\n\nexport class InputControlService {\n  toFormGroup(inputGroup: iInputGroup) {\n    return this.buildFormGroup(inputGroup)\n  }\n\n  private buildFormGroup(inputGroup): FormGroup {\n    return new FormGroup(this.buildControls(inputGroup))\n  }\n\n  private buildControls(inputGroup: iInputGroup): iAbstractControlMap {\n    return _.reduce(\n      inputGroup.inputs,\n      _.bind(_.partial(this.buildAbstractControl, inputGroup), this),\n      {}\n    )\n  }\n\n  private buildAbstractControl(inputGroup, controls, input) {\n    var build = this.getFormControlBuilder(input)\n    input.key = this.generateInputKey(input, inputGroup)\n    controls[input.key] = build(input)\n    return controls\n  }\n\n  private getFormControlBuilder(input) {\n    if(input.constructor.name == 'InputGroup') {\n      return _.bind(this.buildFormGroup, this)\n    }\n    else {\n      return _.bind(this.buildFormControl, this)\n    }\n  }\n\n  private generateInputKey(input, inputGroup) {\n    return input.key\n  }\n\n\n  private buildFormControl(inputControl) {\n    let value = inputControl.value || ''\n    return new FormControl(\n      value,\n      Validators.compose(inputControl.validators)\n    )\n  }\n}\n","import * as _ from 'lodash'\n\nimport * as csv_ from \"csvtojson\";\n\nimport { Injectable } from '@angular/core';\n\nconst csvToJson = csv_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvToJsonService {\n  constructor() { }\n\n  csvToJsonFromString(csvString: string = '', opts: any = {}): any {\n    let defaults = {\n      noheader: false,\n    }\n    opts = _.extend(opts, defaults)\n    return csvToJson(opts).fromString(csvString)\n  }\n\n  csvToJsonFromFilePath(filePath: string = ''): any{\n    return csvToJson().fromFile(filePath)\n  }\n}\n","import { InjectionToken }   from '@angular/core'\n\nexport const API_CONFIG =\n  new InjectionToken<any>(\"API Config\")\n","import { InjectionToken }   from '@angular/core'\n\nexport const CUSTOM_ELEMENTS_CONFIG =\n  new InjectionToken<any>(\"Custom Elements Config\")\n","import { InjectionToken }   from '@angular/core';\n\nexport const PaneList =\n  new InjectionToken<any>(\"Pane List\");\n","import { API_CONFIG } from './api-config'\nimport { CUSTOM_ELEMENTS_CONFIG } from './custom-elements-config'\n\nexport const providers: any[] = [\n  {\n    provide: API_CONFIG,\n    useValue: {}\n  },\n  {\n    provide: CUSTOM_ELEMENTS_CONFIG,\n    useValue: {},\n    multi: true,\n  },\n]\n","\nimport * as _ from 'lodash'\n\nimport {\n  of as observableOf,\n  Observable,\n} from 'rxjs'\n\nimport { Injectable, Inject } from '@angular/core'\n\nimport { iPaneFactory, iPane } from '../interfaces/index'\n\nimport { Pane }     from '../classes/index'\n\nimport { PaneList } from '../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneFactory implements iPaneFactory {\n  constructor(\n    @Inject(PaneList) public paneList,\n  ) {}\n\n  build$(): Observable<iPane[]> {\n    let panes = _.map(this.paneList, this.buildPane)\n    return observableOf(panes)\n  }\n\n  private buildPane(attributes): iPane {\n    return new Pane(attributes)\n  }\n}\n","// Loads the pane list\n// Initializes it to the Pane class\n// Serves as Pane Factory;\n// uses pane attributes to build Pane objects\n\nimport * as _ from 'lodash'\n\nimport {\n  zip as observableZip,  \n  Observable, of, BehaviorSubject,\n} from 'rxjs';\nimport {\n  map,\n  startWith,\n} from 'rxjs/operators'\n\nimport { Injectable } from '@angular/core';\n\nimport { iPaneProvider, iPane } from '../interfaces/index'\n\nimport { PaneFactory }     from './pane-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneProvider implements iPaneProvider {\n  _panes$: Observable<iPane[]>;\n  _activePane$: BehaviorSubject<any> = new BehaviorSubject<any>(null)\n\n  private panes: iPane[] = [];\n\n  constructor(\n    private paneFactory: PaneFactory\n  ) {\n    this._panes$ = this.paneFactory.build$()\n\n    this._panes$.subscribe(panes => this.setPanes(panes))\n  }\n\n  get panes$(): Observable<iPane[]> {\n    return this._panes$\n  }\n\n  get activePane$(): Observable<iPane> {\n    return this._activePane$.pipe(\n      startWith(this.activePaneFromPanes(this.panes))\n    )\n  }\n\n  setPaneActiveStatus(pane, activeStatus): boolean {\n    pane.setStatus(activeStatus)\n    if(activeStatus) {\n      this.emitActivePane(pane)\n    }\n    return true\n  }\n\n  private emitActivePanes(panes) {\n    let pane = this.activePaneFromPanes(panes)\n    this.emitActivePane(pane)\n  }\n\n  private emitActivePane(pane) {\n    this._activePane$.next(pane) \n  }\n\n  private setPanes(panes) {\n    this.panes = panes\n    this.emitActivePanes(this.panes)\n  }\n\n  private activePaneFromPanes(panes: iPane[]): iPane {\n    return _.find(panes, 'active')\n  }\n}\n\n\n/*\n  private panesByName$(paneName): Observable<iPane[]> {\n    return this._panes$.pipe(\n      map(panes => this.panesByName(panes, paneName))\n    )\n  }\n\n  private panesByName(panes, paneName): iPane[] {\n    return (<iPane[]> _.filter(\n      panes, \n      {name: paneName}\n    ))\n  }\n*/\n","// Service to manage panes depending on the page.\n// \n\nimport {\n  Observable,\n} from 'rxjs';\n\nimport { first } from 'rxjs/operators';\n\nimport * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { PaneProvider } from './pane-provider.service'\n\nimport { iPane } from '../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneManager {\n  constructor(\n    private paneProvider: PaneProvider\n  ) {}\n\n  get panes$(): Observable<iPane[]> {\n    return this.paneProvider.panes$\n  }\n\n  get activePane$(): Observable<iPane> {\n    return this.paneProvider.activePane$\n  }\n\n  activatePane(pane: iPane): void {\n    let activePane$ = this.activePane$.pipe(\n      first()\n    )\n    activePane$.subscribe(activePane => {\n      this.setPaneActiveStatus(activePane, false)\n      this.setPaneActiveStatus(pane, true)\n    })\n  }\n\n  private setPaneActiveStatus(\n    pane: iPane = null,\n    activeStatus: boolean = false): boolean {\n\n    if(!pane) {\n      return false\n    }\n\n    return this.paneProvider.setPaneActiveStatus(pane, activeStatus)\n  }\n\n}\n/*\n *\n  private activateNextPane(): any {\n    let pane = this.getNextPane()\n    this.validatePane(pane)\n    //this.activatePane(pane)\n    return pane\n  }\n\n  private activatePreviousPane(): any {\n    //return previous pane.\n  }\n\n  private validatePane(pane: any) {\n    //Check and validate certain conditions before activaion\n  }\n\n  private getNextPane(): any {\n    return 'Next Pane' \n  }\n\n*/\n","import * as _ from 'lodash'\n\nimport {\n  Injectable,\n  Inject,\n} from '@angular/core'\n\nimport { HttpParams } from '@angular/common/http'\nimport { HttpParamsOptions } from '@angular/common/http/src/params'\n\nimport {\n  jsonToQueryParamsObject,\n} from '@ceo/core'\n\n\nimport {\n  ApiUrl,\n  iApiConfig,\n  iApiQueryParams,\n  iApiRequestParams,\n  iApiResourceIdentifier,\n  iApiResourceTypeConfig,\n  iApiRequestOptions,\n  iApiRequestPayload,\n} from '../../../interfaces/index'\n\nimport {\n  API_CONFIG,\n} from '../../../tokens/index'\n\n@Injectable()\nexport class RequestOptionsBuilder {\n  constructor(\n    @Inject(API_CONFIG) public apiConfig,\n  ) { }\n\n  build(\n    method: string,\n    url: ApiUrl,\n    payload: iApiRequestPayload\n  ) {\n    if(this.isBodyRequest(method)) {\n      return this.getBody(payload.resourceIdentifier.data)\n    }\n    else {\n      return this.getOptions(url, payload.resourceIdentifier)\n    }\n  }\n\n  getBody(data: any): any {\n    let body = this.sanitizedParams(data)\n    body = _.merge({}, body, this.apiConfig.defaultQueryParams)\n\n    return {\n      body: body,\n      observe: 'response',\n    }\n  }\n\n  getOptions(url: ApiUrl, ri: iApiResourceIdentifier): iApiRequestOptions {\n    return {\n      params: this.getParams(ri),\n      responseType: this.getResponseType(url),\n      observe: 'response',\n    }\n  }\n  \n\n  getParams(ri: iApiResourceIdentifier): any {\n    let params =\n      _.merge({}, this.apiConfig.defaultQueryParams, this.filterParams(ri))\n\n    return jsonToQueryParamsObject(params)\n  }\n\n  getResponseType(url): string {\n    if(this.isTextResponseType(url)) {\n      return 'text'\n    }\n    else {\n      return 'json'\n    }\n  }\n\n  protected isBodyRequest(method: string): boolean {\n    let bodyMethods = ['post', 'put']\n    return _.includes(bodyMethods, method)\n  }\n\n  protected isTextResponseType(url) {\n    return _.endsWith(url, 'csv')\n  }\n\n  protected filterParams(ri: iApiResourceIdentifier) {\n    let filter = this.getFilter(ri)\n\n    if(filter) {\n      return {\n        filter: this.sanitizedParams(filter)\n      }\n    }\n    else {\n      return {}\n    }\n  }\n\n  protected getFilter(ri: iApiResourceIdentifier) {\n    return _.get(ri, 'filter')\n  }\n\n  protected sanitizedParams(params) {\n    let snakeCase = (value, key) => {\n      return _.snakeCase(key)\n    }\n    return _.mapKeys(params, snakeCase)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport {\n  ApiUrl,\n  iApiConfig,\n  iApiUrlProvider,\n  iApiQueryParams,\n  iApiResourceIdentifier,\n  iApiResourceTypeConfig,\n} from '../../../interfaces/index'\n\nimport {\n  API_CONFIG,\n} from '../../../tokens/index'\n\n@Injectable()\nexport class RequestUrlBuilder {\n  constructor(\n    @Inject(API_CONFIG) public apiConfig,\n  ) { }\n\n  build(ri: iApiResourceIdentifier): ApiUrl {\n    return this.getResourceTypeUrl(ri)\n  }\n\n  protected getResourceTypeUrl(ri: iApiResourceIdentifier): ApiUrl {\n    let fragments = [\n      this.apiConfig.url,\n      this.getResourceTypeUrlFragment(ri),\n    ]\n\n    if(this.isSingleResourceRequest(ri)) {\n      let singleRequestFragment = this.singleResourceRequestFragment(ri)\n      fragments.push(singleRequestFragment)\n    }\n\n    return _.join(fragments, '/')\n  }\n\n  protected getResourceTypeUrlFragment(ri: iApiResourceIdentifier): any {\n    let resourceType = this.getResourceType(ri)\n    let resourceConfig = resourceType.config\n    return resourceConfig.urlFragment(ri)\n  }\n\n  protected getResourceType(\n    ri: iApiResourceIdentifier,\n  ): iApiResourceTypeConfig {\n\n    let ofType = (resourceType: iApiResourceTypeConfig) => {\n      return resourceType.config.hasResourceType(ri)\n    }\n\n    return _.find(this.apiConfig.resourceTypes, ofType)\n  }\n\n  protected isSingleResourceRequest(ri: iApiResourceIdentifier): boolean {\n    return !_.isNil(ri.id)\n  }\n\n  protected singleResourceRequestFragment(ri: iApiResourceIdentifier): string {\n    return ri.id\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { iResponseParser } from '../../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseParser implements iResponseParser { \n  parse(data: any): any {\n    return _.flatten([data])\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Observable,\n  of as observableOf,\n  throwError as observableThrowError,\n  pipe,\n} from 'rxjs'\nimport {\n  map, mergeMap,\n  catchError,\n} from 'rxjs/operators'\n\nimport { Injectable } from '@angular/core'\nimport { Response }   from '@angular/http'\n\nimport {\n  HttpClient, HttpParams,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http'\n\nimport {\n  ApiUrl,\n  iApiResourceIdentifier,\n  iApiResponse,\n  iApiService,\n  iApiErrorResponse,\n  iApiRequestPayload,\n} from '../../../interfaces/index'\n\nimport { CsvToJsonService }         from '../../csv-to-json.service'\nimport { RequestUrlBuilder }     from './request-url-builder.service'\nimport { RequestOptionsBuilder } from './request-options-builder.service'\nimport { ResponseParser }           from './response-parser.service'\n\n@Injectable()\nexport class ApiService implements iApiService {\n  constructor(\n    private http: HttpClient,\n    private csvToJsonService: CsvToJsonService,\n    private responseParser: ResponseParser,\n    private urlBuilder: RequestUrlBuilder,\n    private optionsBuilder: RequestOptionsBuilder,\n  ) {}\n\n  post$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('post', payload)\n  }\n\n  delete$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('delete', payload)\n  }\n\n  get$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('get', payload)\n  }\n\n  put$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('put', payload)\n  }\n\n  // Aliases\n  update$(payload: iApiRequestPayload): Observable<any> {\n    return this.put$(payload)\n  }\n\n  create$(payload: iApiRequestPayload): Observable<any> {\n    return this.post$(payload)\n  }\n\n  // Private methods\n  private handleRequest$(method, payload) {\n    return this.executeRequest$(method, payload).pipe(\n      catchError((error: iApiErrorResponse) => {\n        return this.handleError$(error, payload)\n      }),\n      mergeMap((response: HttpResponse<any>) => {\n        return this.processedResponse$(response, payload.resourceIdentifier)\n      }),\n    )\n  }\n\n  private handleError$(\n    error: iApiErrorResponse,\n    payload: iApiRequestPayload\n  ): Observable<any> {\n    console.error(\"Error in API Service: \" + error)\n    return observableThrowError(error)\n  }\n\n  private executeRequest$(\n    method: string,\n    payload: iApiRequestPayload\n  ) {\n    let url = this.getUrl(payload.resourceIdentifier)\n    let httpOpts = this.getHttpOpts(method, url, payload)\n\n    return this.http[method](url, httpOpts)\n  }\n\n  private getUrl(ri: iApiResourceIdentifier) {\n    return this.urlBuilder.build(ri)\n  }\n\n  private getHttpOpts(\n    method: string,\n    url: ApiUrl,\n    payload: iApiRequestPayload\n  ) {\n    return this.optionsBuilder.build(method, url, payload)\n  }\n\n  private processedResponse$(\n    apiResponse: HttpResponse<any>,\n    ri: iApiResourceIdentifier\n  ) {\n\n    return this.jsonData$(apiResponse.body).pipe(\n      map(json => this.sanitizedData(json, ri)),\n      map(json => this.buildApiResponse(json, ri)),\n    )\n  }\n\n  private jsonData$(data): Observable<any> {\n    if(_.isString(data)) {\n      return this.csvToJsonData$(data)\n    }\n    else {\n      return observableOf(data)\n    }\n  }\n\n  // Remove empty keys and attributes\n  private sanitizedData(data, ri) {\n    var isSimpleVariable = (value) => {\n      return (_.isNumber(value) || _.isString(value))\n    }\n\n    var isPresent = (obj) => {\n      return obj !== '' && obj !== null\n    }\n\n    let sanitize = (object) => {\n      // Removed this pickBy call -- null and empty string\n      // values are specified by backend and should\n      // be preserved; might this cause issues elsewhere?\n      // They should be fixed in the consumer.\n      //var filteredObject = _.pickBy(object, isPresent)\n      var filteredObject = object\n\n      let finalFilter = (obj) => {\n        if(obj !== filteredObject && _.isPlainObject(obj)) {\n          return sanitize(obj)\n        }\n        else if(_.isArray(obj)) {\n          if(_.isEmpty(obj) || isSimpleVariable(obj[0])) {\n            return obj\n          }\n          return _.reject(_.map(obj, sanitize), _.isEmpty)\n        }\n\n        return undefined\n      }\n\n      return _.cloneDeepWith(filteredObject, finalFilter)\n    }\n\n    var sanitizedData\n    if(_.isArray(data)) {\n      sanitizedData = _.map(data, sanitize)\n    }\n    else {\n      sanitizedData = sanitize(data)\n    }\n    return sanitizedData\n  }\n\n  private buildApiResponse(data, ri: iApiResourceIdentifier): iApiResponse {\n    return {\n      data: this.responseParser.parse(data),\n      resourceIdentifier: ri,\n    }\n  }\n\n  private csvToJsonData$(data): Observable<any> {\n    let observable = Observable.create((observer) => {\n      var jsonData = []\n      var jsonApiResponse = {\n        data: jsonData,\n        included: [],\n      }\n\n      let onNext = (json, index) => {\n        let isValid = (propValue, propName) => {\n          return !_.isNil(propValue)\n        }\n        let sanitizedJson = _.pickBy(json, isValid)\n\n\n        jsonData.push(json)\n      }\n      let onError = (error) => error\n      let onComplete = () => {\n        return observer.next(jsonApiResponse)\n      }\n\n      let converter = this.csvToJsonService.csvToJsonFromString(data)\n        .subscribe(onNext, onError, onComplete)\n\n    })\n\n    return observable\n  }\n}\n\n","import { RequestOptionsBuilder as ApiRequestOptionsBuilder } from './request-options-builder.service'\nimport { RequestUrlBuilder as ApiRequestUrlBuilder }         from './request-url-builder.service'\nimport { ResponseParser as ApiResponseParser }               from './response-parser.service'\nimport { ApiService }                                        from './api.service'\n\n\nexport const services: any[] = [\n  ApiRequestOptionsBuilder,\n  ApiRequestUrlBuilder,\n  ApiResponseParser,\n  ApiService,\n]\n\nexport { ApiRequestOptionsBuilder }\nexport { ApiRequestUrlBuilder }\nexport { ApiResponseParser }\nexport { ApiService }\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { iResponseParser } from '../../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseParser implements iResponseParser { \n  parse(payload: any): any {\n    return _.castArray(payload.data).\n      concat(this.loadIncluded(payload))\n  }\n\n  private loadIncluded(data) {\n    let buildIncluded = (payloadData) => {\n      return payloadData\n    }\n\n    return _.map(data.included, buildIncluded)\n  }\n}\n\n","import { ResponseParser as JsonApiResponseParser } from './response-parser.service'\n\nexport const services: any[] = [\n  JsonApiResponseParser,\n]\n\nexport { JsonApiResponseParser }\n","import * as base    from './base/index'\nimport * as jsonApi from './json-api/index'\n\nexport const services: any[] = [\n  ...base.services,\n  ...jsonApi.services,\n]\n\nexport {\n  ApiRequestOptionsBuilder,\n  ApiRequestUrlBuilder,\n  ApiResponseParser,\n  ApiService,\n} from './base/index'\n\nexport {\n  JsonApiResponseParser,\n} from './json-api/index'\n","import { Observable, Subject }  from 'rxjs'\nimport { map }                  from 'rxjs/operators'\n\nimport { Injectable }           from '@angular/core'\nimport { Response }             from \"@angular/http\"\n\nimport { AngularTokenService }   from \"angular-token\"\n\n@Injectable()\nexport class AuthService {\n  userSignedIn$:Subject<boolean> = new Subject()\n\n  constructor(public authService: AngularTokenService) { }\n\n  validate() {\n    this\n      .authService.validateToken()\n      .subscribe(\n        response => this.handleValidationTokenResponse(response),\n        error => this.handleValidationError(error)\n      )\n  }\n\n  signOutUser(): Observable<Response> {\n    return this.authService.signOut().pipe(map(\n      res => {\n        this.userSignedIn$.next(false)\n        return res\n      }\n    ))\n  }\n\n  registerUser(signUpData:  {\n    login:string,\n    password:string,\n    passwordConfirmation:string}\n  ): Observable<Response>{\n\n    return this.authService.registerAccount(signUpData).pipe(map(\n        res => {\n          this.userSignedIn$.next(true)\n          return res\n        }\n    ))\n  }\n\n  signInUser(signInData: {login:string, password:string}): Observable<Response> {\n    return this.authService.signIn(signInData)\n      .pipe(map(\n        response => {\n          this.userSignedIn$.next(true)\n          return response\n        }\n      ))\n  }\n\n  userSignedIn(): boolean {\n    return this.authService.userSignedIn()\n  }\n\n  private handleValidationTokenResponse(response) {\n    if(this.successfulLoginResponse(response)) {\n      this.userSignedIn$.next(response.json().success)\n    }\n    else {\n      this.userSignedIn$.next(false)\n    }\n  }\n\n  private handleValidationError(error) {\n    //console.log(error)\n  }\n\n  private successfulLoginResponse(response) {\n    return response.status == 200\n  }\n}\n","import { AuthService } from './auth.service'\n\nexport const services: any[] = [\n  AuthService,\n]\n\nexport { AuthService }\n","import { Injectable } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  HttpResponse, HttpRequest\n} from '@angular/common/http'\n\n\nimport {\n  iRequestCacheService,\n  iRequestCacheEntry,\n} from '../../interfaces/index'\n\nexport type CacheEntryResponse =\n  HttpResponse<any> | undefined\n\n@Injectable()\nexport class RequestCacheService implements iRequestCacheService {\n  private cacheEntries: iRequestCacheEntry[] = []\n\n  get(req: HttpRequest<any>): CacheEntryResponse {\n    return undefined\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\n    let cacheKey = 1\n    let cacheEntry = {\n      url: '',\n      response: response,\n      lastRead: 1,\n    }\n    this.cacheEntries[cacheKey] = cacheEntry\n  }\n}\n","import { RequestCacheService } from './request-cache.service'\n\nexport const services: any[] = [\n  RequestCacheService,\n]\n\nexport { RequestCacheService }\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport { createCustomElement } from '@angular/elements'\n\nimport {\n  iCustomElementConfig,\n  CustomElementName,\n} from '../../interfaces/index'\n\nimport {\n  CUSTOM_ELEMENTS_CONFIG\n} from '../../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Manager {\n  private ngComponentPath: string = 'ngElementStrategy.componentRef.instance'\n\n  constructor(\n    @Inject(CUSTOM_ELEMENTS_CONFIG) private _config,\n  ) {}\n\n  get config() {\n    return _.reduce(this._config, _.merge)\n  }\n\n  define(config: iCustomElementConfig) {\n    if(!this.elementExists(config.elementName)) {\n      let customElement = this.buildCustomElement(this.elementConfig(config))\n      this.defineNativeCustomElement(config.elementName, customElement)\n    }\n  }\n\n elementExists(elementName: string): boolean {\n    return customElements.get(elementName) != null\n  }\n\n  isCustomElement(element: any): boolean {\n    return this.hasNgComponent(element)\n  }\n\n  getNgComponent(element: any) {\n    return _.get(element, this.ngComponentPath)\n  }\n\n  //Private methods\n\n  private hasNgComponent(element: any): boolean {\n    return _.has(element, this.ngComponentPath)\n  }\n\n  private defineNativeCustomElement(\n    elementName: CustomElementName,\n    element: any\n  ) {\n    customElements.define(elementName, element)\n  }\n\n  private buildCustomElement(config) {\n    return createCustomElement(config.ctor, config.opts)\n  }\n\n  private elementConfig(config) {\n    let defaultConfig = _.get(this.config, config.elementName, {})\n    return _.merge(defaultConfig, config)\n  }\n}\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { NgElement } from '@angular/elements'\n\nimport {\n  CustomElementName,\n} from '../../interfaces/index'\n\nimport { Manager } from './manager.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Factory {\n  private defaultElement: null\n\n  constructor(\n    public manager: Manager,\n  ) {}\n\n  build(elementName: CustomElementName, inputs: any): NgElement {\n    let element = this.getElement(elementName, inputs)\n    this.launchElement(element)\n    return element\n  }\n\n  //Private methods\n\n  private getElement(elementName: CustomElementName, inputs: any): NgElement {\n    if(this.manager.elementExists(elementName)) {\n      let element = this.buildElementInstance(elementName)\n      return this.configureElementInstance(element, inputs)\n    }\n    else {\n      return this.defaultElement\n    }\n  }\n\n  private launchElement(element) {\n    document\n      .getElementById(\"custom-elements-wrap\")\n      .appendChild(<any>element)\n  }\n\n\n  private buildElementInstance(elementName: CustomElementName) {\n    return document.createElement(elementName) as NgElement \n  }\n\n  private configureElementInstance(element, inputs) {\n    let onClosed = () => {\n      return document.body.removeChild(element)\n    }\n    element.addEventListener('closed', onClosed)\n\n\n    let setInput = (value, prop) => {\n      element[prop]  = value\n    }\n    _.forEach(inputs, setInput)\n\n    return element\n  }\n}\n","import { Manager } from './manager.service'\nimport { Factory } from './factory.service'\n\nexport const services: any[] = [\n  Manager,\n  Factory,\n]\n\nexport {\n  Manager,\n  Factory,\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n} from '@angular/common/http'\n\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs'\n\nimport { RequestCacheService } from '../cache/index'\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCacheService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isCachable(req)) {\n      return next.handle(req)\n    }\n\n    let cachedResponse = this.cache.get(req);\n    //sendRequest(req, next, this.cache)\n    return cachedResponse ?\n      observableOf(cachedResponse) : next.handle(req)\n  }\n\n  private isCachable(req: any): boolean {\n    return false\n  }\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n} from '@angular/common/http'\n\nimport { Observable } from 'rxjs'\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class NoopInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    return next.handle(req)\n  }\n}\n","import { CachingInterceptor } from './caching-interceptor.service'\nimport { NoopInterceptor }    from './noop-interceptor.service'\n\nexport const services: any[] = [\n  CachingInterceptor,\n  NoopInterceptor,\n]\n\nexport {\n  CachingInterceptor,\n  NoopInterceptor,\n}\n","import { NotificationService }      from './notification.service'\nimport { NgbDateNativeAdapter }     from './ngb-date-adapter.service'\nimport { InputControlService }      from './input-control.service'\nimport { CsvToJsonService }         from './csv-to-json.service'\nimport { PaneFactory }              from './pane-factory.service'\nimport { PaneProvider }             from './pane-provider.service'\nimport { PaneManager }              from './pane-manager.service'\n\nimport * as api              from './api/index'\nimport * as auth             from './auth/index'\nimport * as cache            from './cache/index'\nimport * as customElement    from './custom-element/index'\nimport * as httpInterceptors from './http-interceptors/index'\n\nexport const sharedServices: any[] = [\n  NotificationService,\n  NgbDateNativeAdapter,\n  InputControlService,\n  CsvToJsonService,\n  PaneFactory,\n  PaneProvider,\n  PaneManager,\n  ...api.services,\n  ...auth.services,\n  ...cache.services,\n  ...customElement.services,\n  ...httpInterceptors.services,\n]\n\nexport * from './notification.service'\nexport * from './ngb-date-adapter.service'\nexport * from './input-control.service'\n\nexport * from './api/index'\n\nexport { CsvToJsonService }      from './csv-to-json.service'\nexport { PaneFactory }\nexport { PaneProvider }\nexport { PaneManager }\n\nexport {\n  AuthService,\n} from './auth/index'\n\nexport {\n  CachingInterceptor,\n  NoopInterceptor,\n} from './http-interceptors/index'\n\nexport {\n  RequestCacheService,\n} from './cache/index'\n\n\nexport {\n  Manager as CustomElementManager,\n  Factory as CustomElementFactory,\n} from './custom-element/index'\n","import { Injectable }           from '@angular/core'\nimport {\n  CanActivate, Router\n} from \"@angular/router\"\n\nimport { AuthService } from '../services/index'\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    if(this.authService.userSignedIn()) {\n      return true\n    } else {\n      this.router.navigate(['/'])\n      return false\n    }\n  }\n}\n","import { AuthGuard } from './auth-guard';\n\nexport const sharedGuards: any[] = [\n  AuthGuard,\n]\n\nexport * from './auth-guard';\n","import * as _ from 'lodash'\n\nimport {\n  Observable, BehaviorSubject\n} from 'rxjs'\n\nimport {\n  Component, Input, Output,\n  EventEmitter\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport {\n  InputType,\n  iInputGroup,\n  InputControlService,\n} from '../../../providers/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  providers: [InputControlService]\n})\nexport class FormComponent extends BaseComponent {\n  @Input()\n  inputGroup$: Observable<iInputGroup>\n\n  @Input()\n  dataService: any\n\n  @Input()\n  entity: any \n\n  @Input()\n  defaultParams: any \n\n  inputGroup: iInputGroup\n  _formGroup: FormGroup\n\n  constructor(\n    private inputControlService: InputControlService\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.handleActions()\n\n    this.inputGroup$\n      .subscribe(inputGroup => {\n        this.inputGroup = inputGroup\n        this._formGroup = this.inputControlService.toFormGroup(inputGroup)\n      })\n  }\n\n  handleActions() {\n    if(this.dataService && this.entity) {\n      this.dataService.handleDialogActions(this)\n    }\n  }\n\n  get formGroup() {\n    return this._formGroup\n  }\n\n  payload() {\n    let payload = this.formGroup.value\n    if(this.defaultParams) {\n      return _.merge(payload, this.defaultParams)\n    }\n    else {\n      return payload\n    }\n  }\n}\n","import { FormComponent } from './form.component'\n\nexport const components: any[] = [\n  FormComponent,\n]\n\nexport { FormComponent }\n","import { Component, OnInit, Input } from '@angular/core'\nimport { DomSanitizer }             from '@angular/platform-browser'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-iframe',\n  templateUrl: './iframe.component.html',\n  styleUrls: ['./iframe.component.scss']\n})\nexport class IframeComponent extends BaseComponent {\n  @Input()\n  url: any\n\n  constructor(\n    private sanitizer: DomSanitizer,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.url =\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.url)\n  }\n}\n","import { IframeComponent } from './iframe.component'\n\nexport const components: any[] = [\n  IframeComponent,\n]\n\nexport { IframeComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport { FormGroup }        from '@angular/forms';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent extends BaseComponent {\n  @Input() formGroup: FormGroup \n  @Input() field: any\n\n  get isValid() {\n    return this.formGroup.controls[this.field.key].valid;\n  }\n\n  selected(option) {\n    return (this.field.value == option.key)\n  }\n\n  checked(values) {\n    return _.includes(values, this.field.value)\n  }\n}\n","import { InputComponent } from './input.component'\n\nexport const components: any[] = [\n  InputComponent,\n]\n\nexport { InputComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport {\n  Component, Input, Output, OnInit,\n  EventEmitter\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: '[shared-declarables-item]',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent extends BaseComponent {\n  @Input()\n  entity: any;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  itemActions$: Observable<any>\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  actions: any[];\n  attributeEntities$: Observable<any>;\n\n  ngOnInit() {\n    this.attributeEntities$ = this.getAttributeEntities$()\n  }\n\n  getAttributeEntities$() {\n    return this.entity.getAttributeEntities$(\n      this.configHeader$\n    )\n  }\n\n  triggerAction(entity, action) {\n    this.actionEmitter.emit({\n      entity: entity,\n      action: action\n    });\n  }\n\n  getValue(attributeEntity) {\n    if(attributeEntity) {\n      switch(attributeEntity['value']) {\n         case null: {\n            return \"nil\";\n         }\n         case true: {\n            return \"Yes\";\n         }\n         case false: {\n            return \"No\";\n         }\n         default: {\n            return attributeEntity['value'];\n         }\n      }\n    }\n    else {\n      return '';\n    }\n  }\n\n  getActions(headerAttribute) {\n    if(headerAttribute) {\n      return this.getActionArray(headerAttribute);\n    }\n    return [];\n  }\n\n  getActionArray(headerAttribute) {\n    if(headerAttribute['actions']) {\n      return this.checkActions(headerAttribute['actions']);\n    }\n    else {\n      return [];\n    }\n  }\n\n  checkActions(actions) {\n    let _currentObj = this;\n    let attributes = _.map(actions, function (action) {\n      if(action['check-attributes']) {\n        let objs = _.filter(action['check-attributes'], function(condition) {\n          if (_currentObj.entity[condition['attribute']]!=condition['value']){\n            return false;\n          }\n          return true;\n        });\n        if(objs.length == action[\"check-attributes\"].length) {\n          return action;\n        }\n        else{\n          return null;\n        }\n      }\n      else {\n        return action;\n      }\n    });\n    return _.compact(attributes);\n  }\n}\n","import { ItemComponent } from './item.component'\n\nexport const components: any[] = [\n  ItemComponent,\n]\n\nexport { ItemComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent extends BaseComponent {\n  @Input()\n  collection$: Observable<any>;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  searchAttributes: any = {};\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  triggerAction(event_) {\n    this.actionEmitter.emit({\n      entity: event_.entity,\n      action: event_.action\n    });\n  }\n}\n","import { ListComponent } from './list.component'\n\nexport const components: any[] = [\n  ListComponent,\n]\n\nexport { ListComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'sunray-shared-navbar-toggle',\n  templateUrl: './navbar-toggle.component.html',\n  styleUrls: ['./navbar-toggle.component.scss']\n})\nexport class NavbarToggleComponent extends BaseComponent {\n  private animationClass: string = \"hamburger--slider\"\n  private activeClass: string = \"is-active\"\n  private ngClass: string = \"\"\n  private state: string = 'inactive'\n\n  @Input()\n  animation: string\n\n  @Input()\n  isActive: boolean = false\n\n  @Output()\n  toggleEmitter: EventEmitter<any> = new EventEmitter()\n\n  ngOnInit() {\n    this.ngClass = this.getNgClass()\n    this.setState()\n  }\n\n  private setState() {\n    this.state = this.isActive ? 'active' : 'inactive'\n  }\n\n  toggle() {\n    let oldState = this.state\n    this.isActive = !this.isActive\n    this.setState()\n    this.emitNewState(oldState)\n\n    if(this.animation) {\n      this.animationClass = `hamburger--${this.animation}`\n    }\n  }\n\n  private emitNewState(oldState) {\n    let event = {\n      fromState: oldState,\n      toState: this.state\n    }\n    this.toggleEmitter.emit(event)\n  }\n\n  getNgClass() {\n    let ngClasses = [this.animationClass]\n\n    if(this.isActive) {\n      ngClasses.push(this.activeClass)\n    }\n\n    return _.join(ngClasses, \" \")\n  }\n}\n","import { NavbarToggleComponent }              from './navbar-toggle.component'\n\nexport const components: any[] = [\n  NavbarToggleComponent,\n]\n\nexport { NavbarToggleComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component, OnInit, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport {\n  iNavigationMenu,\n} from '../../../providers/interfaces'\n\n@Component({\n  selector: 'ceo-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Input()\n  navigationLinks: any[]\n\n  @Input()\n  menuClass: string = 'horizontal'\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  getMenuClass(){\n    let classNames = ['menu', this.menuClass]\n    return _.join(classNames, ' ')\n  }\n\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss']\n})\nexport class NavItemComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  className() {\n    let classes = [this.item.className]\n\n    if(this.item.hasSubmenu()) {\n      classes.push('dropdown')\n      classes.push('has-submenu')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-link',\n  templateUrl: './nav-link.component.html',\n  styleUrls: ['./nav-link.component.scss']\n})\nexport class NavLinkComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n  iNavigationMenu,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-text',\n  templateUrl: './nav-text.component.html',\n  styleUrls: ['./nav-text.component.scss']\n})\nexport class NavTextComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import { NavigationComponent }  from './navigation.component'\nimport { NavItemComponent }     from './nav-item/nav-item.component'\nimport { NavLinkComponent }     from './nav-link/nav-link.component'\nimport { NavComponent }         from './nav/nav.component'\nimport { NavTextComponent }     from './nav-text/nav-text.component'\n\nexport const components: any[] = [\n  NavigationComponent,\n  NavItemComponent,\n  NavLinkComponent,\n  NavTextComponent,\n  NavComponent,\n]\n\nexport { NavigationComponent }\nexport { NavItemComponent }\nexport { NavLinkComponent }\nexport { NavTextComponent }\nexport { NavComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport { Component } from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-page',\n  templateUrl: 'page.component.html',\n  styleUrls: ['./page.component.scss'],\n})\nexport class PageComponent extends BaseComponent {}\n\n","import { PageComponent } from './page.component'\n\nexport const components: any[] = [\n  PageComponent,\n]\n\nexport { PageComponent }\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component, OnInit, Input,\n  ViewChild, ComponentFactoryResolver, forwardRef,\n} from '@angular/core'\n\nimport { ContainerDirective } from '../../directives/index'\nimport { iPane }              from '../../../providers/interfaces/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-declarables-pane',\n  templateUrl: './pane.component.html',\n  styleUrls: ['./pane.component.scss']\n})\nexport class PaneComponent extends BaseComponent {\n  @ViewChild(forwardRef(() => ContainerDirective))\n  private containerDirective: ContainerDirective\n  componentRef: any\n  @Input()\n  pane$: Observable<iPane>\n\n  @Input()\n  inputs?: any[]\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.launch()\n  }\n\n  private launch() {\n    this.pane$.subscribe(pane => {\n      this.loadComponent(pane)\n    })\n  }\n\n  private loadComponent(pane: iPane): void {\n    let component = this.createComponent(pane.componentFactory)\n  }\n\n  private resolveComponentFactory(component) {\n    return this.componentFactoryResolver\n      .resolveComponentFactory(component)\n  }\n\n  private createComponent(componentFactory) {\n    let viewContainerRef = this.containerDirective.viewContainerRef\n    viewContainerRef.clear()\n    this.componentRef = viewContainerRef.createComponent(componentFactory)\n    this.setInputs()\n    return this.componentRef\n  }\n\n  private setInputs() {\n    if(this.inputs){\n      let setInput = (value, prop) => {\n        this.componentRef.instance[prop]  = value\n      }\n      _.forEach(this.inputs, setInput)\n    }\n  }\n}\n","import { PaneComponent } from './pane.component'\n\nexport const components: any[] = [\n  PaneComponent,\n]\n\nexport { PaneComponent }\n","import {\n  Component, Input, OnInit,\n  Output, EventEmitter\n} from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent extends BaseComponent {\n\n  search: FormControl = new FormControl('');\n\n  @Output()\n  searchKeyEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit() { \n    this.onValueChange();\n  }\n\n  onValueChange() {\n    this.search.valueChanges.subscribe((searchText) => {\n      this.searchKeyEmitter.emit({\n        searchText: searchText \n      });\n    });\n  }\n}\n","import { SearchComponent } from './search.component'\n\nexport const components: any[] = [\n  SearchComponent,\n]\n\nexport { SearchComponent }\n","import { SelectListComponent } from './select-list.component'\n\nexport const components: any[] = [\n  SelectListComponent,\n]\n\nexport { SelectListComponent }\n","import {\n  Component,\n  AfterViewChecked,\n  TemplateRef,\n  ViewContainerRef,\n  ViewChild,\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-svg-loader',\n  templateUrl: './svg-loader.component.html',\n  styleUrls: ['./svg-loader.component.scss']\n})\nexport class SvgLoaderComponent extends BaseComponent implements AfterViewChecked {\n  @ViewChild('template', { read: TemplateRef }) _template: TemplateRef<any>;\n  @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n  ngAfterViewChecked() {\n    const view = this._template.createEmbeddedView({fromContext: 'John'});\n    this.vc.insert(view);\n  }\n}\n","import { SvgLoaderComponent } from './svg-loader.component'\n\nexport const components: any[] = [\n  SvgLoaderComponent,\n]\n\nexport { SvgLoaderComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent extends BaseComponent {\n  @Input()\n  collection$: Observable<any>;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  itemActions$: Observable<any>;\n\n  @Input()\n  collectionActions$: Observable<any>;\n\n  @Input()\n  searchAttributes: any = {};\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  triggerAction(event_) {\n    this.actionEmitter.emit({\n      entity: event_.entity,\n      action: event_.action\n    });\n  }\n}\n","import { TableComponent } from './table.component'\n\nexport const components: any[] = [\n  TableComponent,\n]\n\nexport { TableComponent }\n","import * as base                 from './base/index'\nimport * as attributeList        from './attribute-list/index'\nimport * as body                 from './body/index'\nimport * as breadcrumb           from './breadcrumb/index'\nimport * as cardSelectList       from './card-select-list/index'\nimport * as card                 from './card/index'\nimport * as datepicker           from './datepicker/index'\nimport * as dropdown             from './dropdown/index'\nimport * as field                from './field/index'\nimport * as formGroup            from './form-group/index'\nimport * as form                 from './form/index'\nimport * as iframe               from './iframe/index'\nimport * as input                from './input/index'\nimport * as item                 from './item/index'\nimport * as list                 from './list/index'\nimport * as navbarToggle         from './navbar-toggle/index'\nimport * as navigation           from './navigation/index'\nimport * as page                 from './page/index'\nimport * as pane                 from './pane/index'\nimport * as search               from './search/index'\nimport * as selectList           from './select-list/index'\nimport * as svgLoader            from './svg-loader/index'\nimport * as table                from './table/index'\n\nexport const components: any[] = [\n  ...base.components,\n  ...attributeList.components,\n  ...body.components,\n  ...breadcrumb.components,\n  ...cardSelectList.components,\n  ...card.components,\n  ...datepicker.components,\n  ...dropdown.components,\n  ...field.components,\n  ...formGroup.components,\n  ...form.components,\n  ...iframe.components,\n  ...input.components,\n  ...item.components,\n  ...list.components,\n  ...navbarToggle.components,\n  ...navigation.components,\n  ...page.components,\n  ...pane.components,\n  ...search.components,\n  ...selectList.components,\n  ...svgLoader.components,\n  ...table.components,\n]\n\nexport { BaseComponent } from './base/index'\n\nexport { AttributeListComponent } from './attribute-list/index'\nexport { BodyComponent } from './body/index'\nexport { BreadcrumbComponent } from './breadcrumb/index'\nexport { CardSelectListComponent } from './card-select-list/index'\nexport { CardComponent } from './card/index'\nexport { DatepickerComponent } from './datepicker/index'\nexport { DropdownComponent } from './dropdown/index'\nexport { FieldComponent } from './field/index'\nexport { FormGroupComponent } from './form-group/index'\nexport { FormComponent } from './form/index'\nexport { InputComponent } from './input/index'\nexport { IframeComponent } from './iframe/index'\nexport { ItemComponent } from './item/index'\nexport { ListComponent } from './list/index'\nexport { NavbarToggleComponent } from './navbar-toggle/index'\nexport { NavigationComponent } from './navigation/index'\nexport { PageComponent } from './page/index'\nexport { PaneComponent } from './pane/index'\nexport { SearchComponent } from './search/index'\nexport { SelectListComponent } from './select-list/index'\nexport { SvgLoaderComponent } from './svg-loader/index'\nexport { TableComponent } from './table/index'\n","import { Component, OnInit } from '@angular/core'\n\nimport { BaseComponent } from '../../components/index'\n\n@Component({\n  template: '',\n  styleUrls: ['./base.page.scss']\n})\nexport class BasePage extends BaseComponent {\n\n  constructor() {\n    super()\n  }\n\n  ngOnInit() {\n  }\n}\n","import { BasePage } from './base/base.page'\n\nexport const pages: any[] = [\n  BasePage,\n]\n\nexport { BasePage }\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { RouterModule }   from '@angular/router'\nimport { CommonModule }   from '@angular/common'\n\nimport {\n  NgbDatepickerModule,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n} from '@ng-bootstrap/ng-bootstrap'\n\nimport {\n  MatButtonModule, MatCheckboxModule,\n  MatSnackBarModule, MatAutocompleteModule,\n  MatFormFieldModule, MatInputModule,\n  MatRadioModule, MatSelectModule,\n  MatIconModule, MatDialogModule,\n} from '@angular/material'\n\nimport { components } from './components/index'\nimport { directives } from './directives/index'\nimport { pages }      from './pages/index'\nimport { pipes }      from './pipes/index'\n\nconst angularMaterialModules: any[] = [\n  MatButtonModule,\n  MatCheckboxModule,\n  MatSnackBarModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatIconModule,\n  MatDialogModule,\n]\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n    NgbDatepickerModule,\n    angularMaterialModules,\n  ],\n  providers: [\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n  ],\n  declarations: [\n    ...directives,\n    ...pipes,\n    ...components,\n    ...pages,\n  ],\n  exports: [\n    ...components,\n    ...pages,\n    ...directives,\n    ...pipes,\n  ],\n  entryComponents: [\n    ...components,\n    ...pages,\n  ]\n})\nexport class DeclarablesModule { }\n","// Shared Providers created internally.\nimport { NgModule } from '@angular/core'\n\nimport {\n  DeclarablesModule as SharedDeclarablesModule,\n} from '../declarables/declarables.module'\n\nimport { sharedServices }   from './services/index'\nimport { sharedGuards }     from './guards/index'\nimport { providers as tokenProviders } from './tokens/index'\n\n@NgModule({\n  imports: [\n    SharedDeclarablesModule,\n  ],\n  providers: [\n    ...sharedServices,\n    ...sharedGuards,\n    ...tokenProviders,\n  ],\n})\nexport class ProvidersModule { }\n","import {\n  Component,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.scss']\n})\nexport class CloseComponent extends BaseComponent {\n  @Output() close: EventEmitter<any> = new EventEmitter()\n\n  onClose() {\n    this.close.emit()\n  }\n}\n","import {\n  Component,\n  Inject,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material'\n\nimport {\n  iDialogAction,\n  iDialogComponentInputProperties,\n  iDialogComponent,\n} from '../../interfaces/index'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent extends BaseComponent {\n  contentElementId: string = 'dialog-content'\n\n  constructor(\n    public dialogRef: MatDialogRef<iDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: iDialogComponentInputProperties,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    super.ngOnInit()\n    this.data.actions$.subscribe(action => this.onAction(action))\n  }\n\n  onClose(event) {\n    this.dialogRef.close('close')\n    this.emitAction(this.buildAction('close'))\n  }\n\n\n  onAction(action: iDialogAction) {\n    //console.log(\"We have the dialog action \" + action.name)\n  }\n\n  private buildAction(name: string, payload: any = null) {\n    return {\n      name: name,\n      payload: payload\n    }\n  }\n\n  emitAction(action: iDialogAction) {\n    this.data.actions$.next(action)\n  }\n}\n","import {\n  Observable,\n  BehaviorSubject,\n  of as observableOf,\n} from 'rxjs'\n\nimport { Component } from '@angular/core'\n\nimport { BaseComponent } from '../../../../../declarables/index'\n\nimport { DialogComponent } from '../dialog.component'\n\n@Component({\n  selector: 'ceo-dialog-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss']\n})\nexport class WidgetComponent extends DialogComponent {\n  data: any\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-widget-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent extends BaseComponent {\n  @Input() data: any\n  @Output() actionEmitter: EventEmitter<any> = new EventEmitter()\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-widget-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent extends BaseComponent {\n  @Input() data: any\n  @Output() actionEmitter: EventEmitter<any> = new EventEmitter()\n\n\n  onTriggerAction(action) {\n    let dialogAction = {\n      name: action.name,\n      payload: null\n    }\n    this.actionEmitter.emit(dialogAction)\n  }\n}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'shared-declarables-modal-navigation-item',\n  templateUrl: './modal-navigation-item.component.html',\n  styleUrls: ['./modal-navigation-item.component.scss']\n})\nexport class ModalNavigationItemComponent extends BaseComponent {}\n","import * as _ from 'lodash'\n\nimport {\n  Observable,\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  Component, OnInit, Inject, Input,\n  ViewChild, OnDestroy, forwardRef,\n} from '@angular/core'\n\nimport {\n  MatDialogRef, MAT_DIALOG_DATA\n} from '@angular/material'\nimport {\n  createCustomElement, NgElement\n} from '@angular/elements'\n\nimport {\n  iDialogComponentInputProperties,\n  iDialogComponent,\n} from '../../interfaces/index'\n\nimport {\n  ContainerDirective,\n  BaseComponent\n} from '../../../../declarables/index'\n\n@Component({\n  selector: 'shared-declarables-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent extends BaseComponent\n  implements iDialogComponent {\n\n  contentElementId: string = 'modal-content'\n  actions$: BehaviorSubject<any>\n\n  constructor(\n    public dialogRef: MatDialogRef<iDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: iDialogComponentInputProperties,\n  ) {\n    super()\n  }\n\n  afterClosed(): Observable<any> {\n    return this.dialogRef.afterClosed()\n  }\n\n  onAction(event) {\n    if(event.action.name == 'cancel') {\n      this.dialogRef.close(event.action.name)\n    }\n    else {\n      this.data.actions$.next(event)\n    }\n  }\n\n  onClose(event) {\n    this.dialogRef.close('close')\n  }\n}\n","import { InjectionToken }   from '@angular/core'\n\nexport const DIALOGS_CONFIG =\n  new InjectionToken<any>(\"Dialogs Config\")\n","import { DialogComponent } from '../components/index'\n\nimport { \n  BehaviorSubject,\n} from 'rxjs'\n\nimport { DIALOGS_CONFIG } from './tokens'\n\nlet initAction = {\n  name: 'init',\n  payload: null,\n}\n\nexport const defaultDialogsConfig = {\n  isDefault: true,\n  defaults: {\n    actions$: new BehaviorSubject(initAction),\n    componentType: DialogComponent,\n    width: '500px',\n    header: {\n      show: false,\n    },\n    footer: {\n      show: false,\n    },\n  },\n  dialogs: {}\n}\n\nexport const providers: any[] = [\n  {\n    provide: DIALOGS_CONFIG,\n    useValue: defaultDialogsConfig,\n    multi: true,\n  },\n]\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport {\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport {\n  CustomElementManager,\n} from '../../../providers/index'\n\nimport {\n  DialogComponent\n} from '../components/dialog/dialog.component'\n\nimport {\n  iDialogComponent,\n  iDialogConfig,\n  iDialogsConfig,\n  iDialogContentComponent,\n  iDialogHtmlElement,\n} from '../interfaces/index'\n\nimport {\n  DIALOGS_CONFIG,\n} from '../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  constructor(\n    private customElementManager: CustomElementManager,\n    @Inject(DIALOGS_CONFIG) public dialogsConfig,\n  ) {}\n\n  provide(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogConfig {\n\n    let component = this.getComponent(dialogElement)\n\n    config = this.getDialogConfig(dialogElement, config)\n\n    let configActions = this.dialogConfigActions(component)\n\n    return _.defaultsDeep(config, configActions, this.defaults)\n  }\n\n  get dialogs() {\n    return _.reduce(_.map(this.dialogsConfig, 'dialogs'), _.merge)\n  }\n\n  get defaults() {\n    let defaults = this.defaultConfig.defaults\n    let others = {\n      componentType: DialogComponent,\n    }\n    return _.merge(defaults, others)\n  }\n\n  get defaultConfig() {\n    return _.find(this.dialogsConfig, { isDefault: true }) as iDialogsConfig\n  }\n\n  private getDialogConfig(\n    dialogElement,\n    config: iDialogConfig | string\n  ) {\n\n    var dialogName\n    if(this.customElementManager.isCustomElement(dialogElement)) {\n      dialogName = dialogElement.localName\n    }\n    if(_.isString(config)) {\n      dialogName = config\n    }\n\n    if(dialogName) {\n      return _.get(this.dialogs, dialogName, this.defaults)\n    }\n    else {\n      return config\n    }\n  }\n\n  private dialogConfigActions(component: iDialogContentComponent) {\n    if(component.dialogActions$) {\n      return {\n        actions$: component.dialogActions$\n      }\n    }\n    return {}\n  }\n\n  private getComponent(element: iDialogHtmlElement): iDialogContentComponent {\n    let component = element\n\n    if(this.customElementManager.isCustomElement(element)) {\n      component = this.customElementManager.getNgComponent(element)\n    }\n\n    return component as iDialogContentComponent\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  MatDialog, MatDialogRef, MAT_DIALOG_DATA\n} from '@angular/material';\n\nimport {\n  DialogComponentType,\n  iDialogAction,\n  iDialogActionEvent,\n  iDialogComponent,\n  iDialogConfig,\n  iDialogContentComponent,\n  iDialogHtmlElement,\n  iMatDialogConfig,\n} from '../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatDialogAdapterService {\n  private adapterConfigProperties: any[] = [\n    'width', 'height',\n  ]\n  private nonDataProperties: any[] = [\n    'componentType',\n  ]\n\n  constructor(\n    private dialog: MatDialog\n  ) {}\n\n  open(\n    contentElement: iDialogHtmlElement,\n    dialogConfig: iDialogConfig,\n  ): iDialogComponent {\n\n    let config = this.buildAdapterDialogConfig(dialogConfig)\n\n    let dialogComponentType = dialogConfig.componentType\n    let matDialogComponent = this.getMatDialog(dialogComponentType, config)\n    let dialogComponent = this.getDialogComponent(matDialogComponent)\n    return this.configuredDialogComponent(dialogComponent, contentElement)\n  }\n\n  closeAll() {\n    this.dialog.closeAll()\n  }\n\n  private getMatDialog(\n    dialogComponentType: DialogComponentType,\n    config\n  ): MatDialogRef<any> {\n    return this.dialog.open(dialogComponentType, config)\n  }\n\n  private getDialogComponent(matDialog: MatDialogRef<any>): iDialogComponent {\n    let dialogComponent = <iDialogComponent>matDialog.componentInstance\n    this.connectDialogs(matDialog, dialogComponent)\n    return dialogComponent\n  }\n\n  private connectDialogs(\n    matDialog: MatDialogRef<any>,\n    dialogComponent: iDialogComponent\n  ) {\n\n    /*\n    //Gets an observable that is notified when the dialog is finished opening.\n    afterOpened\n\n    //Gets an observable that emits when the overlay's backdrop has been clicked.\n    backdropClick\n\n    //Gets an observable that is notified when the dialog has started closing.\n    beforeClosed\n\n    //Gets an observable that emits when keydown events are targeted on the overlay.\n    keydownEvents\n    */\n\n    let matDialogEventNames = [\n      'afterClosed', 'afterOpened', 'backdropClick',\n      'beforeClosed', 'keydownEvents'\n    ]\n\n    let attachMatDialogEvent = (eventName) => {\n      matDialog[eventName]().subscribe(event => {\n        let action = {\n          name: eventName,\n          payload: dialogComponent,\n        }\n        dialogComponent.data.actions$.next(action)\n      })\n    }\n    _.forEach(matDialogEventNames, attachMatDialogEvent)\n\n    dialogComponent.data.actions$.subscribe(action => {\n      if(action.name == 'close') {\n        matDialog.close(action)\n      }\n    })\n  }\n\n\n  private buildAdapterDialogConfig(\n    dialogConfig: iDialogConfig\n  ): iMatDialogConfig {\n\n    let dialogComponentData = {\n      data: this.buildComponentData(dialogConfig)\n    }\n\n    let adapterDialogConfig = _.pick(\n      dialogConfig,\n      this.adapterConfigProperties\n    )\n\n    return _.merge(adapterDialogConfig, dialogComponentData)\n  }\n\n  private buildComponentData(dialogConfig: iDialogConfig) {\n    return dialogConfig\n  }\n\n  private configuredDialogComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): iDialogComponent {\n    this.addContentComponent(dialogComponent, contentElement)\n    return <iDialogComponent>dialogComponent\n  }\n\n  private addContentComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): void {\n    this.showContentComponent(dialogComponent, contentElement)\n    this.launchContentComponent(dialogComponent)\n  }\n\n  private showContentComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): void {\n    document\n      .getElementById(dialogComponent.contentElementId)\n      .appendChild(<any>contentElement)\n  }\n\n  private launchContentComponent(\n    dialogComponent: iDialogComponent, \n  ): void {\n    let action = this.buildLaunchAction(dialogComponent)\n    dialogComponent.data.actions$.next(<iDialogAction>action)\n  }\n\n  private buildLaunchAction(\n    dialogComponent: iDialogComponent, \n  ): iDialogAction {\n    return {\n      name: 'launch',\n      payload: {\n        dialogRef: dialogComponent.dialogRef\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  DialogComponentType,\n  iDialogComponentConfig,\n  iDialogConfig,\n  iDialogContentComponent,\n  iDialogComponent,\n  iDialogHtmlElement,\n  iDialogService,\n  iMatDialogConfig,\n} from '../interfaces/index'\n\nimport {\n  MatDialogAdapterService,\n} from './mat-dialog-adapter.service'\n\nimport {\n  ConfigService,\n} from './config.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService implements iDialogService {\n  constructor(\n    private dialogAdapter: MatDialogAdapterService,\n    private configService: ConfigService\n  ) {}\n\n  open(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogComponent {\n\n    config = this.buildDialogConfig(dialogElement, config)\n\n    return this.openVendorDialog(dialogElement, config)\n  }\n\n  closeAll() {\n    this.dialogAdapter.closeAll()\n  }\n\n  private buildDialogConfig(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogConfig {\n    return this.configService.provide(dialogElement, config)\n  }\n\n  private openVendorDialog(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig,\n  ): iDialogComponent {\n    return this.dialogAdapter.open(dialogElement, config)\n  }\n\n}\n","import {\n  DialogWidgetComponent,\n  DialogWidgetHeaderComponent,\n  DialogWidgetFooterComponent,\n} from './index'\n\nexport const components: any[] = [\n  DialogWidgetComponent,\n  DialogWidgetHeaderComponent,\n  DialogWidgetFooterComponent,\n]\n","import {\n  DialogCloseComponent,\n  DialogComponent,\n} from './index'\n\nimport { components as widgetComponents } from './widget/components'\n\nexport const components: any[] = [\n  DialogCloseComponent,\n  DialogComponent,\n  ...widgetComponents,\n]\n","import {\n  ModalComponent,\n  //ModalHeaderComponent,\n  //ModalFooterComponent, \n} from './index'\n\n\nexport const components: any[] = [\n  ModalComponent,\n  //ModalHeaderComponent,\n  //ModalFooterComponent, \n]\n","import {\n  ModalNavigationItemComponent,\n} from './index'\n\nexport const components: any[] = [\n  ModalNavigationItemComponent,\n]\n","import { components as dialogComponents } from './dialog/components'\nimport { components as modalComponents }  from './modal/components'\nimport { components as modalNavigationItemComponents }  from './modal-navigation-item/components'\n\nexport const components: any[] = [\n  ...dialogComponents,\n  ...modalComponents,\n  ...modalNavigationItemComponents,\n]\n","import {\n  DialogConfigService,\n  DialogService,\n  MatDialogAdapterService,\n} from './index'\n\nexport const services: any[] = [\n  DialogConfigService,\n  DialogService,\n  MatDialogAdapterService,\n]\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { CommonModule }   from '@angular/common'\n\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { NgsRevealModule }      from 'ngx-scrollreveal'\n\n\nimport {\n  MatDialogModule,\n} from '@angular/material'\n\nconst angularMaterialModules: any[] = [\n  MatDialogModule,\n]\n\nimport { SharedDeclarablesModule } from '../../declarables/index'\n\nimport { components } from './components/components'\nimport { services } from './services/services'\nimport { dialogTokenProviders } from './tokens/index'\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbDatepickerModule,\n    NgsRevealModule,\n    angularMaterialModules,\n    SharedDeclarablesModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n    ...components,\n  ]\n})\nexport class CeoDialogsModule {\n  static forRoot() {\n    return {\n      ngModule: CeoDialogsModule,\n      providers: [\n        ...services,\n        ...dialogTokenProviders,\n      ],\n    }\n  }\n}\n\n","import {\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormMember,\n} from '../interfaces/index'\n\nexport class FormMember implements iFormMember {\n  protected _ngControl: NgAbstractControl\n  type: FormMemberType\n\n  constructor(props: any = {}) {\n    Object.assign(this, props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  get value(): any {\n    return this.ngControl.value\n  }\n\n  get valid(): boolean {\n    return this.ngControl.valid\n  }\n\n  markAsTouchedAndDirty(): void {\n    this.markAsTouched()\n    this.markAsDirty()\n  }\n\n\n  markAsTouched() {\n    this.ngControl.markAsTouched()\n  }\n\n\n  markAsDirty() {\n    this.ngControl.markAsDirty()\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  AbstractControl as NgAbstractControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormMemberMap,\n  iFormMember,\n  iFormGroup,\n} from '../interfaces/index'\n\nimport { FormMember } from './form-member'\n\nexport class FormGroup extends FormMember implements iFormGroup {\n  type: FormMemberType = 'form-group'\n\n  private _members: iFormMemberMap\n\n  constructor(props: Partial<iFormGroup> = {}) {\n    super(props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  get memberNames(): string[] {\n    return _.keys(this.members)\n  }\n\n  getMember(memberName: string): iFormMember {\n    return this.members[memberName]\n  }\n\n  get members(): iFormMemberMap {\n    return this._members\n  }\n\n  set members(members: iFormMemberMap) {\n    this._members = members\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this._ngControl = ngControl\n  }\n  \n  //Marks the control as touched. A control is touched by focus and blur events\n  //that do not change the value.\n  markAsTouched() {\n    let marker = 'markAsTouched'\n    this.applyMarker(marker)\n  }\n\n  //Marks the control as dirty. A control becomes dirty when the\n  //control's value is changed through the UI\n  markAsDirty() {\n    let marker = 'markAsDirty'\n    this.applyMarker(marker)\n  }\n\n  applyMarker(markerName: string) {\n    this.ngControl[markerName]()\n\n    let markMember = (member) => {\n      member[markerName]()\n    }\n\n    _.map(this.members, markMember)\n  }\n\n  // Iterator\n  // Allows us to use the object in angular directives\n  // (i.e. ngFor, etc)\n  [Symbol.iterator]() {\n    let current = 0\n    let members= _.values(this.members)\n\n    return  {\n      next: function () {\n        let isEmpty = _.isEmpty(members)\n        let value = isEmpty ? null : members[current++]\n        let done = isEmpty ? true : current > members.length\n        return {\n          value: value,\n          done: done\n        }\n      }\n    }\n  }\n}\n","import {\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormControl,\n  iFormItem,\n  iFormMemberError,\n  iLabelElement,\n} from '../interfaces/index'\n\nimport { FormMember } from './form-member'\n\nexport class FormItem extends FormMember implements iFormItem {\n  type: FormMemberType = 'form-item'\n\n  control: iFormControl\n  label: iLabelElement\n\n  constructor(props: Partial<iFormItem> = {}) {\n    super(props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this.control.ngControl\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this.control.ngControl = ngControl\n  }\n\n  get showValidations(): boolean {\n    return this.control.showValidations\n  }\n\n  get errorMessages(): iFormMemberError[] {\n    return this.control.errorMessages\n  }\n}\n","import {\n  FormMemberType,\n  iFormWrapper,\n} from '../interfaces/index'\n\nimport {\n  FormGroup,\n} from './form-group'\n\nexport class FormWrapper extends FormGroup implements iFormWrapper {\n  type: FormMemberType = 'form'\n}\n","import { iLabelElement } from '../interfaces/index'\n\nexport class LabelElement implements iLabelElement {\n  controlId: string\n  text: string\n\n  element: any\n\n  public constructor(init?: Partial<iLabelElement>) {\n    Object.assign(this, init)\n  }\n\n}\n","import * as _ from 'lodash'\n\nimport {\n  FormControl as NgFormControl,\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  words,\n} from '@ceo/core'\n\nimport {\n  iFormControl,\n  iFormMemberError,\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class BaseFormControl implements iFormControl {\n  controlType: FormControlType\n  protected _ngControl: NgAbstractControl\n\n  displayName: string\n  elementId: string\n  key: string\n  label: string\n  order: number = -1\n  placeholder: string\n  row: number\n  text: string\n  validators: any[] = []\n  value: any\n\n  constructor(init: Partial<iFormControl> = {}) {\n    Object.assign(this, init)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this._ngControl = ngControl\n  }\n\n  get showValidations(): boolean {\n    return this.ngControl.errors &&\n      (this.ngControl.dirty || this.ngControl.touched)\n  }\n\n  get errorMessages(): iFormMemberError[] {\n    let buildErrorMessage = (value, key) => {\n      var message = ''\n\n      let lowerCased = _.lowerCase(this.displayName)\n      let firstLetter = lowerCased[0]\n      let startsWithVowel = _.includes(['a', 'e', 'i', 'o', 'u'], firstLetter)\n      let article = startsWithVowel ? 'an' : 'a'\n    \n      if(key == 'required') {\n        message = `Please enter ${article} ${lowerCased}.`\n      }\n\n      if(key == 'email') {\n        message = `Please enter a valid email.`\n      }\n\n      return {\n        key: key,\n        message: message,\n      }\n    }\n    return _.map(this.ngControl.errors, buildErrorMessage)\n  }\n\n  get name(): string {\n    return this.displayName\n  }\n}\n","import { BaseFormControl } from './base.form-control'\n\nimport {\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class CheckboxFormControl extends BaseFormControl {\n  controlType: FormControlType = 'checkbox'\n}\n","import { Observable } from 'rxjs'\n\nimport { BaseFormControl } from './base.form-control'\n\nimport {\n  iFormControl,\n  iSelectFormControl,\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class SelectFormControl extends BaseFormControl \n  implements iSelectFormControl {\n\n  controlType: FormControlType = 'select'\n\n  options: { text: string, value: string }[] = []\n\n  constructor(init: Partial<iFormControl> = {}) {\n    super(init)\n\n    //eg. [{key: 1, value: \"Test1\"}]\n    //this.options = init['options'] || this.emptyDropdown$()\n  }\n\n  /*\n  private emptyDropdown$(): Observable<any> {\n    return new Observable((observer) => {\n      observer.next([])\n      observer.complete()\n    })\n  }\n  */\n}\n\n","// Similar implementation to:\n// https://angular.io/guide/dynamic-form\n\nimport * as _ from 'lodash'\n\nimport {\n  BaseFormControl,\n} from './base.form-control'\n\nimport {\n  FormControlType,\n  InputTypeAttribute,\n  iInputFormControl,\n} from '../../interfaces/index'\n\nlet inputFormControlDefaults = {\n  key: '',\n  label: '',\n  placeholder: '',\n  row: null,\n  value: null,\n  inputType: 'text' as InputTypeAttribute,\n  required: false,\n  options: [],\n}\n\nexport class InputFormControl extends BaseFormControl\n  implements iInputFormControl {\n\n  private defaults: Partial<iInputFormControl> = inputFormControlDefaults\n  controlType: FormControlType = 'input'\n\n  inputType: InputTypeAttribute\n  required: boolean\n  options: { text: string, value: string }[] = []\n\n  constructor(init: Partial<iInputFormControl> = {}) {\n    super(init)\n\n    init = _.defaults(init, this.defaults)\n    Object.assign(this, init)\n  }\n}\n","import { BaseFormControl } from './base.form-control'\n\nimport {\n  FormControlType,\n  iFormControl,\n} from '../../interfaces/index'\n\nexport class TextboxFormControl extends BaseFormControl {\n  controlType: FormControlType = 'textbox'\n}\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component, Input,\n  Output, EventEmitter,\n} from '@angular/core'\n\nimport {\n  FormGroup,\n  AbstractControl,\n} from '@angular/forms'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormWrapper,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent extends BaseComponent {\n  @Input() formWrapper: iFormWrapper\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormControl,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-control',\n  templateUrl: './form-control.component.html',\n  styleUrls: ['./form-control.component.scss']\n})\nexport class FormControlComponent extends BaseComponent {\n  @Input() control: iFormControl\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  FormGroup,\n} from '../../classes/index'\n\nimport {\n  iFormGroup,\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss']\n})\nexport class FormGroupComponent extends BaseComponent {\n  @Input() key: string\n  @Input() model: iFormGroup\n}\n","import {\n  Component, Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-item',\n  templateUrl: './form-item.component.html',\n  styleUrls: ['./form-item.component.scss']\n})\nexport class FormItemComponent extends BaseComponent {\n  @Input() key: string\n  @Input() item: iFormItem\n\n  classes: any = {\n    valid: 'is-valid',\n    invalid: 'is-invalid',\n  }\n\n  formGroupClass() {\n    let classes = []\n    let ngControl = this.item.ngControl\n\n    if(ngControl.valid) {\n      classes.push(this.classes.valid)\n    }\n    if(ngControl.invalid) {\n      classes.push(this.classes.invalid)\n    }\n\n    return classes\n  }\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-item-error',\n  templateUrl: './form-item-error.component.html',\n  styleUrls: ['./form-item-error.component.scss']\n})\nexport class FormItemErrorComponent extends BaseComponent {\n  @Input() key: string\n  @Input() item: iFormItem\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../../declarables/index'\n\nimport {\n  iLabelElement,\n} from '../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent extends BaseComponent {\n  @Input() element: iLabelElement\n}\n","import {\n  Component, OnInit,\n  Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent as SharedBaseComponent,\n} from '../../../../../../declarables/index'\n\n\nimport {\n  iFormControl,\n} from '../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent extends SharedBaseComponent {\n  @Input() element: iFormControl\n}\n","import { Component, Input } from '@angular/core'\n\nimport { BaseComponent } from '../base//base.component'\n\nimport {\n  iInputFormControl,\n} from '../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent extends BaseComponent {\n  @Input() element: iInputFormControl\n}\n","import { Component, Input } from '@angular/core'\n\nimport { BaseComponent as SharedBaseComponent } from '../../base//base.component'\n\nimport {\n  iInputFormControl,\n} from '../../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent extends SharedBaseComponent {\n  @Input() element: iInputFormControl\n}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent  } from '../base//base.component'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseComponent {}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent  } from '../base//base.component'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends BaseComponent {\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  Validators as NgValidators,\n} from '@angular/forms'\n\nimport {\n  iFormControl,\n} from '../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlFactory {\n  build(formControl: iFormControl): NgFormControl {\n    return new NgFormControl(\n      formControl.value,\n      NgValidators.compose(formControl.validators),\n    )\n  }\n}\n\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormGroup as NgFormGroup,\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  iMap,\n} from '../../../../providers/index'\n\nimport {\n  iFormGroup,\n  iFormMember,\n  iNgFormMemberFactory,\n} from '../../interfaces/index'\n\nimport { FormControlFactory } from './form-control-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGroupFactory {\n  constructor(\n    private formControlFactory: FormControlFactory\n  ) {}\n\n  build(formGroup: iFormGroup): NgFormGroup {\n    return this.buildNgFormGroup(formGroup)\n  }\n\n  private buildNgFormGroup(formGroup: iFormGroup): NgFormGroup {\n    let ngControls = this.buildNgControls(formGroup.members)\n    return new NgFormGroup(ngControls)\n  }\n\n  private buildNgControls(members: iMap<iFormMember>): iMap<NgAbstractControl> {\n    let getNgControl = (member: iFormMember) => {\n      return this.getNgControl(member)\n    }\n\n    return _.mapValues(members, getNgControl)\n  }\n\n  private getNgControl(member: iFormMember): NgAbstractControl {\n    if(!member.ngControl) {\n      let control = this.buildNgControl(member)\n      member.ngControl = control\n    }\n\n    return member.ngControl\n  }\n\n  private buildNgControl(member: iFormMember): NgAbstractControl {\n    let factory = <iNgFormMemberFactory>this.resolveControlFactory(member)\n    let ngControl = factory.build(member)\n    return ngControl\n  }\n\n  private resolveControlFactory(member: iFormMember) {\n    switch(member.type) {\n      case \"form-item\": {\n        return this.formControlFactory\n      }\n      case \"form-group\": {\n        return this\n      }\n      default: {\n        return this.formControlFactory\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n} from '@angular/forms'\n\nimport {\n  iFactory,\n  iFormControl,\n  iFormControlProps,\n  iFormControlConstructor,\n} from '../interfaces/index'\n\nimport {\n  CheckboxFormControl,\n  SelectFormControl,\n  InputFormControl,\n  TextboxFormControl,\n} from '../classes/index'\n\nimport { NgFormControlFactory } from './ng-forms/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlFactory\n  implements iFactory<iFormControl, any> {\n\n  constructor(\n    private ngFormControlFactory: NgFormControlFactory,\n  ) { }\n\n  build(props: iFormControlProps): iFormControl {\n    let formControl = this.buildFormControl(props)\n    formControl.ngControl = this.buildNgFormControl(formControl)\n    return formControl\n  }\n\n  private buildFormControl(props: iFormControlProps): iFormControl {\n    let controlConstructor = this.resolveControlConstructor(props)\n    return new controlConstructor(props)\n  }\n\n  private resolveControlConstructor(\n    props: iFormControlProps,\n  ): iFormControlConstructor {\n\n    switch(props.controlType) {\n      case \"input\": {\n        return InputFormControl\n      }\n      case \"textbox\": {\n        return TextboxFormControl\n      }\n      case \"select\": {\n        return SelectFormControl\n      }\n      case \"checkbox\": {\n        return CheckboxFormControl\n      }\n      default: {\n        return InputFormControl\n      }\n    }\n  }\n\n  private buildNgFormControl(formControl: iFormControl): NgFormControl {\n    return this.ngFormControlFactory.build(formControl)\n  }\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFactory,\n  iFormMember,\n  iFormGroup,\n  iFormGroupProps,\n  iFormMemberFactoryParams,\n} from '../interfaces/index'\n\nimport {\n  iConstructor,\n} from '../../../providers/index'\n\nimport {\n  FormGroup,\n  FormWrapper,\n} from '../classes/index'\n\nimport { NgFormGroupFactory } from './ng-forms/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGroupFactory\n  implements iFactory<iFormGroup, iFormMemberFactoryParams> {\n\n  type: FormMemberType = 'form-group'\n\n  constructor(\n    private ngFormGroupFactory: NgFormGroupFactory,\n  ) { }\n\n  build(params: iFormMemberFactoryParams): iFormGroup {\n    let formGroup = this.buildFormGroup(params)\n    formGroup.ngControl = this.buildNgFormGroup(formGroup)\n    return formGroup\n  }\n\n  private buildFormGroup(params: iFormMemberFactoryParams): iFormGroup {\n    let formMemberCtor = this.resolveFormGroupCtor(params)\n    return new formMemberCtor(<iFormGroupProps>params.data)\n  }\n\n  private resolveFormGroupCtor(\n    params: iFormMemberFactoryParams\n  ): iConstructor<iFormGroup> {\n\n    switch(params.type) {\n      case \"form-group\": {\n        return FormGroup\n      }\n      case \"form\": {\n        return FormWrapper\n      }\n      default: {\n        return FormGroup\n      }\n    }\n  }\n\n  private buildNgFormGroup(formGroup: iFormGroup): NgFormGroup {\n    return this.ngFormGroupFactory.build(formGroup)\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormWrapper,\n  iFormMemberMap,\n  iFormGroupProps,\n} from '../interfaces/index'\n\nimport {\n  FormWrapper,\n} from '../classes/index'\n\nimport { FormGroupFactory } from './form-group-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormFactory {\n  constructor(\n    private formGroupFactory: FormGroupFactory\n  ) { }\n\n  build(members: iFormMemberMap): iFormWrapper {\n    let data = {\n      members: members\n    }\n    let params = {\n      type: 'form' as FormMemberType,\n      data: data as iFormGroupProps\n    }\n    return this.formGroupFactory.build(params)\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  FormMemberType,\n  iFactory,\n  iFormControl,\n  iFormItem,\n  iFormItemProps,\n  iFormMemberFactoryParams,\n  iLabelElement,\n} from '../interfaces/index'\n\nimport {\n  FormItem,\n  LabelElement,\n} from '../classes/index'\n\nimport { FormControlFactory } from './form-control-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormItemFactory\n  implements iFactory<iFormItem, iFormMemberFactoryParams> {\n\n  type: FormMemberType = 'form-item'\n\n  constructor(\n    private formControlFactory: FormControlFactory,\n  ) { }\n\n  build(params: iFormMemberFactoryParams): iFormItem {\n    let label = this.buildLabel(params)\n    let control = this.buildControl(params)\n    return this.buildItem(label, control)\n  }\n\n  private buildItem(label: iLabelElement, control: iFormControl): iFormItem {\n    let itemParams = {\n      label: label,\n      control: control\n    }\n    return new FormItem(itemParams)\n  }\n\n  buildLabel(params: iFormMemberFactoryParams): iLabelElement {\n    let props = <iFormItemProps>params.data\n    return new LabelElement(props.label)\n  }\n\n  buildControl(params: iFormMemberFactoryParams): iFormControl {\n    let props = <iFormItemProps>params.data\n    return this.formControlFactory.build(props.control)\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  iFactory,\n  iFormMember,\n  iFormMemberFactoryParams,\n} from '../interfaces/index'\n\nimport { FormItemFactory }   from './form-item-factory.service'\nimport { FormGroupFactory }  from './form-group-factory.service'\n\ninterface iFormMemberFactory extends iFactory<iFormMember, iFormMemberFactoryParams> {}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormMemberFactory\n  implements iFactory<iFormMember, iFormMemberFactoryParams> {\n\n  private factories: iFactory<iFormMember, iFormMemberFactoryParams>[]\n  private defaultMemberFactory: iFactory<iFormMember, iFormMemberFactoryParams>\n\n  constructor(\n    private formItemFactory: FormItemFactory,\n    private formGroupFactory: FormGroupFactory,\n  ) {\n    this.factories = [\n      formItemFactory,\n      formGroupFactory\n    ]\n    this.defaultMemberFactory = formItemFactory\n  }\n\n  build(params: iFormMemberFactoryParams): iFormMember {\n    let factory = this.resolveMemberFactory(params)\n    return factory.build(params)\n  }\n\n  private resolveMemberFactory(\n    params: iFormMemberFactoryParams\n  ): iFactory<iFormMember, iFormMemberFactoryParams> {\n\n    let typeFactory = _.find(this.factories, { type: params.type })\n\n    return <iFormMemberFactory>_.defaultTo(typeFactory, this.defaultMemberFactory)\n  }\n}\n","import {\n  InputFormControlComponent,\n  InputBaseFormControlComponent,\n  InputCheckboxFormControlComponent,\n  InputRadioFormControlComponent,\n} from './index'\n\nexport const components: any[] = [\n  InputFormControlComponent,\n  InputBaseFormControlComponent,\n  InputCheckboxFormControlComponent,\n  InputRadioFormControlComponent,\n]\n","import {\n  BaseFormControlComponent,\n} from './index'\n\nimport { components as inputComponents } from './input/components'\n\nexport const components: any[] = [\n  BaseFormControlComponent,\n  ...inputComponents,\n]\n","import {\n  LabelComponent,\n} from './index'\n\nimport { components as formControlsComponents } from './form-controls/components'\n\nexport const components: any[] = [\n  LabelComponent,\n  ...formControlsComponents,\n]\n","import {\n  CeoFormComponent,\n  CeoFormControlComponent,\n  CeoFormGroupComponent,\n  CeoFormItemComponent,\n  CeoFormItemErrorComponent,\n} from './index'\n\nimport { components as elementComponents } from './elements/components'\n\nexport const components: any[] = [\n  CeoFormComponent,\n  CeoFormControlComponent,\n  CeoFormGroupComponent,\n  CeoFormItemComponent,\n  CeoFormItemErrorComponent,\n  ...elementComponents,\n]\n\n","import {\n  NgFormControlFactory,\n  NgFormGroupFactory,\n} from './index'\n\nexport const services: any[] = [\n  NgFormControlFactory,\n  NgFormGroupFactory,\n]\n","import {\n  FormControlFactory,\n  FormFactory,\n  FormGroupFactory,\n  FormItemFactory,\n  FormMemberFactory,\n} from './index'\n\nimport { services as ngFormsServices } from './ng-forms/services'\n\nexport const services: any[] = [\n  FormControlFactory,\n  FormFactory,\n  FormGroupFactory,\n  FormItemFactory,\n  FormMemberFactory,\n  ...ngFormsServices,\n]\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { CommonModule }   from '@angular/common'\n\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport {\n  MatRadioModule,\n  MatCheckboxModule,\n} from '@angular/material'\n\nimport { SharedDeclarablesModule } from '../../declarables/index'\n\nimport { components } from './components/components'\nimport { services }   from './services/services'\n\nconst angularMaterialModules: any[] = [\n  MatRadioModule,\n  MatCheckboxModule,\n\n]\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbDatepickerModule,\n    angularMaterialModules,\n    SharedDeclarablesModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n  ]\n})\nexport class CeoFormsModule{\n  static forRoot() {\n    return {\n      ngModule: CeoFormsModule,\n      providers: [\n        ...services,\n      ],\n    }\n  }\n}\n","// https://www.w3schools.com/tags/tag_video.asp\n\nimport * as _ from 'lodash'\n\nimport { Component, Input, } from '@angular/core'\n\nimport {\n  iHtmlVideoTagAttributes,\n  iHtmlSourceTagAttributes,\n} from '../../interfaces/index'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-html-video',\n  templateUrl: './html-video.component.html',\n  styleUrls: ['./html-video.component.scss']\n})\nexport class HtmlVideoComponent extends BaseComponent {\n  @Input() tagAttributes: iHtmlVideoTagAttributes\n\n  get videoSources(): iHtmlSourceTagAttributes[] {\n    var sources\n    if(_.isString(this.tagAttributes.src)) {\n      let source = {\n        src: this.tagAttributes.src,\n        type: 'video/mp4'\n      }\n      sources = [source]\n    }\n    else {\n      sources = this.tagAttributes.src\n    }\n    return _.flattenDeep(sources) as iHtmlSourceTagAttributes[]\n  }\n}\n","export const mimeTypes: any = [\n  {\n    name: 'image/png',\n    mimeType: 'image/png',\n    mediaType: 'image',\n  },\n  {\n    name: 'audio/mpeg',\n    mimeType: 'audio/mpeg',\n    mediaType: 'video',\n  },\n  {\n    name: 'audio/ogg',\n    mimeType: 'audio/ogg',\n    mediaType: 'video',\n  },\n  {\n    name: 'audio/*',\n    mimeType: 'audio/*',\n    mediaType: 'video',\n  },\n  {\n    name: 'video/mp4',\n    mimeType: 'video/mp4',\n    mediaType: 'video',\n  },\n]\n","import {\n  HtmlVideoComponent,\n} from './index'\n\nexport const components: any[] = [\n  HtmlVideoComponent,\n]\n","import { components as htmlVideoComponents } from './html-video/components'\n\nexport const components: any[] = [\n  ...htmlVideoComponents,\n]\n","import { NgModule }     from '@angular/core'\nimport { CommonModule }   from '@angular/common'\n\nimport { components } from './components/components'\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n    ...components,\n  ]\n})\nexport class CeoHtmlModule{\n  static forRoot() {\n    return {\n      ngModule: CeoHtmlModule,\n      providers: [],\n    }\n  }\n}\n"],"names":["tslib_1.__extends","_.isEmpty","_.forEach","filter","_.reduce","_.includes","_.lowerCase","_.uniqBy","_.flatten","_.map","_.bind","_.extend","_.assignIn","_.pick","_.isFunction","_.mapValues","_.clone","components","_.isNumber","_.toInteger","_.join","DropdownItemComponent","DropdownLinkComponent","DropdownTextComponent","DropdownCustomContentComponent","NgbDateNativeAdapter","_.has","_.partial","defaults","observableOf","_.find","_.merge","_.endsWith","_.get","snakeCase","_.snakeCase","_.mapKeys","_.isNil","observableThrowError","map","_.isString","_.isPlainObject","_.isArray","_.reject","_.cloneDeepWith","_.pickBy","ApiRequestOptionsBuilder","ApiRequestUrlBuilder","ApiResponseParser","_.castArray","services","JsonApiResponseParser","base.services","jsonApi.services","api.services","auth.services","cache.services","customElement.services","httpInterceptors.services","values","_.filter","_.compact","ItemComponent","base.components","attributeList.components","body.components","breadcrumb.components","cardSelectList.components","card.components","datepicker.components","dropdown.components","field.components","formGroup.components","form.components","iframe.components","input.components","item.components","list.components","navbarToggle.components","navigation.components","page.components","pane.components","search.components","selectList.components","svgLoader.components","table.components","SharedDeclarablesModule","tokenProviders","providers","_.defaultsDeep","CustomElementManager","DialogWidgetComponent","DialogWidgetHeaderComponent","DialogWidgetFooterComponent","DialogCloseComponent","widgetComponents","dialogComponents","modalComponents","modalNavigationItemComponents","DialogConfigService","angularMaterialModules","dialogTokenProviders","FormGroup","_.keys","_.values","isEmpty","_.defaults","SharedBaseComponent","BaseComponent","NgFormControl","NgValidators","NgFormGroup","FormControlFactory","NgFormControlFactory","FormGroupFactory","NgFormGroupFactory","_.defaultTo","InputFormControlComponent","InputBaseFormControlComponent","InputCheckboxFormControlComponent","InputRadioFormControlComponent","BaseFormControlComponent","inputComponents","formControlsComponents","CeoFormComponent","CeoFormControlComponent","CeoFormGroupComponent","CeoFormItemComponent","CeoFormItemErrorComponent","elementComponents","ngFormsServices","_.flattenDeep","htmlVideoComponents"],"mappings":"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"}
