{"version":3,"sources":["ng://@ceo/shared/lib/declarables/directives/click-stop-event-bubble/click-stop-event-bubble.directive.ts","ng://@ceo/shared/lib/declarables/directives/container.directive.ts","ng://@ceo/shared/lib/declarables/directives/navigation.directive.ts","node_modules/tslib/tslib.es6.js","ng://@ceo/shared/lib/declarables/directives/route-transformer/route-transformer.directive.ts","ng://@ceo/shared/lib/declarables/directives/scroll-top/scroll-top.directive.ts","ng://@ceo/shared/lib/declarables/directives/index.ts","ng://@ceo/shared/lib/declarables/pipes/custom-search.pipe.ts","ng://@ceo/shared/lib/declarables/pipes/safe-html.pipe.ts","ng://@ceo/shared/lib/declarables/pipes/index.ts","ng://@ceo/shared/lib/providers/decorators/mixin.decorator.ts","ng://@ceo/shared/lib/providers/mixins/attribute-getter-setter.mixin.ts","ng://@ceo/shared/lib/providers/mixins/attribute-updater.mixin.ts","ng://@ceo/shared/lib/providers/mixins/data-inspector.mixin.ts","ng://@ceo/shared/lib/providers/mixins/memoizer.mixin.ts","ng://@ceo/shared/lib/providers/mixins/property-delegator.mixin.ts","ng://@ceo/shared/lib/declarables/components/base/base.component.ts","ng://@ceo/shared/lib/declarables/components/base/index.ts","ng://@ceo/shared/lib/declarables/components/attribute-list/attribute-list.component.ts","ng://@ceo/shared/lib/declarables/components/attribute-list/index.ts","ng://@ceo/shared/lib/declarables/components/body/body.component.ts","ng://@ceo/shared/lib/declarables/components/body/index.ts","ng://@ceo/shared/lib/declarables/components/breadcrumb/breadcrumb.component.ts","ng://@ceo/shared/lib/declarables/components/breadcrumb/index.ts","ng://@ceo/shared/lib/declarables/components/select-list/select-list.component.ts","ng://@ceo/shared/lib/declarables/components/card-select-list/card-select-list.component.ts","ng://@ceo/shared/lib/declarables/components/card-select-list/index.ts","ng://@ceo/shared/lib/declarables/components/card/card.component.ts","ng://@ceo/shared/lib/declarables/components/card/index.ts","ng://@ceo/shared/lib/declarables/components/datepicker/date-parser-formatter.service.ts","ng://@ceo/shared/lib/declarables/components/datepicker/datepicker.component.ts","ng://@ceo/shared/lib/declarables/components/datepicker/index.ts","ng://@ceo/shared/lib/declarables/components/dropdown/dropdown.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/custom-content/custom-content.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/item/item.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/link/link.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/text/text.component.ts","ng://@ceo/shared/lib/declarables/components/dropdown/index.ts","ng://@ceo/shared/lib/declarables/components/field/field.component.ts","ng://@ceo/shared/lib/declarables/components/field/index.ts","ng://@ceo/shared/lib/declarables/components/form-group/form-group.component.ts","ng://@ceo/shared/lib/declarables/components/form-group/index.ts","ng://@ceo/shared/lib/providers/classes/api-config.ts","ng://@ceo/shared/lib/providers/classes/breadcrumb.ts","ng://@ceo/shared/lib/providers/classes/card.ts","ng://@ceo/shared/lib/providers/classes/pane.ts","ng://@ceo/shared/lib/providers/services/notification.service.ts","ng://@ceo/shared/lib/providers/services/ngb-date-adapter.service.ts","ng://@ceo/shared/lib/providers/services/input-control.service.ts","ng://@ceo/shared/lib/providers/services/csv-to-json.service.ts","ng://@ceo/shared/lib/providers/tokens/api-config.ts","ng://@ceo/shared/lib/providers/tokens/custom-elements-config.ts","ng://@ceo/shared/lib/providers/tokens/pane-list.ts","ng://@ceo/shared/lib/providers/tokens/providers.ts","ng://@ceo/shared/lib/providers/services/pane-factory.service.ts","ng://@ceo/shared/lib/providers/services/pane-provider.service.ts","ng://@ceo/shared/lib/providers/services/pane-manager.service.ts","ng://@ceo/shared/lib/providers/services/api/base/request-options-builder.service.ts","ng://@ceo/shared/lib/providers/services/api/base/request-url-builder.service.ts","ng://@ceo/shared/lib/providers/services/api/base/response-parser.service.ts","ng://@ceo/shared/lib/providers/services/api/base/api.service.ts","ng://@ceo/shared/lib/providers/services/api/base/index.ts","ng://@ceo/shared/lib/providers/services/api/json-api/response-parser.service.ts","ng://@ceo/shared/lib/providers/services/api/json-api/index.ts","ng://@ceo/shared/lib/providers/services/api/index.ts","ng://@ceo/shared/lib/providers/services/auth/auth.service.ts","ng://@ceo/shared/lib/providers/services/auth/index.ts","ng://@ceo/shared/lib/providers/services/cache/request-cache.service.ts","ng://@ceo/shared/lib/providers/services/cache/index.ts","ng://@ceo/shared/lib/providers/services/custom-element/manager.service.ts","ng://@ceo/shared/lib/providers/services/custom-element/factory.service.ts","ng://@ceo/shared/lib/providers/services/custom-element/index.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/caching-interceptor.service.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/noop-interceptor.service.ts","ng://@ceo/shared/lib/providers/services/http-interceptors/index.ts","ng://@ceo/shared/lib/providers/services/index.ts","ng://@ceo/shared/lib/providers/guards/auth-guard.ts","ng://@ceo/shared/lib/providers/guards/index.ts","ng://@ceo/shared/lib/declarables/components/form/form.component.ts","ng://@ceo/shared/lib/declarables/components/form/index.ts","ng://@ceo/shared/lib/declarables/components/iframe/iframe.component.ts","ng://@ceo/shared/lib/declarables/components/iframe/index.ts","ng://@ceo/shared/lib/declarables/components/input/input.component.ts","ng://@ceo/shared/lib/declarables/components/input/index.ts","ng://@ceo/shared/lib/declarables/components/item/item.component.ts","ng://@ceo/shared/lib/declarables/components/item/index.ts","ng://@ceo/shared/lib/declarables/components/list/list.component.ts","ng://@ceo/shared/lib/declarables/components/list/index.ts","ng://@ceo/shared/lib/declarables/components/navbar-toggle/navbar-toggle.component.ts","ng://@ceo/shared/lib/declarables/components/navbar-toggle/index.ts","ng://@ceo/shared/lib/declarables/components/navigation/navigation.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-item/nav-item.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-link/nav-link.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav/nav.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/nav-text/nav-text.component.ts","ng://@ceo/shared/lib/declarables/components/navigation/index.ts","ng://@ceo/shared/lib/declarables/components/page/page.component.ts","ng://@ceo/shared/lib/declarables/components/page/index.ts","ng://@ceo/shared/lib/declarables/components/pane/pane.component.ts","ng://@ceo/shared/lib/declarables/components/pane/index.ts","ng://@ceo/shared/lib/declarables/components/search/search.component.ts","ng://@ceo/shared/lib/declarables/components/search/index.ts","ng://@ceo/shared/lib/declarables/components/select-list/index.ts","ng://@ceo/shared/lib/declarables/components/svg-loader/svg-loader.component.ts","ng://@ceo/shared/lib/declarables/components/svg-loader/index.ts","ng://@ceo/shared/lib/declarables/components/table/table.component.ts","ng://@ceo/shared/lib/declarables/components/table/index.ts","ng://@ceo/shared/lib/declarables/components/index.ts","ng://@ceo/shared/lib/declarables/pages/base/base.page.ts","ng://@ceo/shared/lib/declarables/pages/index.ts","ng://@ceo/shared/lib/declarables/declarables.module.ts","ng://@ceo/shared/lib/providers/providers.module.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/close/close.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/dialog.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/widget.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/header/header.component.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/footer/footer.component.ts","ng://@ceo/shared/lib/common/dialogs/components/modal-navigation-item/modal-navigation-item.component.ts","ng://@ceo/shared/lib/common/dialogs/components/modal/modal.component.ts","ng://@ceo/shared/lib/common/dialogs/tokens/dialogs-config.ts","ng://@ceo/shared/lib/common/dialogs/tokens/providers.ts","ng://@ceo/shared/lib/common/dialogs/services/config.service.ts","ng://@ceo/shared/lib/common/dialogs/services/mat-dialog-adapter.service.ts","ng://@ceo/shared/lib/common/dialogs/services/dialog.service.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/widget/components.ts","ng://@ceo/shared/lib/common/dialogs/components/dialog/components.ts","ng://@ceo/shared/lib/common/dialogs/components/modal/components.ts","ng://@ceo/shared/lib/common/dialogs/components/modal-navigation-item/components.ts","ng://@ceo/shared/lib/common/dialogs/components/components.ts","ng://@ceo/shared/lib/common/dialogs/services/services.ts","ng://@ceo/shared/lib/common/dialogs/dialogs.module.ts","ng://@ceo/shared/lib/common/forms/classes/form-member.ts","ng://@ceo/shared/lib/common/forms/classes/form-group.ts","ng://@ceo/shared/lib/common/forms/classes/form-item.ts","ng://@ceo/shared/lib/common/forms/classes/form-wrapper.ts","ng://@ceo/shared/lib/common/forms/classes/label-element.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/base.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/checkbox.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/select.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/input.form-control.ts","ng://@ceo/shared/lib/common/forms/classes/form-controls/textbox.form-control.ts","ng://@ceo/shared/lib/common/forms/components/form/form.component.ts","ng://@ceo/shared/lib/common/forms/components/form-control/form-control.component.ts","ng://@ceo/shared/lib/common/forms/components/form-group/form-group.component.ts","ng://@ceo/shared/lib/common/forms/components/form-item/form-item.component.ts","ng://@ceo/shared/lib/common/forms/components/form-item-error/form-item-error.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/label/label.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/base/base.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/input.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/base/base.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/checkbox/checkbox.component.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/radio/radio.component.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/form-control-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/form-group-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-control-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-group-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-item-factory.service.ts","ng://@ceo/shared/lib/common/forms/services/form-member-factory.service.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/input/components.ts","ng://@ceo/shared/lib/common/forms/components/elements/form-controls/components.ts","ng://@ceo/shared/lib/common/forms/components/elements/components.ts","ng://@ceo/shared/lib/common/forms/components/components.ts","ng://@ceo/shared/lib/common/forms/services/ng-forms/services.ts","ng://@ceo/shared/lib/common/forms/services/services.ts","ng://@ceo/shared/lib/common/forms/forms.module.ts","ng://@ceo/shared/lib/common/html/components/html-video/html-video.component.ts","ng://@ceo/shared/lib/common/html/components/html-video/components.ts","ng://@ceo/shared/lib/common/html/components/components.ts","ng://@ceo/shared/lib/common/html/html.module.ts","ng://@ceo/shared/lib/common/html/constants/mime-types.ts"],"names":["ClickStopEventBubbleDirective","prototype","onClick","event","this","stopEventBubble","stopPropagation","preventDefault","Directive","args","selector","HostListener","ContainerDirective","viewContainerRef","ViewContainerRef","NavigationDirective","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","RouteTransformerDirective","el","router","_this","_super","routeEvent","EventEmitter","tslib_1.__extends","linkElement","getLink","handleLink","target","tagName","parentElement","element","canRoute","navigate","emitRouteEvent","emit","window","location","origin","url","pathname","extras","buildNavigationExtras","queryParams","buildQueryParams","_.isEmpty","fragment","getUrlFragment","hash","substring","pairs","search","slice","split","result","_.forEach","pair","decodeURI","ElementRef","Router","Output","ScrollTopDirective","ngOnInit","routerNavigationEnd$","subscribe","scrollTop","defineProperty","_routerNavigationEnd$","buildNavEndEvent","events","pipe","filter","NavigationEnd","console","log","scrollTo","directives","CustomSearchPipe","transform","collection","attributes","_.uniqBy","_.flatten","_.map","key","entities","_.reduce","entity","_.includes","_.lowerCase","Pipe","name","SafeHtmlPipe","sanitized","bypassSecurityTrustHtml","DomSanitizer","pipes","Mixin","baseCtors","derivedCtor","forEach","baseCtor","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","writable","configurable","enumerable","get","set","createGetSet","obj","props","getProp","setProp","getSetProps","_.bind","AttributeGetterSetter","updatedKeys","createAttributeSettersAndGetters","createSettersAndGetters","camelizedKey","camelCase","AttributeUpdater","updateAttributes","_.extend","DataInspector","inspectData","data","inspect","Memoizer","memoized","property","theFunction","Helper","source","propNames","bindToSource","run","copyProperty","propName","sourceDescriptor","getDescriptor","copyFromSource","_.assignIn","_.pick","propDescriptor","_.mapValues","_.isFunction","_.clone","parentSource","getPrototypeOf","PropertyDelegator","delegatedProperties","setDelegatedProperties","setAllDelegatedProperties","sourceName","BaseComponent","isEnabled","date","Date","id","toISOString","message","_i","Component","template","decorators","desc","c","Reflect","decorate","__decorate","metadataKey","metadataValue","metadata","components","AttributeListComponent","attributeEntities$","attributeEntity$","mergeMap","getAttributeEntities$","attributeEntityLabels$","getAttributeValue","attributeEntity","attribute","Input","BodyComponent","BreadcrumbComponent","apply","itemSelected","onItemClick","item","SelectListComponent","itemEmitter","isSelectedItem","selectedItem","select","CardSelectListComponent","CardComponent","padNumber","_.isNumber","DateParserFormatter","parse","dateParts","trim","year","_.toInteger","month","day","format","_.join","Injectable","DatepickerComponent","control","valueChanges","onControlValue","onDateSelect","providers","provide","NgbDateParserFormatter","useClass","DropdownComponent","itemEvent","className","classes","hasSubmenu","onItemEvent","CustomContentComponent","onRouteEvent","ItemComponent","displayType","LinkComponent","TextComponent","DropdownItemComponent","DropdownLinkComponent","DropdownTextComponent","DropdownCustomContentComponent","FieldComponent","FormGroupComponent","isInputGroup","input","ApiConfig","params","_url","_defaultQueryParams","defaultQueryParams","_defaultBodyParams","defaultBodyParams","_resourceTypes","resourceTypes","Breadcrumb","items","current","noItems","Card","setAttributes","Pane","toCard","title","iconName","setStatus","status","active","NotificationService","showNotification","action","timeout","NgbDateNativeAdapter","fromModel","isValidDate","ngbDateStructFromValidDate","toModel","dateFromValidNgbDateStruct","_.has","getFullYear","getMonth","getDate","NgbDateAdapter","InputControlService","toFormGroup","inputGroup","buildFormGroup","FormGroup","buildControls","inputs","_.partial","buildAbstractControl","controls","build","getFormControlBuilder","generateInputKey","buildFormControl","inputControl","FormControl","Validators","compose","validators","csvToJson","csv_","CsvToJsonService","csvToJsonFromString","csvString","opts","noheader","fromString","csvToJsonFromFilePath","filePath","fromFile","providedIn","API_CONFIG","InjectionToken","CUSTOM_ELEMENTS_CONFIG","PaneList","useValue","multi","PaneFactory","paneList","build$","panes","buildPane","observableOf","Inject","PaneProvider","paneFactory","_activePane$","BehaviorSubject","_panes$","setPanes","startWith","activePaneFromPanes","setPaneActiveStatus","pane","activeStatus","emitActivePane","emitActivePanes","_.find","PaneManager","paneProvider","panes$","activePane$","activatePane","first","activePane","RequestOptionsBuilder","apiConfig","method","payload","isBodyRequest","getBody","resourceIdentifier","getOptions","body","sanitizedParams","_.merge","observe","ri","getParams","responseType","getResponseType","filterParams","jsonToQueryParamsObject","isTextResponseType","_.endsWith","getFilter","_.get","_.mapKeys","_.snakeCase","RequestUrlBuilder","getResourceTypeUrl","fragments","getResourceTypeUrlFragment","isSingleResourceRequest","singleRequestFragment","singleResourceRequestFragment","getResourceType","config","urlFragment","resourceType","hasResourceType","_.isNil","ResponseParser","ApiService","http","csvToJsonService","responseParser","urlBuilder","optionsBuilder","post$","handleRequest$","delete$","get$","put$","update$","create$","executeRequest$","catchError","handleError$","response","processedResponse$","observableThrowError","getUrl","httpOpts","getHttpOpts","apiResponse","jsonData$","map","json","sanitizedData","buildApiResponse","_.isString","csvToJsonData$","sanitize","object","filteredObject","_.cloneDeepWith","_.isPlainObject","_.isArray","_.reject","undefined","Observable","observer","jsonData","jsonApiResponse","included","index","_.pickBy","propValue","HttpClient","services","ApiRequestOptionsBuilder","ApiRequestUrlBuilder","ApiResponseParser","ResponseParser$1","_.castArray","loadIncluded","payloadData","JsonApiResponseParser","base.services","jsonApi.services","AuthService","authService","userSignedIn$","Subject","validate","validateToken","handleValidationTokenResponse","handleValidationError","signOutUser","signOut","res","registerUser","signUpData","registerAccount","signInUser","signInData","signIn","userSignedIn","successfulLoginResponse","success","AngularTokenService","RequestCacheService","cacheEntries","req","put","cacheEntry","lastRead","Manager","_config","ngComponentPath","define","elementExists","elementName","customElement","buildCustomElement","elementConfig","defineNativeCustomElement","customElements","isCustomElement","hasNgComponent","getNgComponent","createCustomElement","ctor","defaultConfig","Factory","manager","getElement","launchElement","buildElementInstance","configureElementInstance","defaultElement","document","getElementById","appendChild","createElement","addEventListener","removeChild","prop","CachingInterceptor","cache","intercept","isCachable","handle","cachedResponse","NoopInterceptor","sharedServices","api.services","auth.services","cache.services","customElement.services","httpInterceptors.services","AuthGuard","canActivate","sharedGuards","FormComponent","inputControlService","handleActions","inputGroup$","_formGroup","dataService","handleDialogActions","formGroup","defaultParams","IframeComponent","sanitizer","bypassSecurityTrustResourceUrl","InputComponent","field","valid","selected","option","checked","values","actionEmitter","configHeader$","triggerAction","getValue","getActions","headerAttribute","getActionArray","checkActions","actions","_currentObj","_.filter","condition","_.compact","ListComponent","searchAttributes","event_","NavbarToggleComponent","animationClass","activeClass","ngClass","state","isActive","toggleEmitter","getNgClass","setState","toggle","oldState","emitNewState","animation","fromState","toState","ngClasses","NavigationComponent","menuClass","getMenuClass","classNames","NavItemComponent","NavLinkComponent","NavComponent","NavTextComponent","PageComponent","PaneComponent","componentFactoryResolver","launch","pane$","loadComponent","createComponent","componentFactory","resolveComponentFactory","component","containerDirective","clear","componentRef","setInputs","instance","ComponentFactoryResolver","ViewChild","forwardRef","SearchComponent","searchKeyEmitter","onValueChange","searchText","SvgLoaderComponent","ngAfterViewChecked","view","_template","createEmbeddedView","fromContext","vc","insert","read","TemplateRef","TableComponent","base.components","attributeList.components","body.components","breadcrumb.components","cardSelectList.components","card.components","datepicker.components","dropdown.components","field.components","formGroup.components","form.components","iframe.components","input.components","item.components","list.components","navbarToggle.components","navigation.components","page.components","pane.components","search.components","selectList.components","svgLoader.components","table.components","BasePage","pages","angularMaterialModules","MatButtonModule","MatCheckboxModule","MatSnackBarModule","MatAutocompleteModule","MatFormFieldModule","MatInputModule","MatRadioModule","MatSelectModule","MatIconModule","MatDialogModule","DeclarablesModule","NgModule","imports","FormsModule","ReactiveFormsModule","CommonModule","RouterModule","NgbDatepickerModule","declarations","exports","entryComponents","ProvidersModule","SharedDeclarablesModule","tokenProviders","CloseComponent","close","onClose","DialogComponent","dialogRef","contentElementId","actions$","onAction","emitAction","buildAction","MatDialogRef","MAT_DIALOG_DATA","WidgetComponent","HeaderComponent","FooterComponent","onTriggerAction","dialogAction","ModalNavigationItemComponent","ModalComponent","afterClosed","DIALOGS_CONFIG","defaultDialogsConfig","isDefault","defaults","componentType","width","header","show","footer","dialogs","ConfigService","customElementManager","dialogsConfig","dialogElement","getComponent","getDialogConfig","configActions","dialogConfigActions","_.defaultsDeep","others","dialogName","localName","dialogActions$","CustomElementManager","MatDialogAdapterService","dialog","adapterConfigProperties","nonDataProperties","open","contentElement","dialogConfig","buildAdapterDialogConfig","dialogComponentType","matDialogComponent","getMatDialog","dialogComponent","getDialogComponent","configuredDialogComponent","closeAll","matDialog","connectDialogs","eventName","dialogComponentData","buildComponentData","adapterDialogConfig","addContentComponent","showContentComponent","launchContentComponent","buildLaunchAction","MatDialog","DialogService","dialogAdapter","configService","buildDialogConfig","openVendorDialog","DialogWidgetComponent","DialogWidgetHeaderComponent","DialogWidgetFooterComponent","DialogCloseComponent","widgetComponents","dialogComponents","modalComponents","modalNavigationItemComponents","DialogConfigService","CeoDialogsModule","forRoot","ngModule","dialogTokenProviders","NgsRevealModule","FormMember","assign","_ngControl","ngControl","markAsTouchedAndDirty","markAsTouched","markAsDirty","type","_.keys","members","getMember","memberName","_members","applyMarker","markerName","member","_.values","isEmpty","FormItem","showValidations","errorMessages","FormWrapper","LabelElement","init","BaseFormControl","order","errors","dirty","touched","lowerCased","displayName","firstLetter","startsWithVowel","CheckboxFormControl","controlType","SelectFormControl","options","inputFormControlDefaults","label","placeholder","row","inputType","required","InputFormControl","_.defaults","TextboxFormControl","FormComponent$$1","FormControlComponent","FormGroupComponent$$1","FormItemComponent","invalid","formGroupClass","FormItemErrorComponent","LabelComponent","BaseComponent$$1","SharedBaseComponent","CheckboxComponent","RadioComponent","FormControlFactory","formControl","NgFormControl","NgValidators","FormGroupFactory","formControlFactory","buildNgFormGroup","ngControls","buildNgControls","NgFormGroup","getNgControl","buildNgControl","resolveControlFactory","FormControlFactory$1","FormControlFactory$$1","ngFormControlFactory","buildNgFormControl","resolveControlConstructor","NgFormControlFactory","FormGroupFactory$1","FormGroupFactory$$1","ngFormGroupFactory","resolveFormGroupCtor","NgFormGroupFactory","FormFactory","formGroupFactory","FormItemFactory","buildLabel","buildControl","buildItem","FormMemberFactory","formItemFactory","factories","defaultMemberFactory","resolveMemberFactory","typeFactory","_.defaultTo","InputFormControlComponent","InputBaseFormControlComponent","InputCheckboxFormControlComponent","InputRadioFormControlComponent","BaseFormControlComponent","inputComponents","formControlsComponents","CeoFormComponent","CeoFormControlComponent","CeoFormGroupComponent","CeoFormItemComponent","CeoFormItemErrorComponent","elementComponents","ngFormsServices","CeoFormsModule","HtmlVideoComponent","sources","tagAttributes","src","_.flattenDeep","htmlVideoComponents","CeoHtmlModule","mimeType","mediaType"],"mappings":"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","sourcesContent":["import { Directive, HostListener } from \"@angular/core\"\n\n@Directive({\n  selector: \"[ceoClickStopEventBubble]\"\n})\nexport class ClickStopEventBubbleDirective\n{\n  @HostListener(\"click\", [\"$event\"])\n  public onClick(event: any): void {\n    this.stopEventBubble(event)\n  }\n\n  protected stopEventBubble(event) {\n    if(event.stopPropagation) {\n      event.stopPropagation()\n    }\n    if(event.preventDefault) {\n      event.preventDefault()\n    }\n  }\n}\n","import {\n  Directive, ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[shared-declarables-container]'\n})\nexport class ContainerDirective {\n  constructor(\n    public viewContainerRef: ViewContainerRef\n  ) { }\n}\n","import {\n  Directive, ViewContainerRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[sharedDeclarablesNavigation]'\n})\nexport class NavigationDirective {\n\n  constructor(\n    public viewContainerRef: ViewContainerRef\n  ) { }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as _ from 'lodash'\n\nimport {\n  Directive, ElementRef,\n  HostListener, EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { Router } from '@angular/router'\nimport {\n  HttpParams,\n} from '@angular/common/http'\n\n\n\nimport { startsWith } from '@ceo/core'\n\n\nimport {\n  ClickStopEventBubbleDirective,\n} from '../click-stop-event-bubble/click-stop-event-bubble.directive'\n\n@Directive({\n  selector: '[ceoRouteTransformer]'\n})\nexport class RouteTransformerDirective extends ClickStopEventBubbleDirective {\n  @Output()\n  routeEvent: EventEmitter<any> = new EventEmitter<any>()\n  \n  constructor(private el: ElementRef, private router: Router) {\n    super()\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event) {\n    let linkElement = this.getLink(event)\n\n    if(linkElement) {\n      this.handleLink(linkElement)\n      this.stopEventBubble(event)\n    }\n    else {\n      return\n    }\n  }\n\n  private getLink(event) {\n    if (event.target.tagName === 'A') {\n      return event.target\n    }\n    else if (event.target.parentElement.tagName === 'A') {\n      return event.target.parentElement\n    }\n    else {\n      return null\n    }\n  }\n\n  private handleLink(element) {\n    if(this.canRoute(element)) {\n      this.navigate(element)\n    }\n    else {\n      this.emitRouteEvent(element)\n    }\n  }\n\n  private emitRouteEvent(element): void {\n    let event = {\n      target: element\n    }\n    this.routeEvent.emit(event)\n  }\n\n  private canRoute(element) {\n    return window.location.origin == element.origin\n  }\n\n  private navigate(element) {\n    let url = element.pathname\n    let opts = {}\n    let extras = this.buildNavigationExtras(element)\n    this.router.navigate([url, opts], extras)\n  }\n\n  private buildNavigationExtras(element) {\n    let extras = (<any>{})\n\n    let queryParams = this.buildQueryParams(element)\n    if(!_.isEmpty(queryParams)) {\n      extras.queryParams = queryParams\n    }\n\n    let fragment = this.getUrlFragment(element)\n    if(!_.isEmpty(fragment)) {\n      extras.fragment = fragment\n    }\n\n    return extras\n  }\n\n  private getUrlFragment(element) {\n    return element.hash.substring(1)\n  }\n\n  private buildQueryParams(element) {\n    let pairs = element.search.slice(1).split('&')\n    var result = {}\n    if(pairs[0].length > 0) {\n      _.forEach(pairs, function(pair) {\n        pair = pair.split('=')\n        result[pair[0]] = decodeURI(pair[1] || '')\n      })\n    }\n    return result \n  }\n}\n","import { \n  Observable,\n} from 'rxjs'\n\nimport { filter } from 'rxjs/operators'\n\nimport {\n  Directive,\n  HostListener,\n  OnInit,\n} from \"@angular/core\"\n\nimport {\n  Router,\n  NavigationEnd,\n} from '@angular/router'\n\n\n@Directive({\n  selector: \"[ceoScrollTop]\"\n})\nexport class ScrollTopDirective implements OnInit {\n  private _routerNavigationEnd$: Observable<NavigationEnd>\n  \n  constructor(\n    private router: Router,\n  ) {}\n  \n  ngOnInit() {\n    this.routerNavigationEnd$\n      .subscribe(event => this.scrollTop())\n\n    this.scrollTop()\n  }\n\n  get routerNavigationEnd$(): Observable<NavigationEnd> {\n    if(!this._routerNavigationEnd$) {\n      this._routerNavigationEnd$ = this.buildNavEndEvent()\n    }\n\n    return this._routerNavigationEnd$\n  }\n\n  private buildNavEndEvent(): Observable<NavigationEnd> {\n    return this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ) as Observable<NavigationEnd>\n  }\n  \n  scrollTop() {\n    console.log(\"scroll to the top -- directive\")\n    window.scrollTo(0, 0)\n  }\n}\n\n","import { ClickStopEventBubbleDirective }  from './click-stop-event-bubble/click-stop-event-bubble.directive'\nimport { ContainerDirective }             from './container.directive'\nimport { NavigationDirective }            from './navigation.directive'\nimport { RouteTransformerDirective }      from './route-transformer/route-transformer.directive'\nimport { ScrollTopDirective }             from './scroll-top/scroll-top.directive'\n\n\nexport const directives: any[] = [\n  ClickStopEventBubbleDirective,\n  ContainerDirective,\n  NavigationDirective,\n  RouteTransformerDirective,\n  ScrollTopDirective,\n]\n\nexport { ClickStopEventBubbleDirective }\nexport { ContainerDirective }\nexport { NavigationDirective }\nexport { RouteTransformerDirective }\nexport { ScrollTopDirective }\n","import * as _  from 'lodash';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'customSearch'\n})\nexport class CustomSearchPipe implements PipeTransform {\n  transform(collection: any, args?: any): any {\n    if (!_.isEmpty(args) && collection) {\n      return this.filter(collection, args);\n    }\n\n    return collection;\n  }\n\n  filter(collection, attributes) {\n    let filterCollection = (value, key) => {\n      if(_.isEmpty(value)) {\n        return collection.entities\n      }\n\n      return _.reduce(collection.entities, function(entities, entity) {\n        if(_.includes(_.lowerCase(entity[key]),\n          _.lowerCase(value)) &&\n          !_.isEmpty(value)) {\n          entities.push(entity);\n          return entities;\n        }\n        return entities;\n      }, [])\n    }\n\n    return _.uniqBy(\n      _.flatten(_.map(attributes, filterCollection)),\n      'id');\n  }\n}\n","import { PipeTransform, Pipe } from \"@angular/core\"\nimport { DomSanitizer, SafeHtml }        from '@angular/platform-browser'\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(\n    private sanitized: DomSanitizer,\n  ) {}\n\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value)\n  }\n}\n","import { CustomSearchPipe }   from './custom-search.pipe'\nimport { SafeHtmlPipe }       from './safe-html.pipe'\n\nexport const pipes: any[] = [\n  CustomSearchPipe,\n  SafeHtmlPipe,\n]\n\nexport { CustomSearchPipe }\nexport { SafeHtmlPipe }\n","// https://medium.com/@dmyl/mixins-as-class-decorators-in-typescript-angular2-8e09f1bc1f02\n\n// Decorator to create mixins\n\nexport function Mixin(baseCtors: Function[]) {\n  return function (derivedCtor: Function) {\n    baseCtors.forEach(baseCtor => {\n      Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n        const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name)\n\n        if (name === 'constructor')\n        return\n\n        if (\n          descriptor &&\n          (!descriptor.writable || !descriptor.configurable ||\n           !descriptor.enumerable || descriptor.get || descriptor.set\n          )\n         ) {\n          Object.defineProperty(derivedCtor.prototype, name, descriptor)\n        }\n        else {\n          derivedCtor.prototype[name] = baseCtor.prototype[name]\n        }\n\n      })\n    })\n  }\n}\n","// https://stackoverflow.com/questions/45236274/is-it-possible-to-create-dynamic-getters-setters-in-typescript\n\nimport * as _ from 'lodash'\n\nimport { camelCase } from '@ceo/core'\n\n\nexport const createGetSet = (\n  obj: any,\n  props,\n  key: string,\n  name: string\n) => {\n\n\n  let generateGetSet = (props, key, name) => {\n    let getProp = _.bind(obj.getProp, obj)\n    let setProp = _.bind(obj.setProp, obj)\n\n    return {\n      get: () => getProp(props, key),\n      set: (value: any) => {\n        if(getProp(props, key) !== value) {\n          setProp(props, key, value)\n        }\n      },\n    }\n  }\n\n  let getSetProps = generateGetSet(props, key, name)\n  Object.defineProperty(obj, name, getSetProps)\n\n}\n\nexport class AttributeGetterSetter {\n  attributes: any = {}\n  updatedKeys: string[] = []\n\n  createAttributeSettersAndGetters(): void {\n    this.createSettersAndGetters(this.attributes)\n  }\n\n  createSettersAndGetters(props: any): void {\n    for(let key in props) {                                                    \n      var camelizedKey = camelCase(key)\n      createGetSet(this, props, key, camelizedKey)\n      createGetSet(this, props, key, key)\n    } \n  }\n\n  setProp(props, key, value): void {\n    props[key] = value\n\n    if(this.updatedKeys) {\n      this.updatedKeys.push(key)\n    }\n  }\n\n  getProp(props, key): any {\n    return props[key]\n  }\n}\n","import * as _ from 'lodash'\n\nimport { AttributeGetterSetter } from './attribute-getter-setter.mixin'\n\nexport class AttributeUpdater extends AttributeGetterSetter {\n  updateAttributes(attributes: any): void {\n    _.extend(this.attributes, attributes)\n    this.createSettersAndGetters(this.attributes)\n  }\n}\n","export class DataInspector {\n  inspectData(data: any) {\n    var inspect = (data) => {\n      console.log(data)\n    }\n\n    if(data.subscribe) {\n      data.subscribe(data => inspect(data))\n    }\n    else {\n      inspect(data)\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nexport class Memoizer {\n  memoized(property: string, value: any): any {\n    if(!this[property]) {\n      let theFunction = _.bind(value, this)\n      let result = theFunction()\n      this[property] = <any>result\n    }\n\n    return this[property]\n  }\n}\n","import * as _ from 'lodash'\n\nexport class Helper {\n  constructor(\n    public source: any,\n    public target: any,\n    public propNames: any,\n    public bindToSource: boolean,\n  ) {}\n\n  run() {\n    let copyProperty = _.bind(this.copyProperty, this)\n    _.map(this.propNames, copyProperty)\n  }\n\n  private copyProperty(propName) {\n    let sourceDescriptor = this.getDescriptor(this.source, propName)\n\n    if(sourceDescriptor) {\n      this.copyFromSource(propName, sourceDescriptor)\n    }\n    else {\n      _.assignIn(this.target, _.pick(this.source, propName) )\n    }\n  }\n\n  private copyFromSource(propName, propDescriptor) {\n    if(this.bindToSource) {\n\n      let valueWithBinding = (value) => {\n        if(_.isFunction(value)) {\n          return _.bind(value, this.source)\n        }\n        else {\n          return value\n        }\n      }\n\n      propDescriptor = _.mapValues(propDescriptor, valueWithBinding)\n    }\n\n    Object.defineProperty(this.target, propName, _.clone(propDescriptor))\n  }\n\n  private getDescriptor(source, propName) {\n    let descriptor = Object.getOwnPropertyDescriptor(source, propName)\n    if(descriptor) {\n      return descriptor\n    }\n    else {\n      let parentSource = Object.getPrototypeOf(source)\n      if(parentSource) {\n        return this.getDescriptor(parentSource, propName)\n      } else {\n        return null\n      }\n    }\n  }\n}\n\nexport class PropertyDelegator {\n  delegatedProperties: any = {}\n\n  setDelegatedProperties(\n    source: any,\n    propNames: string[],\n    bindToSource: boolean = true\n  ): void {\n\n    let helper = new Helper(source, this, propNames, bindToSource)\n    helper.run()\n  }\n\n  setAllDelegatedProperties() {\n    let setDelegatedProperties = (propNames, sourceName) => {\n      let source = this[sourceName]\n      this.setDelegatedProperties(source, propNames)\n    }\n    _.forEach(this.delegatedProperties, setDelegatedProperties)\n  }\n}\n","import { Component, OnInit } from '@angular/core'\n\nimport {\n  Mixin,\n} from '../../../providers/decorators/index'\n\nimport {\n  DataInspector,\n} from '../../../providers/mixins/index'\n\n@Component({\n  selector: 'shared-base',\n  template: '',\n  styleUrls: ['./base.component.scss']\n})\n@Mixin([DataInspector])\nexport class BaseComponent implements OnInit {\n  id: string;\n  \n  constructor() {\n    this.log()\n  }\n\n  ngOnInit() {}\n\n  log(isEnabled: boolean = false) {\n    if(isEnabled) {\n      let date = new Date()\n      this.id = date.toISOString()\n      let message = \"The id of the \" + this.constructor.name + \" component is \" + this.id\n      console.log(message)\n    }\n  }\n\n  //Mixin properties\n  inspectData(...args: any[]) {}\n}\n","import { BaseComponent } from './base.component'\n\nexport const components: any[] = [\n  BaseComponent,\n]\n\nexport { BaseComponent }\n","import { Observable } from 'rxjs'\nimport { mergeMap } from 'rxjs/operators'\n\nimport { \n  Component, Input, OnInit\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-attribute-list',\n  templateUrl: './attribute-list.component.html',\n  styleUrls: ['./attribute-list.component.scss']\n})\nexport class AttributeListComponent extends BaseComponent {\n  @Input()\n  attributeEntity$: Observable<any>\n  @Input()\n  attributeEntityLabels$: Observable<any>\n\n  attributeEntities$: Observable<any>\n\n  ngOnInit() {\n    this.attributeEntities$ = this.attributeEntity$\n      .pipe(mergeMap((entity) => {\n        return entity.getAttributeEntities$(this.attributeEntityLabels$)\n      }))\n  }\n\n  getAttributeValue(attributeEntity, attribute) {\n    return attributeEntity[attribute]\n  }\n}\n","import { AttributeListComponent } from './attribute-list.component'\n\nexport const components: any[] = [\n  AttributeListComponent,\n]\n\nexport { AttributeListComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport { Component, OnInit } from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-body',\n  templateUrl: 'body.component.html',\n  styleUrls: ['./body.component.scss'],\n})\nexport class BodyComponent extends BaseComponent {}\n","import { BodyComponent } from './body.component'\n\nexport const components: any[] = [\n  BodyComponent,\n]\n\nexport { BodyComponent }\n","import {\n  Observable,\n} from 'rxjs'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport {\n  iBreadcrumb,\n} from '../../../providers/interfaces/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss']\n})\nexport class BreadcrumbComponent extends BaseComponent {\n  @Input() breadcrumb$: Observable<iBreadcrumb>\n  @Output() itemSelected = new EventEmitter<any>()\n\n  onItemClick(item) {\n    let event = {\n      item: item\n    }\n    this.itemSelected.emit(event)\n  }\n}\n","import { BreadcrumbComponent } from './breadcrumb.component'\n\nexport const components: any[] = [\n  BreadcrumbComponent,\n]\n\nexport { BreadcrumbComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-select-list',\n  templateUrl: './select-list.component.html',\n  styleUrls: ['./select-list.component.scss']\n})\nexport class SelectListComponent extends BaseComponent {\n  @Input()\n  items$: Observable<any>;\n\n  @Input()\n  selectedItem: any;\n\n  @Output()\n  itemEmitter: EventEmitter<any> = new EventEmitter();\n\n  isSelectedItem(item) {\n    return (this.selectedItem == item);\n  }\n\n  select(item) {\n    this.selectedItem = item;\n    this.emit();\n  }\n\n  emit() {\n    let event = {\n      item: this.selectedItem\n    }\n    this.itemEmitter.emit(event);\n  }\n}\n","import { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n\n\nimport { SelectListComponent } from '../select-list/select-list.component'\n\n@Component({\n  selector: 'ceo-shared-declarables-card-select-list',\n  templateUrl: './card-select-list.component.html',\n  styleUrls: ['./card-select-list.component.css']\n})\nexport class CardSelectListComponent extends SelectListComponent {\n  @Input()\n  cards$: Observable<any>\n\n  constructor() {\n    super()\n  }\n}\n","import { CardSelectListComponent } from './card-select-list.component'\n\nexport const components: any[] = [\n  CardSelectListComponent,\n]\n\nexport { CardSelectListComponent }\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent extends BaseComponent {\n  @Input()\n  card: any;\n}\n","import { CardComponent } from './card.component'\n\nexport const components: any[] = [\n  CardComponent,\n]\n\nexport { CardComponent }\n","// Current Implementation taken from:\n// https://github.com/ng-bootstrap/ng-bootstrap/blob/master/src/datepicker/ngb-date-parser-formatter.ts\n\nimport * as  _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  NgbDateStruct,\n  NgbDate,\n} from '@ng-bootstrap/ng-bootstrap'\n\nexport function padNumber(value: number): string {\n  if (_.isNumber(value)) {\n    return `0${value}`.slice(-2)\n  } else {\n    return ''\n  }\n}\n\n@Injectable()\nexport class DateParserFormatter {\n  // from input -> internal model\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-')\n      if (dateParts.length === 1 && _.isNumber(dateParts[0])) {\n        return {year: _.toInteger(dateParts[0]), month: null, day: null}\n      } else if (dateParts.length === 2 && _.isNumber(dateParts[0]) && _.isNumber(dateParts[1])) {\n        return {year: _.toInteger(dateParts[0]), month: _.toInteger(dateParts[1]), day: null}\n      } else if (dateParts.length === 3 && _.isNumber(dateParts[0]) && _.isNumber(dateParts[1]) && _.isNumber(dateParts[2])) {\n        return {year: _.toInteger(dateParts[0]), month: _.toInteger(dateParts[1]), day: _.toInteger(dateParts[2])}\n      }\n    }\n    return null\n  }\n\n  // from internal model -> string\n  format(date: NgbDateStruct): string {\n    if(!date) {\n      return ''\n    }\n\n    let separator = '/'\n    let year = _.isNumber(date.year) ? padNumber(date.year) : ''\n    let month = _.isNumber(date.month) ? padNumber(date.month) : ''\n    let day = _.isNumber(date.day) ? padNumber(date.day) : ''\n\n    return _.join([month, day, year], separator)\n  }\n}\n","import { Component, Input, } from '@angular/core'\nimport { FormControl }       from '@angular/forms'\n\nimport {\n  NgbDate,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport { DateParserFormatter } from './date-parser-formatter.service'\n\n@Component({\n  selector: 'ceo-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  providers: [\n    {\n      provide: NgbDateParserFormatter,\n      useClass: DateParserFormatter,\n    },\n  ],\n})\nexport class DatepickerComponent extends BaseComponent {\n  @Input() control: FormControl\n\n  ngOnInit() {\n    super.ngOnInit()\n    this.control.valueChanges.subscribe(value => this.onControlValue(value))\n  }\n\n  onDateSelect(date: NgbDate) {\n    //console.log(\"date selected\")\n  }\n\n  onControlValue(value: Date) {\n    //console.log(\"on control value\")\n  }\n}\n","import { DatepickerComponent } from './datepicker.component'\n\nexport const components: any[] = [\n  DatepickerComponent,\n]\n\nexport { DatepickerComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport {\n  iNavigationMenu,\n} from '../../../providers/interfaces'\n\n@Component({\n  selector: 'ceo-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  className(item) {\n    let classes = [item.className]\n\n    if(item.hasSubmenu()) {\n      classes.push('dropdown-column')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","declare var $: any\n\nimport * as _ from 'lodash'\n\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-custom-content',\n  templateUrl: './custom-content.component.html',\n  styleUrls: ['./custom-content.component.scss']\n})\nexport class CustomContentComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  onRouteEvent(event: any) {\n    event.item = this.item\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  displayType() {\n    return this.item.displayType\n  }\n\n  className(item) {\n    let classes = [item.className]\n\n    if(item.hasSubmenu()) {\n      classes.push('dropdown-column')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss']\n})\nexport class LinkComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-dropdown-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import { DropdownComponent }      from './dropdown.component'\nimport { CustomContentComponent as DropdownCustomContentComponent }  from './custom-content/custom-content.component'\nimport { ItemComponent as DropdownItemComponent }                    from './item/item.component'\nimport { LinkComponent as DropdownLinkComponent}                     from './link/link.component'\nimport { TextComponent as DropdownTextComponent}                     from './text/text.component'\n\nexport const components: any[] = [\n  DropdownComponent,\n  DropdownItemComponent,\n  DropdownLinkComponent,\n  DropdownTextComponent,\n  DropdownCustomContentComponent,\n]\n\nexport { DropdownComponent }\n\nexport { DropdownItemComponent }\nexport { DropdownLinkComponent }\nexport { DropdownTextComponent }\nexport { DropdownCustomContentComponent }\n","import {\n  Component, OnInit, Input\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.scss']\n})\nexport class FieldComponent extends BaseComponent {\n  @Input()\n  field: any\n\n  @Input()\n  formGroup: FormGroup\n}\n","import { FieldComponent } from './field.component'\n\nexport const components: any[] = [\n  FieldComponent,\n]\n\nexport { FieldComponent }\n\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport {\n  iInputGroup,\n} from '../../../providers/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss']\n})\nexport class FormGroupComponent extends BaseComponent {\n  @Input()\n  inputGroup: iInputGroup\n\n  @Input()\n  formGroup: FormGroup\n\n  isInputGroup(input) {\n    return (input.constructor.name == 'InputGroup')\n  }\n}\n","import { FormGroupComponent } from './form-group.component'\n\nexport const components: any[] = [\n  FormGroupComponent,\n]\n\nexport { FormGroupComponent }\n","import {\n  iApiConfig,\n  iApiRequestParams,\n  iApiResourceTypeMap,\n} from '../interfaces/index'\n\nexport class ApiConfig implements iApiConfig {\n  _url: string\n  _defaultBodyParams: any\n  _defaultQueryParams: any\n  _resourceTypes: any\n\n  constructor(params) {\n    this._url = params.url\n    this._defaultQueryParams = params.defaultQueryParams || {}\n    this._defaultBodyParams = params.defaultBodyParams || {}\n    this._resourceTypes = params.resourceTypes || {}\n  }\n\n  get url(): string {\n    return this._url\n  }\n\n  get defaultQueryParams(): iApiRequestParams {\n    return this._defaultQueryParams\n  }\n\n  get defaultBodyParams(): iApiRequestParams {\n    return this._defaultBodyParams\n  }\n\n  get resourceTypes(): iApiResourceTypeMap {\n    return this._resourceTypes\n  }\n}\n\n","import * as _ from 'lodash'\n\nimport {\n  iBreadcrumb,\n  iBreadcrumbItem,\n} from '../interfaces/index'\n\nexport class Breadcrumb implements iBreadcrumb {\n  public length: number\n\n  constructor(\n    public items: iBreadcrumbItem[] = []\n  ) {\n    this.length = items.length\n  }\n\n\n  // Iterator\n  // Allows us to use the collections in angular directives\n  // (i.e. ngFor, etc)\n  [Symbol.iterator]() {\n    let current = 0\n    let items = this.items\n    return  {\n      next: function () {\n        let noItems = _.isEmpty(items)\n        let value = noItems ? null : items[current++]\n        let done = noItems ? true : current > items.length\n        return {\n          value: value,\n          done: done\n        }\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { iCard } from '../interfaces/index'\n\nexport class Card implements iCard {\n  data: any\n  title: string\n  iconName: string\n\n  constructor(attributes) {\n    this.setAttributes(attributes)\n  }\n\n  private setAttributes(attributes) {\n    let setAttribute = (value, key) => {\n      this[key] = value\n    }\n\n    _.map(attributes, _.bind(setAttribute, this))\n  }\n}\n","import * as _ from 'lodash'\n\nimport { iPane } from '../interfaces/index'\n\nimport { Card } from './card'\n\nexport class Pane implements iPane {\n  name: string\n  iconName: string\n  componentClass: any\n  active: boolean\n  directive: string\n\n  constructor(attributes) {\n    this.setAttributes(attributes)\n  }\n\n  toCard() {\n    let attributes = {\n      data: this,\n      title: this.name,\n      iconName: this.iconName,\n    }\n    return new Card(attributes)\n  }\n\n  private setStatus(status) {\n    this.active = status\n  }\n\n  private setAttributes(attributes) {\n    let setAttribute = (value, key) => {\n      this[key] = value\n    }\n\n    _.map(attributes, _.bind(setAttribute, this))\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NotificationService {\n  constructor() { }\n\n  showNotification(message, action, timeout) {}\n}\n","// Native Date adapter for NgbDatepicker. Taken from:\n// https://ng-bootstrap.github.io/#/components/datepicker/examples\n\nimport * as _ from \"lodash\";\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  NgbDateAdapter, NgbDateStruct\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return this.isValidDate(date) ? this.ngbDateStructFromValidDate(date) : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date ? this.dateFromValidNgbDateStruct(date) : null;\n  }\n\n  private isValidDate(date: Date): Boolean {\n    return (date && _.has(date, 'getFullYear'));\n  }\n\n  private ngbDateStructFromValidDate(date: Date): NgbDateStruct {\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    };\n  }\n\n  private dateFromValidNgbDateStruct(date: NgbDateStruct): Date {\n    return new Date(date.year, date.month - 1, date.day);\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\nimport {\n  FormControl, FormGroup,\n  Validators, AbstractControl,\n} from '@angular/forms'\n\nimport {\n  iInputGroup,\n} from '../interfaces/index'\n\nexport interface iAbstractControlMap {\n  [key: string]: AbstractControl\n}\n\nexport class InputControlService {\n  toFormGroup(inputGroup: iInputGroup) {\n    return this.buildFormGroup(inputGroup)\n  }\n\n  private buildFormGroup(inputGroup): FormGroup {\n    return new FormGroup(this.buildControls(inputGroup))\n  }\n\n  private buildControls(inputGroup: iInputGroup): iAbstractControlMap {\n    return _.reduce(\n      inputGroup.inputs,\n      _.bind(_.partial(this.buildAbstractControl, inputGroup), this),\n      {}\n    )\n  }\n\n  private buildAbstractControl(inputGroup, controls, input) {\n    var build = this.getFormControlBuilder(input)\n    input.key = this.generateInputKey(input, inputGroup)\n    controls[input.key] = build(input)\n    return controls\n  }\n\n  private getFormControlBuilder(input) {\n    if(input.constructor.name == 'InputGroup') {\n      return _.bind(this.buildFormGroup, this)\n    }\n    else {\n      return _.bind(this.buildFormControl, this)\n    }\n  }\n\n  private generateInputKey(input, inputGroup) {\n    return input.key\n  }\n\n\n  private buildFormControl(inputControl) {\n    let value = inputControl.value || ''\n    return new FormControl(\n      value,\n      Validators.compose(inputControl.validators)\n    )\n  }\n}\n","import * as _ from 'lodash'\n\nimport * as csv_ from \"csvtojson\";\n\nimport { Injectable } from '@angular/core';\n\nconst csvToJson = csv_;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvToJsonService {\n  constructor() { }\n\n  csvToJsonFromString(csvString: string = '', opts: any = {}): any {\n    let defaults = {\n      noheader: false,\n    }\n    opts = _.extend(opts, defaults)\n    return csvToJson(opts).fromString(csvString)\n  }\n\n  csvToJsonFromFilePath(filePath: string = ''): any{\n    return csvToJson().fromFile(filePath)\n  }\n}\n","import { InjectionToken }   from '@angular/core'\n\nexport const API_CONFIG =\n  new InjectionToken<any>(\"API Config\")\n","import { InjectionToken }   from '@angular/core'\n\nexport const CUSTOM_ELEMENTS_CONFIG =\n  new InjectionToken<any>(\"Custom Elements Config\")\n","import { InjectionToken }   from '@angular/core';\n\nexport const PaneList =\n  new InjectionToken<any>(\"Pane List\");\n","import { API_CONFIG } from './api-config'\nimport { CUSTOM_ELEMENTS_CONFIG } from './custom-elements-config'\n\nexport const providers: any[] = [\n  {\n    provide: API_CONFIG,\n    useValue: {}\n  },\n  {\n    provide: CUSTOM_ELEMENTS_CONFIG,\n    useValue: {},\n    multi: true,\n  },\n]\n","\nimport * as _ from 'lodash'\n\nimport {\n  of as observableOf,\n  Observable,\n} from 'rxjs'\n\nimport { Injectable, Inject } from '@angular/core'\n\nimport { iPaneFactory, iPane } from '../interfaces/index'\n\nimport { Pane }     from '../classes/index'\n\nimport { PaneList } from '../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneFactory implements iPaneFactory {\n  constructor(\n    @Inject(PaneList) public paneList,\n  ) {}\n\n  build$(): Observable<iPane[]> {\n    let panes = _.map(this.paneList, this.buildPane)\n    return observableOf(panes)\n  }\n\n  private buildPane(attributes): iPane {\n    return new Pane(attributes)\n  }\n}\n","// Loads the pane list\n// Initializes it to the Pane class\n// Serves as Pane Factory;\n// uses pane attributes to build Pane objects\n\nimport * as _ from 'lodash'\n\nimport {\n  zip as observableZip,  \n  Observable, of, BehaviorSubject,\n} from 'rxjs';\nimport {\n  map,\n  startWith,\n} from 'rxjs/operators'\n\nimport { Injectable } from '@angular/core';\n\nimport { iPaneProvider, iPane } from '../interfaces/index'\n\nimport { PaneFactory }     from './pane-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneProvider implements iPaneProvider {\n  _panes$: Observable<iPane[]>;\n  _activePane$: BehaviorSubject<any> = new BehaviorSubject<any>(null)\n\n  private panes: iPane[] = [];\n\n  constructor(\n    private paneFactory: PaneFactory\n  ) {\n    this._panes$ = this.paneFactory.build$()\n\n    this._panes$.subscribe(panes => this.setPanes(panes))\n  }\n\n  get panes$(): Observable<iPane[]> {\n    return this._panes$\n  }\n\n  get activePane$(): Observable<iPane> {\n    return this._activePane$.pipe(\n      startWith(this.activePaneFromPanes(this.panes))\n    )\n  }\n\n  setPaneActiveStatus(pane, activeStatus): boolean {\n    pane.setStatus(activeStatus)\n    if(activeStatus) {\n      this.emitActivePane(pane)\n    }\n    return true\n  }\n\n  private emitActivePanes(panes) {\n    let pane = this.activePaneFromPanes(panes)\n    this.emitActivePane(pane)\n  }\n\n  private emitActivePane(pane) {\n    this._activePane$.next(pane) \n  }\n\n  private setPanes(panes) {\n    this.panes = panes\n    this.emitActivePanes(this.panes)\n  }\n\n  private activePaneFromPanes(panes: iPane[]): iPane {\n    return _.find(panes, 'active')\n  }\n}\n\n\n/*\n  private panesByName$(paneName): Observable<iPane[]> {\n    return this._panes$.pipe(\n      map(panes => this.panesByName(panes, paneName))\n    )\n  }\n\n  private panesByName(panes, paneName): iPane[] {\n    return (<iPane[]> _.filter(\n      panes, \n      {name: paneName}\n    ))\n  }\n*/\n","// Service to manage panes depending on the page.\n// \n\nimport {\n  Observable,\n} from 'rxjs';\n\nimport { first } from 'rxjs/operators';\n\nimport * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { PaneProvider } from './pane-provider.service'\n\nimport { iPane } from '../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaneManager {\n  constructor(\n    private paneProvider: PaneProvider\n  ) {}\n\n  get panes$(): Observable<iPane[]> {\n    return this.paneProvider.panes$\n  }\n\n  get activePane$(): Observable<iPane> {\n    return this.paneProvider.activePane$\n  }\n\n  activatePane(pane: iPane): void {\n    let activePane$ = this.activePane$.pipe(\n      first()\n    )\n    activePane$.subscribe(activePane => {\n      this.setPaneActiveStatus(activePane, false)\n      this.setPaneActiveStatus(pane, true)\n    })\n  }\n\n  private setPaneActiveStatus(\n    pane: iPane = null,\n    activeStatus: boolean = false): boolean {\n\n    if(!pane) {\n      return false\n    }\n\n    return this.paneProvider.setPaneActiveStatus(pane, activeStatus)\n  }\n\n}\n/*\n *\n  private activateNextPane(): any {\n    let pane = this.getNextPane()\n    this.validatePane(pane)\n    //this.activatePane(pane)\n    return pane\n  }\n\n  private activatePreviousPane(): any {\n    //return previous pane.\n  }\n\n  private validatePane(pane: any) {\n    //Check and validate certain conditions before activaion\n  }\n\n  private getNextPane(): any {\n    return 'Next Pane' \n  }\n\n*/\n","import * as _ from 'lodash'\n\nimport {\n  Injectable,\n  Inject,\n} from '@angular/core'\n\nimport { HttpParams } from '@angular/common/http'\nimport { HttpParamsOptions } from '@angular/common/http/src/params'\n\nimport {\n  jsonToQueryParamsObject,\n} from '@ceo/core'\n\n\nimport {\n  ApiUrl,\n  iApiConfig,\n  iApiQueryParams,\n  iApiRequestParams,\n  iApiResourceIdentifier,\n  iApiResourceTypeConfig,\n  iApiRequestOptions,\n  iApiRequestPayload,\n} from '../../../interfaces/index'\n\nimport {\n  API_CONFIG,\n} from '../../../tokens/index'\n\n@Injectable()\nexport class RequestOptionsBuilder {\n  constructor(\n    @Inject(API_CONFIG) public apiConfig,\n  ) { }\n\n  build(\n    method: string,\n    url: ApiUrl,\n    payload: iApiRequestPayload\n  ) {\n    if(this.isBodyRequest(method)) {\n      return this.getBody(payload.resourceIdentifier.data)\n    }\n    else {\n      return this.getOptions(url, payload.resourceIdentifier)\n    }\n  }\n\n  getBody(data: any): any {\n    let body = this.sanitizedParams(data)\n    body = _.merge({}, body, this.apiConfig.defaultQueryParams)\n\n    return {\n      body: body,\n      observe: 'response',\n    }\n  }\n\n  getOptions(url: ApiUrl, ri: iApiResourceIdentifier): iApiRequestOptions {\n    return {\n      params: this.getParams(ri),\n      responseType: this.getResponseType(url),\n      observe: 'response',\n    }\n  }\n  \n\n  getParams(ri: iApiResourceIdentifier): any {\n    let params =\n      _.merge({}, this.apiConfig.defaultQueryParams, this.filterParams(ri))\n\n    return jsonToQueryParamsObject(params)\n  }\n\n  getResponseType(url): string {\n    if(this.isTextResponseType(url)) {\n      return 'text'\n    }\n    else {\n      return 'json'\n    }\n  }\n\n  protected isBodyRequest(method: string): boolean {\n    let bodyMethods = ['post', 'put']\n    return _.includes(bodyMethods, method)\n  }\n\n  protected isTextResponseType(url) {\n    return _.endsWith(url, 'csv')\n  }\n\n  protected filterParams(ri: iApiResourceIdentifier) {\n    let filter = this.getFilter(ri)\n\n    if(filter) {\n      return {\n        filter: this.sanitizedParams(filter)\n      }\n    }\n    else {\n      return {}\n    }\n  }\n\n  protected getFilter(ri: iApiResourceIdentifier) {\n    return _.get(ri, 'filter')\n  }\n\n  protected sanitizedParams(params) {\n    let snakeCase = (value, key) => {\n      return _.snakeCase(key)\n    }\n    return _.mapKeys(params, snakeCase)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport {\n  ApiUrl,\n  iApiConfig,\n  iApiUrlProvider,\n  iApiQueryParams,\n  iApiResourceIdentifier,\n  iApiResourceTypeConfig,\n} from '../../../interfaces/index'\n\nimport {\n  API_CONFIG,\n} from '../../../tokens/index'\n\n@Injectable()\nexport class RequestUrlBuilder {\n  constructor(\n    @Inject(API_CONFIG) public apiConfig,\n  ) { }\n\n  build(ri: iApiResourceIdentifier): ApiUrl {\n    return this.getResourceTypeUrl(ri)\n  }\n\n  protected getResourceTypeUrl(ri: iApiResourceIdentifier): ApiUrl {\n    let fragments = [\n      this.apiConfig.url,\n      this.getResourceTypeUrlFragment(ri),\n    ]\n\n    if(this.isSingleResourceRequest(ri)) {\n      let singleRequestFragment = this.singleResourceRequestFragment(ri)\n      fragments.push(singleRequestFragment)\n    }\n\n    return _.join(fragments, '/')\n  }\n\n  protected getResourceTypeUrlFragment(ri: iApiResourceIdentifier): any {\n    let resourceType = this.getResourceType(ri)\n    let resourceConfig = resourceType.config\n    return resourceConfig.urlFragment(ri)\n  }\n\n  protected getResourceType(\n    ri: iApiResourceIdentifier,\n  ): iApiResourceTypeConfig {\n\n    let ofType = (resourceType: iApiResourceTypeConfig) => {\n      return resourceType.config.hasResourceType(ri)\n    }\n\n    return _.find(this.apiConfig.resourceTypes, ofType)\n  }\n\n  protected isSingleResourceRequest(ri: iApiResourceIdentifier): boolean {\n    return !_.isNil(ri.id)\n  }\n\n  protected singleResourceRequestFragment(ri: iApiResourceIdentifier): string {\n    return ri.id\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { iResponseParser } from '../../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseParser implements iResponseParser { \n  parse(data: any): any {\n    return _.flatten([data])\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Observable,\n  of as observableOf,\n  throwError as observableThrowError,\n  pipe,\n} from 'rxjs'\nimport {\n  map, mergeMap,\n  catchError,\n} from 'rxjs/operators'\n\nimport { Injectable } from '@angular/core'\nimport { Response }   from '@angular/http'\n\nimport {\n  HttpClient, HttpParams,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http'\n\nimport {\n  ApiUrl,\n  iApiResourceIdentifier,\n  iApiResponse,\n  iApiService,\n  iApiErrorResponse,\n  iApiRequestPayload,\n} from '../../../interfaces/index'\n\nimport { CsvToJsonService }         from '../../csv-to-json.service'\nimport { RequestUrlBuilder }     from './request-url-builder.service'\nimport { RequestOptionsBuilder } from './request-options-builder.service'\nimport { ResponseParser }           from './response-parser.service'\n\n@Injectable()\nexport class ApiService implements iApiService {\n  constructor(\n    private http: HttpClient,\n    private csvToJsonService: CsvToJsonService,\n    private responseParser: ResponseParser,\n    private urlBuilder: RequestUrlBuilder,\n    private optionsBuilder: RequestOptionsBuilder,\n  ) {}\n\n  post$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('post', payload)\n  }\n\n  delete$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('delete', payload)\n  }\n\n  get$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('get', payload)\n  }\n\n  put$(payload: iApiRequestPayload): Observable<any> {\n    return this.handleRequest$('put', payload)\n  }\n\n  // Aliases\n  update$(payload: iApiRequestPayload): Observable<any> {\n    return this.put$(payload)\n  }\n\n  create$(payload: iApiRequestPayload): Observable<any> {\n    return this.post$(payload)\n  }\n\n  // Private methods\n  private handleRequest$(method, payload) {\n    return this.executeRequest$(method, payload).pipe(\n      catchError((error: iApiErrorResponse) => {\n        return this.handleError$(error, payload)\n      }),\n      mergeMap((response: HttpResponse<any>) => {\n        return this.processedResponse$(response, payload.resourceIdentifier)\n      }),\n    )\n  }\n\n  private handleError$(\n    error: iApiErrorResponse,\n    payload: iApiRequestPayload\n  ): Observable<any> {\n    console.error(\"Error in API Service: \" + error)\n    return observableThrowError(error)\n  }\n\n  private executeRequest$(\n    method: string,\n    payload: iApiRequestPayload\n  ) {\n    let url = this.getUrl(payload.resourceIdentifier)\n    let httpOpts = this.getHttpOpts(method, url, payload)\n\n    return this.http[method](url, httpOpts)\n  }\n\n  private getUrl(ri: iApiResourceIdentifier) {\n    return this.urlBuilder.build(ri)\n  }\n\n  private getHttpOpts(\n    method: string,\n    url: ApiUrl,\n    payload: iApiRequestPayload\n  ) {\n    return this.optionsBuilder.build(method, url, payload)\n  }\n\n  private processedResponse$(\n    apiResponse: HttpResponse<any>,\n    ri: iApiResourceIdentifier\n  ) {\n\n    return this.jsonData$(apiResponse.body).pipe(\n      map(json => this.sanitizedData(json, ri)),\n      map(json => this.buildApiResponse(json, ri)),\n    )\n  }\n\n  private jsonData$(data): Observable<any> {\n    if(_.isString(data)) {\n      return this.csvToJsonData$(data)\n    }\n    else {\n      return observableOf(data)\n    }\n  }\n\n  // Remove empty keys and attributes\n  private sanitizedData(data, ri) {\n    var isSimpleVariable = (value) => {\n      return (_.isNumber(value) || _.isString(value))\n    }\n\n    var isPresent = (obj) => {\n      return obj !== '' && obj !== null\n    }\n\n    let sanitize = (object) => {\n      // Removed this pickBy call -- null and empty string\n      // values are specified by backend and should\n      // be preserved; might this cause issues elsewhere?\n      // They should be fixed in the consumer.\n      //var filteredObject = _.pickBy(object, isPresent)\n      var filteredObject = object\n\n      let finalFilter = (obj) => {\n        if(obj !== filteredObject && _.isPlainObject(obj)) {\n          return sanitize(obj)\n        }\n        else if(_.isArray(obj)) {\n          if(_.isEmpty(obj) || isSimpleVariable(obj[0])) {\n            return obj\n          }\n          return _.reject(_.map(obj, sanitize), _.isEmpty)\n        }\n\n        return undefined\n      }\n\n      return _.cloneDeepWith(filteredObject, finalFilter)\n    }\n\n    var sanitizedData\n    if(_.isArray(data)) {\n      sanitizedData = _.map(data, sanitize)\n    }\n    else {\n      sanitizedData = sanitize(data)\n    }\n    return sanitizedData\n  }\n\n  private buildApiResponse(data, ri: iApiResourceIdentifier): iApiResponse {\n    return {\n      data: this.responseParser.parse(data),\n      resourceIdentifier: ri,\n    }\n  }\n\n  private csvToJsonData$(data): Observable<any> {\n    let observable = Observable.create((observer) => {\n      var jsonData = []\n      var jsonApiResponse = {\n        data: jsonData,\n        included: [],\n      }\n\n      let onNext = (json, index) => {\n        let isValid = (propValue, propName) => {\n          return !_.isNil(propValue)\n        }\n        let sanitizedJson = _.pickBy(json, isValid)\n\n\n        jsonData.push(json)\n      }\n      let onError = (error) => error\n      let onComplete = () => {\n        return observer.next(jsonApiResponse)\n      }\n\n      let converter = this.csvToJsonService.csvToJsonFromString(data)\n        .subscribe(onNext, onError, onComplete)\n\n    })\n\n    return observable\n  }\n}\n\n","import { RequestOptionsBuilder as ApiRequestOptionsBuilder } from './request-options-builder.service'\nimport { RequestUrlBuilder as ApiRequestUrlBuilder }         from './request-url-builder.service'\nimport { ResponseParser as ApiResponseParser }               from './response-parser.service'\nimport { ApiService }                                        from './api.service'\n\n\nexport const services: any[] = [\n  ApiRequestOptionsBuilder,\n  ApiRequestUrlBuilder,\n  ApiResponseParser,\n  ApiService,\n]\n\nexport { ApiRequestOptionsBuilder }\nexport { ApiRequestUrlBuilder }\nexport { ApiResponseParser }\nexport { ApiService }\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { iResponseParser } from '../../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseParser implements iResponseParser { \n  parse(payload: any): any {\n    return _.castArray(payload.data).\n      concat(this.loadIncluded(payload))\n  }\n\n  private loadIncluded(data) {\n    let buildIncluded = (payloadData) => {\n      return payloadData\n    }\n\n    return _.map(data.included, buildIncluded)\n  }\n}\n\n","import { ResponseParser as JsonApiResponseParser } from './response-parser.service'\n\nexport const services: any[] = [\n  JsonApiResponseParser,\n]\n\nexport { JsonApiResponseParser }\n","import * as base    from './base/index'\nimport * as jsonApi from './json-api/index'\n\nexport const services: any[] = [\n  ...base.services,\n  ...jsonApi.services,\n]\n\nexport {\n  ApiRequestOptionsBuilder,\n  ApiRequestUrlBuilder,\n  ApiResponseParser,\n  ApiService,\n} from './base/index'\n\nexport {\n  JsonApiResponseParser,\n} from './json-api/index'\n","import { Observable, Subject }  from 'rxjs'\nimport { map }                  from 'rxjs/operators'\n\nimport { Injectable }           from '@angular/core'\nimport { Response }             from \"@angular/http\"\n\nimport { AngularTokenService }   from \"angular-token\"\n\n@Injectable()\nexport class AuthService {\n  userSignedIn$:Subject<boolean> = new Subject()\n\n  constructor(public authService: AngularTokenService) { }\n\n  validate() {\n    this\n      .authService.validateToken()\n      .subscribe(\n        response => this.handleValidationTokenResponse(response),\n        error => this.handleValidationError(error)\n      )\n  }\n\n  signOutUser(): Observable<Response> {\n    return this.authService.signOut().pipe(map(\n      res => {\n        this.userSignedIn$.next(false)\n        return res\n      }\n    ))\n  }\n\n  registerUser(signUpData:  {\n    login:string,\n    password:string,\n    passwordConfirmation:string}\n  ): Observable<Response>{\n\n    return this.authService.registerAccount(signUpData).pipe(map(\n        res => {\n          this.userSignedIn$.next(true)\n          return res\n        }\n    ))\n  }\n\n  signInUser(signInData: {login:string, password:string}): Observable<Response> {\n    return this.authService.signIn(signInData)\n      .pipe(map(\n        response => {\n          this.userSignedIn$.next(true)\n          return response\n        }\n      ))\n  }\n\n  userSignedIn(): boolean {\n    return this.authService.userSignedIn()\n  }\n\n  private handleValidationTokenResponse(response) {\n    if(this.successfulLoginResponse(response)) {\n      this.userSignedIn$.next(response.json().success)\n    }\n    else {\n      this.userSignedIn$.next(false)\n    }\n  }\n\n  private handleValidationError(error) {\n    //console.log(error)\n  }\n\n  private successfulLoginResponse(response) {\n    return response.status == 200\n  }\n}\n","import { AuthService } from './auth.service'\n\nexport const services: any[] = [\n  AuthService,\n]\n\nexport { AuthService }\n","import { Injectable } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  HttpResponse, HttpRequest\n} from '@angular/common/http'\n\n\nimport {\n  iRequestCacheService,\n  iRequestCacheEntry,\n} from '../../interfaces/index'\n\nexport type CacheEntryResponse =\n  HttpResponse<any> | undefined\n\n@Injectable()\nexport class RequestCacheService implements iRequestCacheService {\n  private cacheEntries: iRequestCacheEntry[] = []\n\n  get(req: HttpRequest<any>): CacheEntryResponse {\n    return undefined\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\n    let cacheKey = 1\n    let cacheEntry = {\n      url: '',\n      response: response,\n      lastRead: 1,\n    }\n    this.cacheEntries[cacheKey] = cacheEntry\n  }\n}\n","import { RequestCacheService } from './request-cache.service'\n\nexport const services: any[] = [\n  RequestCacheService,\n]\n\nexport { RequestCacheService }\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport { createCustomElement } from '@angular/elements'\n\nimport {\n  iCustomElementConfig,\n  CustomElementName,\n} from '../../interfaces/index'\n\nimport {\n  CUSTOM_ELEMENTS_CONFIG\n} from '../../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Manager {\n  private ngComponentPath: string = 'ngElementStrategy.componentRef.instance'\n\n  constructor(\n    @Inject(CUSTOM_ELEMENTS_CONFIG) private _config,\n  ) {}\n\n  get config() {\n    return _.reduce(this._config, _.merge)\n  }\n\n  define(config: iCustomElementConfig) {\n    if(!this.elementExists(config.elementName)) {\n      let customElement = this.buildCustomElement(this.elementConfig(config))\n      this.defineNativeCustomElement(config.elementName, customElement)\n    }\n  }\n\n elementExists(elementName: string): boolean {\n    return customElements.get(elementName) != null\n  }\n\n  isCustomElement(element: any): boolean {\n    return this.hasNgComponent(element)\n  }\n\n  getNgComponent(element: any) {\n    return _.get(element, this.ngComponentPath)\n  }\n\n  //Private methods\n\n  private hasNgComponent(element: any): boolean {\n    return _.has(element, this.ngComponentPath)\n  }\n\n  private defineNativeCustomElement(\n    elementName: CustomElementName,\n    element: any\n  ) {\n    customElements.define(elementName, element)\n  }\n\n  private buildCustomElement(config) {\n    return createCustomElement(config.ctor, config.opts)\n  }\n\n  private elementConfig(config) {\n    let defaultConfig = _.get(this.config, config.elementName, {})\n    return _.merge(defaultConfig, config)\n  }\n}\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport { NgElement } from '@angular/elements'\n\nimport {\n  CustomElementName,\n} from '../../interfaces/index'\n\nimport { Manager } from './manager.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Factory {\n  private defaultElement: null\n\n  constructor(\n    public manager: Manager,\n  ) {}\n\n  build(elementName: CustomElementName, inputs: any): NgElement {\n    let element = this.getElement(elementName, inputs)\n    this.launchElement(element)\n    return element\n  }\n\n  //Private methods\n\n  private getElement(elementName: CustomElementName, inputs: any): NgElement {\n    if(this.manager.elementExists(elementName)) {\n      let element = this.buildElementInstance(elementName)\n      return this.configureElementInstance(element, inputs)\n    }\n    else {\n      return this.defaultElement\n    }\n  }\n\n  private launchElement(element) {\n    document\n      .getElementById(\"custom-elements-wrap\")\n      .appendChild(<any>element)\n  }\n\n\n  private buildElementInstance(elementName: CustomElementName) {\n    return document.createElement(elementName) as NgElement \n  }\n\n  private configureElementInstance(element, inputs) {\n    let onClosed = () => {\n      return document.body.removeChild(element)\n    }\n    element.addEventListener('closed', onClosed)\n\n\n    let setInput = (value, prop) => {\n      element[prop]  = value\n    }\n    _.forEach(inputs, setInput)\n\n    return element\n  }\n}\n","import { Manager } from './manager.service'\nimport { Factory } from './factory.service'\n\nexport const services: any[] = [\n  Manager,\n  Factory,\n]\n\nexport {\n  Manager,\n  Factory,\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n} from '@angular/common/http'\n\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs'\n\nimport { RequestCacheService } from '../cache/index'\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCacheService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isCachable(req)) {\n      return next.handle(req)\n    }\n\n    let cachedResponse = this.cache.get(req);\n    //sendRequest(req, next, this.cache)\n    return cachedResponse ?\n      observableOf(cachedResponse) : next.handle(req)\n  }\n\n  private isCachable(req: any): boolean {\n    return false\n  }\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest,\n} from '@angular/common/http'\n\nimport { Observable } from 'rxjs'\n\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class NoopInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    return next.handle(req)\n  }\n}\n","import { CachingInterceptor } from './caching-interceptor.service'\nimport { NoopInterceptor }    from './noop-interceptor.service'\n\nexport const services: any[] = [\n  CachingInterceptor,\n  NoopInterceptor,\n]\n\nexport {\n  CachingInterceptor,\n  NoopInterceptor,\n}\n","import { NotificationService }      from './notification.service'\nimport { NgbDateNativeAdapter }     from './ngb-date-adapter.service'\nimport { InputControlService }      from './input-control.service'\nimport { CsvToJsonService }         from './csv-to-json.service'\nimport { PaneFactory }              from './pane-factory.service'\nimport { PaneProvider }             from './pane-provider.service'\nimport { PaneManager }              from './pane-manager.service'\n\nimport * as api              from './api/index'\nimport * as auth             from './auth/index'\nimport * as cache            from './cache/index'\nimport * as customElement    from './custom-element/index'\nimport * as httpInterceptors from './http-interceptors/index'\n\nexport const sharedServices: any[] = [\n  NotificationService,\n  NgbDateNativeAdapter,\n  InputControlService,\n  CsvToJsonService,\n  PaneFactory,\n  PaneProvider,\n  PaneManager,\n  ...api.services,\n  ...auth.services,\n  ...cache.services,\n  ...customElement.services,\n  ...httpInterceptors.services,\n]\n\nexport * from './notification.service'\nexport * from './ngb-date-adapter.service'\nexport * from './input-control.service'\n\nexport * from './api/index'\n\nexport { CsvToJsonService }      from './csv-to-json.service'\nexport { PaneFactory }\nexport { PaneProvider }\nexport { PaneManager }\n\nexport {\n  AuthService,\n} from './auth/index'\n\nexport {\n  CachingInterceptor,\n  NoopInterceptor,\n} from './http-interceptors/index'\n\nexport {\n  RequestCacheService,\n} from './cache/index'\n\n\nexport {\n  Manager as CustomElementManager,\n  Factory as CustomElementFactory,\n} from './custom-element/index'\n","import { Injectable }           from '@angular/core'\nimport {\n  CanActivate, Router\n} from \"@angular/router\"\n\nimport { AuthService } from '../services/index'\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    if(this.authService.userSignedIn()) {\n      return true\n    } else {\n      this.router.navigate(['/'])\n      return false\n    }\n  }\n}\n","import { AuthGuard } from './auth-guard';\n\nexport const sharedGuards: any[] = [\n  AuthGuard,\n]\n\nexport * from './auth-guard';\n","import * as _ from 'lodash'\n\nimport {\n  Observable, BehaviorSubject\n} from 'rxjs'\n\nimport {\n  Component, Input, Output,\n  EventEmitter\n} from '@angular/core'\n\nimport { FormGroup }        from '@angular/forms'\n\nimport {\n  InputType,\n  iInputGroup,\n  InputControlService,\n} from '../../../providers/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  providers: [InputControlService]\n})\nexport class FormComponent extends BaseComponent {\n  @Input()\n  inputGroup$: Observable<iInputGroup>\n\n  @Input()\n  dataService: any\n\n  @Input()\n  entity: any \n\n  @Input()\n  defaultParams: any \n\n  inputGroup: iInputGroup\n  _formGroup: FormGroup\n\n  constructor(\n    private inputControlService: InputControlService\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.handleActions()\n\n    this.inputGroup$\n      .subscribe(inputGroup => {\n        this.inputGroup = inputGroup\n        this._formGroup = this.inputControlService.toFormGroup(inputGroup)\n      })\n  }\n\n  handleActions() {\n    if(this.dataService && this.entity) {\n      this.dataService.handleDialogActions(this)\n    }\n  }\n\n  get formGroup() {\n    return this._formGroup\n  }\n\n  payload() {\n    let payload = this.formGroup.value\n    if(this.defaultParams) {\n      return _.merge(payload, this.defaultParams)\n    }\n    else {\n      return payload\n    }\n  }\n}\n","import { FormComponent } from './form.component'\n\nexport const components: any[] = [\n  FormComponent,\n]\n\nexport { FormComponent }\n","import { Component, OnInit, Input } from '@angular/core'\nimport { DomSanitizer }             from '@angular/platform-browser'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-iframe',\n  templateUrl: './iframe.component.html',\n  styleUrls: ['./iframe.component.scss']\n})\nexport class IframeComponent extends BaseComponent {\n  @Input()\n  url: any\n\n  constructor(\n    private sanitizer: DomSanitizer,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.url =\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.url)\n  }\n}\n","import { IframeComponent } from './iframe.component'\n\nexport const components: any[] = [\n  IframeComponent,\n]\n\nexport { IframeComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport { FormGroup }        from '@angular/forms';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent extends BaseComponent {\n  @Input() formGroup: FormGroup \n  @Input() field: any\n\n  get isValid() {\n    return this.formGroup.controls[this.field.key].valid;\n  }\n\n  selected(option) {\n    return (this.field.value == option.key)\n  }\n\n  checked(values) {\n    return _.includes(values, this.field.value)\n  }\n}\n","import { InputComponent } from './input.component'\n\nexport const components: any[] = [\n  InputComponent,\n]\n\nexport { InputComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport {\n  Component, Input, Output, OnInit,\n  EventEmitter\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: '[shared-declarables-item]',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent extends BaseComponent {\n  @Input()\n  entity: any;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  itemActions$: Observable<any>\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  actions: any[];\n  attributeEntities$: Observable<any>;\n\n  ngOnInit() {\n    this.attributeEntities$ = this.getAttributeEntities$()\n  }\n\n  getAttributeEntities$() {\n    return this.entity.getAttributeEntities$(\n      this.configHeader$\n    )\n  }\n\n  triggerAction(entity, action) {\n    this.actionEmitter.emit({\n      entity: entity,\n      action: action\n    });\n  }\n\n  getValue(attributeEntity) {\n    if(attributeEntity) {\n      switch(attributeEntity['value']) {\n         case null: {\n            return \"nil\";\n         }\n         case true: {\n            return \"Yes\";\n         }\n         case false: {\n            return \"No\";\n         }\n         default: {\n            return attributeEntity['value'];\n         }\n      }\n    }\n    else {\n      return '';\n    }\n  }\n\n  getActions(headerAttribute) {\n    if(headerAttribute) {\n      return this.getActionArray(headerAttribute);\n    }\n    return [];\n  }\n\n  getActionArray(headerAttribute) {\n    if(headerAttribute['actions']) {\n      return this.checkActions(headerAttribute['actions']);\n    }\n    else {\n      return [];\n    }\n  }\n\n  checkActions(actions) {\n    let _currentObj = this;\n    let attributes = _.map(actions, function (action) {\n      if(action['check-attributes']) {\n        let objs = _.filter(action['check-attributes'], function(condition) {\n          if (_currentObj.entity[condition['attribute']]!=condition['value']){\n            return false;\n          }\n          return true;\n        });\n        if(objs.length == action[\"check-attributes\"].length) {\n          return action;\n        }\n        else{\n          return null;\n        }\n      }\n      else {\n        return action;\n      }\n    });\n    return _.compact(attributes);\n  }\n}\n","import { ItemComponent } from './item.component'\n\nexport const components: any[] = [\n  ItemComponent,\n]\n\nexport { ItemComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent extends BaseComponent {\n  @Input()\n  collection$: Observable<any>;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  searchAttributes: any = {};\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  triggerAction(event_) {\n    this.actionEmitter.emit({\n      entity: event_.entity,\n      action: event_.action\n    });\n  }\n}\n","import { ListComponent } from './list.component'\n\nexport const components: any[] = [\n  ListComponent,\n]\n\nexport { ListComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'sunray-shared-navbar-toggle',\n  templateUrl: './navbar-toggle.component.html',\n  styleUrls: ['./navbar-toggle.component.scss']\n})\nexport class NavbarToggleComponent extends BaseComponent {\n  private animationClass: string = \"hamburger--slider\"\n  private activeClass: string = \"is-active\"\n  private ngClass: string = \"\"\n  private state: string = 'inactive'\n\n  @Input()\n  animation: string\n\n  @Input()\n  isActive: boolean = false\n\n  @Output()\n  toggleEmitter: EventEmitter<any> = new EventEmitter()\n\n  ngOnInit() {\n    this.ngClass = this.getNgClass()\n    this.setState()\n  }\n\n  private setState() {\n    this.state = this.isActive ? 'active' : 'inactive'\n  }\n\n  toggle() {\n    let oldState = this.state\n    this.isActive = !this.isActive\n    this.setState()\n    this.emitNewState(oldState)\n\n    if(this.animation) {\n      this.animationClass = `hamburger--${this.animation}`\n    }\n  }\n\n  private emitNewState(oldState) {\n    let event = {\n      fromState: oldState,\n      toState: this.state\n    }\n    this.toggleEmitter.emit(event)\n  }\n\n  getNgClass() {\n    let ngClasses = [this.animationClass]\n\n    if(this.isActive) {\n      ngClasses.push(this.activeClass)\n    }\n\n    return _.join(ngClasses, \" \")\n  }\n}\n","import { NavbarToggleComponent }              from './navbar-toggle.component'\n\nexport const components: any[] = [\n  NavbarToggleComponent,\n]\n\nexport { NavbarToggleComponent }\n","import * as _ from 'lodash'\n\nimport {\n  Component, OnInit, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\nimport {\n  iNavigationMenu,\n} from '../../../providers/interfaces'\n\n@Component({\n  selector: 'ceo-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Input()\n  navigationLinks: any[]\n\n  @Input()\n  menuClass: string = 'horizontal'\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  getMenuClass(){\n    let classNames = ['menu', this.menuClass]\n    return _.join(classNames, ' ')\n  }\n\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss']\n})\nexport class NavItemComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  className() {\n    let classes = [this.item.className]\n\n    if(this.item.hasSubmenu()) {\n      classes.push('dropdown')\n      classes.push('has-submenu')\n    }\n\n    return _.join(classes, ' ')\n  }\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-link',\n  templateUrl: './nav-link.component.html',\n  styleUrls: ['./nav-link.component.scss']\n})\nexport class NavLinkComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n  EventEmitter,\n  Output,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n  iNavigationMenu,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent extends BaseComponent {\n  @Input()\n  navigationMenu: iNavigationMenu\n\n  @Output()\n  itemEvent: EventEmitter<any> = new EventEmitter<any>()\n\n  onItemEvent(event) {\n    this.itemEvent.emit(event)\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../base/base.component'\n\nimport {\n  iNavigationMenuItem,\n} from '../../../../providers/interfaces/index'\n\n@Component({\n  selector: 'ceo-navigation-nav-text',\n  templateUrl: './nav-text.component.html',\n  styleUrls: ['./nav-text.component.scss']\n})\nexport class NavTextComponent extends BaseComponent {\n  @Input()\n  item: iNavigationMenuItem\n}\n","import { NavigationComponent }  from './navigation.component'\nimport { NavItemComponent }     from './nav-item/nav-item.component'\nimport { NavLinkComponent }     from './nav-link/nav-link.component'\nimport { NavComponent }         from './nav/nav.component'\nimport { NavTextComponent }     from './nav-text/nav-text.component'\n\nexport const components: any[] = [\n  NavigationComponent,\n  NavItemComponent,\n  NavLinkComponent,\n  NavTextComponent,\n  NavComponent,\n]\n\nexport { NavigationComponent }\nexport { NavItemComponent }\nexport { NavLinkComponent }\nexport { NavTextComponent }\nexport { NavComponent }\n","import * as _ from \"lodash\"\n\nimport { Observable } from 'rxjs'\n\nimport { Component } from '@angular/core'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-page',\n  templateUrl: 'page.component.html',\n  styleUrls: ['./page.component.scss'],\n})\nexport class PageComponent extends BaseComponent {}\n\n","import { PageComponent } from './page.component'\n\nexport const components: any[] = [\n  PageComponent,\n]\n\nexport { PageComponent }\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component, OnInit, Input,\n  ViewChild, ComponentFactoryResolver, forwardRef,\n} from '@angular/core'\n\nimport { ContainerDirective } from '../../directives/index'\nimport { iPane }              from '../../../providers/interfaces/index'\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'ceo-shared-declarables-pane',\n  templateUrl: './pane.component.html',\n  styleUrls: ['./pane.component.scss']\n})\nexport class PaneComponent extends BaseComponent {\n  @ViewChild(forwardRef(() => ContainerDirective))\n  private containerDirective: ContainerDirective\n  componentRef: any\n  @Input()\n  pane$: Observable<iPane>\n\n  @Input()\n  inputs?: any[]\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.launch()\n  }\n\n  private launch() {\n    this.pane$.subscribe(pane => {\n      this.loadComponent(pane)\n    })\n  }\n\n  private loadComponent(pane: iPane): void {\n    let component = this.createComponent(pane.componentFactory)\n  }\n\n  private resolveComponentFactory(component) {\n    return this.componentFactoryResolver\n      .resolveComponentFactory(component)\n  }\n\n  private createComponent(componentFactory) {\n    let viewContainerRef = this.containerDirective.viewContainerRef\n    viewContainerRef.clear()\n    this.componentRef = viewContainerRef.createComponent(componentFactory)\n    this.setInputs()\n    return this.componentRef\n  }\n\n  private setInputs() {\n    if(this.inputs){\n      let setInput = (value, prop) => {\n        this.componentRef.instance[prop]  = value\n      }\n      _.forEach(this.inputs, setInput)\n    }\n  }\n}\n","import { PaneComponent } from './pane.component'\n\nexport const components: any[] = [\n  PaneComponent,\n]\n\nexport { PaneComponent }\n","import {\n  Component, Input, OnInit,\n  Output, EventEmitter\n} from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent extends BaseComponent {\n\n  search: FormControl = new FormControl('');\n\n  @Output()\n  searchKeyEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  ngOnInit() { \n    this.onValueChange();\n  }\n\n  onValueChange() {\n    this.search.valueChanges.subscribe((searchText) => {\n      this.searchKeyEmitter.emit({\n        searchText: searchText \n      });\n    });\n  }\n}\n","import { SearchComponent } from './search.component'\n\nexport const components: any[] = [\n  SearchComponent,\n]\n\nexport { SearchComponent }\n","import { SelectListComponent } from './select-list.component'\n\nexport const components: any[] = [\n  SelectListComponent,\n]\n\nexport { SelectListComponent }\n","import {\n  Component,\n  AfterViewChecked,\n  TemplateRef,\n  ViewContainerRef,\n  ViewChild,\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-svg-loader',\n  templateUrl: './svg-loader.component.html',\n  styleUrls: ['./svg-loader.component.scss']\n})\nexport class SvgLoaderComponent extends BaseComponent implements AfterViewChecked {\n  @ViewChild('template', { read: TemplateRef }) _template: TemplateRef<any>;\n  @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\n\n  ngAfterViewChecked() {\n    const view = this._template.createEmbeddedView({fromContext: 'John'});\n    this.vc.insert(view);\n  }\n}\n","import { SvgLoaderComponent } from './svg-loader.component'\n\nexport const components: any[] = [\n  SvgLoaderComponent,\n]\n\nexport { SvgLoaderComponent }\n","import * as _ from 'lodash';\n\nimport { Observable } from 'rxjs';\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nimport { BaseComponent } from '../base/base.component'\n\n@Component({\n  selector: 'shared-declarables-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent extends BaseComponent {\n  @Input()\n  collection$: Observable<any>;\n\n  @Input()\n  configHeader$: Observable<any>;\n\n  @Input()\n  itemActions$: Observable<any>;\n\n  @Input()\n  collectionActions$: Observable<any>;\n\n  @Input()\n  searchAttributes: any = {};\n\n  @Output()\n  actionEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  triggerAction(event_) {\n    this.actionEmitter.emit({\n      entity: event_.entity,\n      action: event_.action\n    });\n  }\n}\n","import { TableComponent } from './table.component'\n\nexport const components: any[] = [\n  TableComponent,\n]\n\nexport { TableComponent }\n","import * as base                 from './base/index'\nimport * as attributeList        from './attribute-list/index'\nimport * as body                 from './body/index'\nimport * as breadcrumb           from './breadcrumb/index'\nimport * as cardSelectList       from './card-select-list/index'\nimport * as card                 from './card/index'\nimport * as datepicker           from './datepicker/index'\nimport * as dropdown             from './dropdown/index'\nimport * as field                from './field/index'\nimport * as formGroup            from './form-group/index'\nimport * as form                 from './form/index'\nimport * as iframe               from './iframe/index'\nimport * as input                from './input/index'\nimport * as item                 from './item/index'\nimport * as list                 from './list/index'\nimport * as navbarToggle         from './navbar-toggle/index'\nimport * as navigation           from './navigation/index'\nimport * as page                 from './page/index'\nimport * as pane                 from './pane/index'\nimport * as search               from './search/index'\nimport * as selectList           from './select-list/index'\nimport * as svgLoader            from './svg-loader/index'\nimport * as table                from './table/index'\n\nexport const components: any[] = [\n  ...base.components,\n  ...attributeList.components,\n  ...body.components,\n  ...breadcrumb.components,\n  ...cardSelectList.components,\n  ...card.components,\n  ...datepicker.components,\n  ...dropdown.components,\n  ...field.components,\n  ...formGroup.components,\n  ...form.components,\n  ...iframe.components,\n  ...input.components,\n  ...item.components,\n  ...list.components,\n  ...navbarToggle.components,\n  ...navigation.components,\n  ...page.components,\n  ...pane.components,\n  ...search.components,\n  ...selectList.components,\n  ...svgLoader.components,\n  ...table.components,\n]\n\nexport { BaseComponent } from './base/index'\n\nexport { AttributeListComponent } from './attribute-list/index'\nexport { BodyComponent } from './body/index'\nexport { BreadcrumbComponent } from './breadcrumb/index'\nexport { CardSelectListComponent } from './card-select-list/index'\nexport { CardComponent } from './card/index'\nexport { DatepickerComponent } from './datepicker/index'\nexport { DropdownComponent } from './dropdown/index'\nexport { FieldComponent } from './field/index'\nexport { FormGroupComponent } from './form-group/index'\nexport { FormComponent } from './form/index'\nexport { InputComponent } from './input/index'\nexport { IframeComponent } from './iframe/index'\nexport { ItemComponent } from './item/index'\nexport { ListComponent } from './list/index'\nexport { NavbarToggleComponent } from './navbar-toggle/index'\nexport { NavigationComponent } from './navigation/index'\nexport { PageComponent } from './page/index'\nexport { PaneComponent } from './pane/index'\nexport { SearchComponent } from './search/index'\nexport { SelectListComponent } from './select-list/index'\nexport { SvgLoaderComponent } from './svg-loader/index'\nexport { TableComponent } from './table/index'\n","import { Component, OnInit } from '@angular/core'\n\nimport { BaseComponent } from '../../components/index'\n\n@Component({\n  template: '',\n  styleUrls: ['./base.page.scss']\n})\nexport class BasePage extends BaseComponent {\n\n  constructor() {\n    super()\n  }\n\n  ngOnInit() {\n  }\n}\n","import { BasePage } from './base/base.page'\n\nexport const pages: any[] = [\n  BasePage,\n]\n\nexport { BasePage }\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { RouterModule }   from '@angular/router'\nimport { CommonModule }   from '@angular/common'\n\nimport {\n  NgbDatepickerModule,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n} from '@ng-bootstrap/ng-bootstrap'\n\nimport {\n  MatButtonModule, MatCheckboxModule,\n  MatSnackBarModule, MatAutocompleteModule,\n  MatFormFieldModule, MatInputModule,\n  MatRadioModule, MatSelectModule,\n  MatIconModule, MatDialogModule,\n} from '@angular/material'\n\nimport { components } from './components/index'\nimport { directives } from './directives/index'\nimport { pages }      from './pages/index'\nimport { pipes }      from './pipes/index'\n\nconst angularMaterialModules: any[] = [\n  MatButtonModule,\n  MatCheckboxModule,\n  MatSnackBarModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatIconModule,\n  MatDialogModule,\n]\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n    NgbDatepickerModule,\n    angularMaterialModules,\n  ],\n  providers: [\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateNativeAdapter\n    },\n  ],\n  declarations: [\n    ...directives,\n    ...pipes,\n    ...components,\n    ...pages,\n  ],\n  exports: [\n    ...components,\n    ...pages,\n    ...directives,\n    ...pipes,\n  ],\n  entryComponents: [\n    ...components,\n    ...pages,\n  ]\n})\nexport class DeclarablesModule { }\n","// Shared Providers created internally.\nimport { NgModule } from '@angular/core'\n\nimport {\n  DeclarablesModule as SharedDeclarablesModule,\n} from '../declarables/declarables.module'\n\nimport { sharedServices }   from './services/index'\nimport { sharedGuards }     from './guards/index'\nimport { providers as tokenProviders } from './tokens/index'\n\n@NgModule({\n  imports: [\n    SharedDeclarablesModule,\n  ],\n  providers: [\n    ...sharedServices,\n    ...sharedGuards,\n    ...tokenProviders,\n  ],\n})\nexport class ProvidersModule { }\n","import {\n  Component,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.scss']\n})\nexport class CloseComponent extends BaseComponent {\n  @Output() close: EventEmitter<any> = new EventEmitter()\n\n  onClose() {\n    this.close.emit()\n  }\n}\n","import {\n  Component,\n  Inject,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material'\n\nimport {\n  iDialogAction,\n  iDialogComponentInputProperties,\n  iDialogComponent,\n} from '../../interfaces/index'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent extends BaseComponent {\n  contentElementId: string = 'dialog-content'\n\n  constructor(\n    public dialogRef: MatDialogRef<iDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: iDialogComponentInputProperties,\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    super.ngOnInit()\n    this.data.actions$.subscribe(action => this.onAction(action))\n  }\n\n  onClose(event) {\n    this.dialogRef.close('close')\n    this.emitAction(this.buildAction('close'))\n  }\n\n\n  onAction(action: iDialogAction) {\n    //console.log(\"We have the dialog action \" + action.name)\n  }\n\n  private buildAction(name: string, payload: any = null) {\n    return {\n      name: name,\n      payload: payload\n    }\n  }\n\n  emitAction(action: iDialogAction) {\n    this.data.actions$.next(action)\n  }\n}\n","import {\n  Observable,\n  BehaviorSubject,\n  of as observableOf,\n} from 'rxjs'\n\nimport { Component } from '@angular/core'\n\nimport { BaseComponent } from '../../../../../declarables/index'\n\nimport { DialogComponent } from '../dialog.component'\n\n@Component({\n  selector: 'ceo-dialog-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss']\n})\nexport class WidgetComponent extends DialogComponent {\n  data: any\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-widget-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent extends BaseComponent {\n  @Input() data: any\n  @Output() actionEmitter: EventEmitter<any> = new EventEmitter()\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core'\n\nimport { BaseComponent } from '../../../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-dialog-widget-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent extends BaseComponent {\n  @Input() data: any\n  @Output() actionEmitter: EventEmitter<any> = new EventEmitter()\n\n\n  onTriggerAction(action) {\n    let dialogAction = {\n      name: action.name,\n      payload: null\n    }\n    this.actionEmitter.emit(dialogAction)\n  }\n}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'shared-declarables-modal-navigation-item',\n  templateUrl: './modal-navigation-item.component.html',\n  styleUrls: ['./modal-navigation-item.component.scss']\n})\nexport class ModalNavigationItemComponent extends BaseComponent {}\n","import * as _ from 'lodash'\n\nimport {\n  Observable,\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  Component, OnInit, Inject, Input,\n  ViewChild, OnDestroy, forwardRef,\n} from '@angular/core'\n\nimport {\n  MatDialogRef, MAT_DIALOG_DATA\n} from '@angular/material'\nimport {\n  createCustomElement, NgElement\n} from '@angular/elements'\n\nimport {\n  iDialogComponentInputProperties,\n  iDialogComponent,\n} from '../../interfaces/index'\n\nimport {\n  ContainerDirective,\n  BaseComponent\n} from '../../../../declarables/index'\n\n@Component({\n  selector: 'shared-declarables-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent extends BaseComponent\n  implements iDialogComponent {\n\n  contentElementId: string = 'modal-content'\n  actions$: BehaviorSubject<any>\n\n  constructor(\n    public dialogRef: MatDialogRef<iDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: iDialogComponentInputProperties,\n  ) {\n    super()\n  }\n\n  afterClosed(): Observable<any> {\n    return this.dialogRef.afterClosed()\n  }\n\n  onAction(event) {\n    if(event.action.name == 'cancel') {\n      this.dialogRef.close(event.action.name)\n    }\n    else {\n      this.data.actions$.next(event)\n    }\n  }\n\n  onClose(event) {\n    this.dialogRef.close('close')\n  }\n}\n","import { InjectionToken }   from '@angular/core'\n\nexport const DIALOGS_CONFIG =\n  new InjectionToken<any>(\"Dialogs Config\")\n","import { DialogComponent } from '../components/index'\n\nimport { \n  BehaviorSubject,\n} from 'rxjs'\n\nimport { DIALOGS_CONFIG } from './tokens'\n\nlet initAction = {\n  name: 'init',\n  payload: null,\n}\n\nexport const defaultDialogsConfig = {\n  isDefault: true,\n  defaults: {\n    actions$: new BehaviorSubject(initAction),\n    componentType: DialogComponent,\n    width: '500px',\n    header: {\n      show: false,\n    },\n    footer: {\n      show: false,\n    },\n  },\n  dialogs: {}\n}\n\nexport const providers: any[] = [\n  {\n    provide: DIALOGS_CONFIG,\n    useValue: defaultDialogsConfig,\n    multi: true,\n  },\n]\n","// Service to create custom elements.\n\nimport * as _ from 'lodash'\n\nimport {\n  BehaviorSubject,\n} from 'rxjs'\n\nimport {\n  Injectable, Inject,\n} from '@angular/core'\n\nimport {\n  CustomElementManager,\n} from '../../../providers/index'\n\nimport {\n  DialogComponent\n} from '../components/dialog/dialog.component'\n\nimport {\n  iDialogComponent,\n  iDialogConfig,\n  iDialogsConfig,\n  iDialogContentComponent,\n  iDialogHtmlElement,\n} from '../interfaces/index'\n\nimport {\n  DIALOGS_CONFIG,\n} from '../tokens/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  constructor(\n    private customElementManager: CustomElementManager,\n    @Inject(DIALOGS_CONFIG) public dialogsConfig,\n  ) {}\n\n  provide(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogConfig {\n\n    let component = this.getComponent(dialogElement)\n\n    config = this.getDialogConfig(dialogElement, config)\n\n    let configActions = this.dialogConfigActions(component)\n\n    return _.defaultsDeep(config, configActions, this.defaults)\n  }\n\n  get dialogs() {\n    return _.reduce(_.map(this.dialogsConfig, 'dialogs'), _.merge)\n  }\n\n  get defaults() {\n    let defaults = this.defaultConfig.defaults\n    let others = {\n      componentType: DialogComponent,\n    }\n    return _.merge(defaults, others)\n  }\n\n  get defaultConfig() {\n    return _.find(this.dialogsConfig, { isDefault: true }) as iDialogsConfig\n  }\n\n  private getDialogConfig(\n    dialogElement,\n    config: iDialogConfig | string\n  ) {\n\n    var dialogName\n    if(this.customElementManager.isCustomElement(dialogElement)) {\n      dialogName = dialogElement.localName\n    }\n    if(_.isString(config)) {\n      dialogName = config\n    }\n\n    if(dialogName) {\n      return _.get(this.dialogs, dialogName, this.defaults)\n    }\n    else {\n      return config\n    }\n  }\n\n  private dialogConfigActions(component: iDialogContentComponent) {\n    if(component.dialogActions$) {\n      return {\n        actions$: component.dialogActions$\n      }\n    }\n    return {}\n  }\n\n  private getComponent(element: iDialogHtmlElement): iDialogContentComponent {\n    let component = element\n\n    if(this.customElementManager.isCustomElement(element)) {\n      component = this.customElementManager.getNgComponent(element)\n    }\n\n    return component as iDialogContentComponent\n  }\n}\n","import * as _ from 'lodash';\n\nimport { Injectable } from '@angular/core';\nimport {\n  MatDialog, MatDialogRef, MAT_DIALOG_DATA\n} from '@angular/material';\n\nimport {\n  DialogComponentType,\n  iDialogAction,\n  iDialogActionEvent,\n  iDialogComponent,\n  iDialogConfig,\n  iDialogContentComponent,\n  iDialogHtmlElement,\n  iMatDialogConfig,\n} from '../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatDialogAdapterService {\n  private adapterConfigProperties: any[] = [\n    'width', 'height',\n  ]\n  private nonDataProperties: any[] = [\n    'componentType',\n  ]\n\n  constructor(\n    private dialog: MatDialog\n  ) {}\n\n  open(\n    contentElement: iDialogHtmlElement,\n    dialogConfig: iDialogConfig,\n  ): iDialogComponent {\n\n    let config = this.buildAdapterDialogConfig(dialogConfig)\n\n    let dialogComponentType = dialogConfig.componentType\n    let matDialogComponent = this.getMatDialog(dialogComponentType, config)\n    let dialogComponent = this.getDialogComponent(matDialogComponent)\n    return this.configuredDialogComponent(dialogComponent, contentElement)\n  }\n\n  closeAll() {\n    this.dialog.closeAll()\n  }\n\n  private getMatDialog(\n    dialogComponentType: DialogComponentType,\n    config\n  ): MatDialogRef<any> {\n    return this.dialog.open(dialogComponentType, config)\n  }\n\n  private getDialogComponent(matDialog: MatDialogRef<any>): iDialogComponent {\n    let dialogComponent = <iDialogComponent>matDialog.componentInstance\n    this.connectDialogs(matDialog, dialogComponent)\n    return dialogComponent\n  }\n\n  private connectDialogs(\n    matDialog: MatDialogRef<any>,\n    dialogComponent: iDialogComponent\n  ) {\n\n    /*\n    //Gets an observable that is notified when the dialog is finished opening.\n    afterOpened\n\n    //Gets an observable that emits when the overlay's backdrop has been clicked.\n    backdropClick\n\n    //Gets an observable that is notified when the dialog has started closing.\n    beforeClosed\n\n    //Gets an observable that emits when keydown events are targeted on the overlay.\n    keydownEvents\n    */\n\n    let matDialogEventNames = [\n      'afterClosed', 'afterOpened', 'backdropClick',\n      'beforeClosed', 'keydownEvents'\n    ]\n\n    let attachMatDialogEvent = (eventName) => {\n      matDialog[eventName]().subscribe(event => {\n        let action = {\n          name: eventName,\n          payload: dialogComponent,\n        }\n        dialogComponent.data.actions$.next(action)\n      })\n    }\n    _.forEach(matDialogEventNames, attachMatDialogEvent)\n\n    dialogComponent.data.actions$.subscribe(action => {\n      if(action.name == 'close') {\n        matDialog.close(action)\n      }\n    })\n  }\n\n\n  private buildAdapterDialogConfig(\n    dialogConfig: iDialogConfig\n  ): iMatDialogConfig {\n\n    let dialogComponentData = {\n      data: this.buildComponentData(dialogConfig)\n    }\n\n    let adapterDialogConfig = _.pick(\n      dialogConfig,\n      this.adapterConfigProperties\n    )\n\n    return _.merge(adapterDialogConfig, dialogComponentData)\n  }\n\n  private buildComponentData(dialogConfig: iDialogConfig) {\n    return dialogConfig\n  }\n\n  private configuredDialogComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): iDialogComponent {\n    this.addContentComponent(dialogComponent, contentElement)\n    return <iDialogComponent>dialogComponent\n  }\n\n  private addContentComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): void {\n    this.showContentComponent(dialogComponent, contentElement)\n    this.launchContentComponent(dialogComponent)\n  }\n\n  private showContentComponent(\n    dialogComponent: iDialogComponent, \n    contentElement: iDialogHtmlElement,\n  ): void {\n    document\n      .getElementById(dialogComponent.contentElementId)\n      .appendChild(<any>contentElement)\n  }\n\n  private launchContentComponent(\n    dialogComponent: iDialogComponent, \n  ): void {\n    let action = this.buildLaunchAction(dialogComponent)\n    dialogComponent.data.actions$.next(<iDialogAction>action)\n  }\n\n  private buildLaunchAction(\n    dialogComponent: iDialogComponent, \n  ): iDialogAction {\n    return {\n      name: 'launch',\n      payload: {\n        dialogRef: dialogComponent.dialogRef\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  DialogComponentType,\n  iDialogComponentConfig,\n  iDialogConfig,\n  iDialogContentComponent,\n  iDialogComponent,\n  iDialogHtmlElement,\n  iDialogService,\n  iMatDialogConfig,\n} from '../interfaces/index'\n\nimport {\n  MatDialogAdapterService,\n} from './mat-dialog-adapter.service'\n\nimport {\n  ConfigService,\n} from './config.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService implements iDialogService {\n  constructor(\n    private dialogAdapter: MatDialogAdapterService,\n    private configService: ConfigService\n  ) {}\n\n  open(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogComponent {\n\n    config = this.buildDialogConfig(dialogElement, config)\n\n    return this.openVendorDialog(dialogElement, config)\n  }\n\n  closeAll() {\n    this.dialogAdapter.closeAll()\n  }\n\n  private buildDialogConfig(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig | string,\n  ): iDialogConfig {\n    return this.configService.provide(dialogElement, config)\n  }\n\n  private openVendorDialog(\n    dialogElement: iDialogHtmlElement,\n    config: iDialogConfig,\n  ): iDialogComponent {\n    return this.dialogAdapter.open(dialogElement, config)\n  }\n\n}\n","import {\n  DialogWidgetComponent,\n  DialogWidgetHeaderComponent,\n  DialogWidgetFooterComponent,\n} from './index'\n\nexport const components: any[] = [\n  DialogWidgetComponent,\n  DialogWidgetHeaderComponent,\n  DialogWidgetFooterComponent,\n]\n","import {\n  DialogCloseComponent,\n  DialogComponent,\n} from './index'\n\nimport { components as widgetComponents } from './widget/components'\n\nexport const components: any[] = [\n  DialogCloseComponent,\n  DialogComponent,\n  ...widgetComponents,\n]\n","import {\n  ModalComponent,\n  //ModalHeaderComponent,\n  //ModalFooterComponent, \n} from './index'\n\n\nexport const components: any[] = [\n  ModalComponent,\n  //ModalHeaderComponent,\n  //ModalFooterComponent, \n]\n","import {\n  ModalNavigationItemComponent,\n} from './index'\n\nexport const components: any[] = [\n  ModalNavigationItemComponent,\n]\n","import { components as dialogComponents } from './dialog/components'\nimport { components as modalComponents }  from './modal/components'\nimport { components as modalNavigationItemComponents }  from './modal-navigation-item/components'\n\nexport const components: any[] = [\n  ...dialogComponents,\n  ...modalComponents,\n  ...modalNavigationItemComponents,\n]\n","import {\n  DialogConfigService,\n  DialogService,\n  MatDialogAdapterService,\n} from './index'\n\nexport const services: any[] = [\n  DialogConfigService,\n  DialogService,\n  MatDialogAdapterService,\n]\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { CommonModule }   from '@angular/common'\n\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { NgsRevealModule }      from 'ngx-scrollreveal'\n\n\nimport {\n  MatDialogModule,\n} from '@angular/material'\n\nconst angularMaterialModules: any[] = [\n  MatDialogModule,\n]\n\nimport { SharedDeclarablesModule } from '../../declarables/index'\n\nimport { components } from './components/components'\nimport { services } from './services/services'\nimport { dialogTokenProviders } from './tokens/index'\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbDatepickerModule,\n    NgsRevealModule,\n    angularMaterialModules,\n    SharedDeclarablesModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n    ...components,\n  ]\n})\nexport class CeoDialogsModule {\n  static forRoot() {\n    return {\n      ngModule: CeoDialogsModule,\n      providers: [\n        ...services,\n        ...dialogTokenProviders,\n      ],\n    }\n  }\n}\n\n","import {\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormMember,\n} from '../interfaces/index'\n\nexport class FormMember implements iFormMember {\n  protected _ngControl: NgAbstractControl\n  type: FormMemberType\n\n  constructor(props: any = {}) {\n    Object.assign(this, props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  get value(): any {\n    return this.ngControl.value\n  }\n\n  get valid(): boolean {\n    return this.ngControl.valid\n  }\n\n  markAsTouchedAndDirty(): void {\n    this.markAsTouched()\n    this.markAsDirty()\n  }\n\n\n  markAsTouched() {\n    this.ngControl.markAsTouched()\n  }\n\n\n  markAsDirty() {\n    this.ngControl.markAsDirty()\n  }\n}\n","import * as _ from 'lodash'\n\nimport {\n  AbstractControl as NgAbstractControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormMemberMap,\n  iFormMember,\n  iFormGroup,\n} from '../interfaces/index'\n\nimport { FormMember } from './form-member'\n\nexport class FormGroup extends FormMember implements iFormGroup {\n  type: FormMemberType = 'form-group'\n\n  private _members: iFormMemberMap\n\n  constructor(props: Partial<iFormGroup> = {}) {\n    super(props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  get memberNames(): string[] {\n    return _.keys(this.members)\n  }\n\n  getMember(memberName: string): iFormMember {\n    return this.members[memberName]\n  }\n\n  get members(): iFormMemberMap {\n    return this._members\n  }\n\n  set members(members: iFormMemberMap) {\n    this._members = members\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this._ngControl = ngControl\n  }\n  \n  //Marks the control as touched. A control is touched by focus and blur events\n  //that do not change the value.\n  markAsTouched() {\n    let marker = 'markAsTouched'\n    this.applyMarker(marker)\n  }\n\n  //Marks the control as dirty. A control becomes dirty when the\n  //control's value is changed through the UI\n  markAsDirty() {\n    let marker = 'markAsDirty'\n    this.applyMarker(marker)\n  }\n\n  applyMarker(markerName: string) {\n    this.ngControl[markerName]()\n\n    let markMember = (member) => {\n      member[markerName]()\n    }\n\n    _.map(this.members, markMember)\n  }\n\n  // Iterator\n  // Allows us to use the object in angular directives\n  // (i.e. ngFor, etc)\n  [Symbol.iterator]() {\n    let current = 0\n    let members= _.values(this.members)\n\n    return  {\n      next: function () {\n        let isEmpty = _.isEmpty(members)\n        let value = isEmpty ? null : members[current++]\n        let done = isEmpty ? true : current > members.length\n        return {\n          value: value,\n          done: done\n        }\n      }\n    }\n  }\n}\n","import {\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormControl,\n  iFormItem,\n  iFormMemberError,\n  iLabelElement,\n} from '../interfaces/index'\n\nimport { FormMember } from './form-member'\n\nexport class FormItem extends FormMember implements iFormItem {\n  type: FormMemberType = 'form-item'\n\n  control: iFormControl\n  label: iLabelElement\n\n  constructor(props: Partial<iFormItem> = {}) {\n    super(props)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this.control.ngControl\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this.control.ngControl = ngControl\n  }\n\n  get showValidations(): boolean {\n    return this.control.showValidations\n  }\n\n  get errorMessages(): iFormMemberError[] {\n    return this.control.errorMessages\n  }\n}\n","import {\n  FormMemberType,\n  iFormWrapper,\n} from '../interfaces/index'\n\nimport {\n  FormGroup,\n} from './form-group'\n\nexport class FormWrapper extends FormGroup implements iFormWrapper {\n  type: FormMemberType = 'form'\n}\n","import { iLabelElement } from '../interfaces/index'\n\nexport class LabelElement implements iLabelElement {\n  controlId: string\n  text: string\n\n  element: any\n\n  public constructor(init?: Partial<iLabelElement>) {\n    Object.assign(this, init)\n  }\n\n}\n","import * as _ from 'lodash'\n\nimport {\n  FormControl as NgFormControl,\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  words,\n} from '@ceo/core'\n\nimport {\n  iFormControl,\n  iFormMemberError,\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class BaseFormControl implements iFormControl {\n  controlType: FormControlType\n  protected _ngControl: NgAbstractControl\n\n  displayName: string\n  elementId: string\n  key: string\n  label: string\n  order: number = -1\n  placeholder: string\n  row: number\n  text: string\n  validators: any[] = []\n  value: any\n\n  constructor(init: Partial<iFormControl> = {}) {\n    Object.assign(this, init)\n  }\n\n  get ngControl(): NgAbstractControl {\n    return this._ngControl\n  }\n\n  set ngControl(ngControl: NgAbstractControl) {\n    this._ngControl = ngControl\n  }\n\n  get showValidations(): boolean {\n    return this.ngControl.errors &&\n      (this.ngControl.dirty || this.ngControl.touched)\n  }\n\n  get errorMessages(): iFormMemberError[] {\n    let buildErrorMessage = (value, key) => {\n      var message = ''\n\n      let lowerCased = _.lowerCase(this.displayName)\n      let firstLetter = lowerCased[0]\n      let startsWithVowel = _.includes(['a', 'e', 'i', 'o', 'u'], firstLetter)\n      let article = startsWithVowel ? 'an' : 'a'\n    \n      if(key == 'required') {\n        message = `Please enter ${article} ${lowerCased}.`\n      }\n\n      if(key == 'email') {\n        message = `Please enter a valid email.`\n      }\n\n      return {\n        key: key,\n        message: message,\n      }\n    }\n    return _.map(this.ngControl.errors, buildErrorMessage)\n  }\n\n  get name(): string {\n    return this.displayName\n  }\n}\n","import { BaseFormControl } from './base.form-control'\n\nimport {\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class CheckboxFormControl extends BaseFormControl {\n  controlType: FormControlType = 'checkbox'\n}\n","import { Observable } from 'rxjs'\n\nimport { BaseFormControl } from './base.form-control'\n\nimport {\n  iFormControl,\n  iSelectFormControl,\n  FormControlType,\n} from '../../interfaces/index'\n\nexport class SelectFormControl extends BaseFormControl \n  implements iSelectFormControl {\n\n  controlType: FormControlType = 'select'\n\n  options: { text: string, value: string }[] = []\n\n  constructor(init: Partial<iFormControl> = {}) {\n    super(init)\n\n    //eg. [{key: 1, value: \"Test1\"}]\n    //this.options = init['options'] || this.emptyDropdown$()\n  }\n\n  /*\n  private emptyDropdown$(): Observable<any> {\n    return new Observable((observer) => {\n      observer.next([])\n      observer.complete()\n    })\n  }\n  */\n}\n\n","// Similar implementation to:\n// https://angular.io/guide/dynamic-form\n\nimport * as _ from 'lodash'\n\nimport {\n  BaseFormControl,\n} from './base.form-control'\n\nimport {\n  FormControlType,\n  InputTypeAttribute,\n  iInputFormControl,\n} from '../../interfaces/index'\n\nlet inputFormControlDefaults = {\n  key: '',\n  label: '',\n  placeholder: '',\n  row: null,\n  value: null,\n  inputType: 'text' as InputTypeAttribute,\n  required: false,\n  options: [],\n}\n\nexport class InputFormControl extends BaseFormControl\n  implements iInputFormControl {\n\n  private defaults: Partial<iInputFormControl> = inputFormControlDefaults\n  controlType: FormControlType = 'input'\n\n  inputType: InputTypeAttribute\n  required: boolean\n  options: { text: string, value: string }[] = []\n\n  constructor(init: Partial<iInputFormControl> = {}) {\n    super(init)\n\n    init = _.defaults(init, this.defaults)\n    Object.assign(this, init)\n  }\n}\n","import { BaseFormControl } from './base.form-control'\n\nimport {\n  FormControlType,\n  iFormControl,\n} from '../../interfaces/index'\n\nexport class TextboxFormControl extends BaseFormControl {\n  controlType: FormControlType = 'textbox'\n}\n","import * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\n\nimport {\n  Component, Input,\n  Output, EventEmitter,\n} from '@angular/core'\n\nimport {\n  FormGroup,\n  AbstractControl,\n} from '@angular/forms'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormWrapper,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent extends BaseComponent {\n  @Input() formWrapper: iFormWrapper\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormControl,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-control',\n  templateUrl: './form-control.component.html',\n  styleUrls: ['./form-control.component.scss']\n})\nexport class FormControlComponent extends BaseComponent {\n  @Input() control: iFormControl\n}\n","import * as _ from 'lodash'\n\nimport {\n  Component, Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  FormGroup,\n} from '../../classes/index'\n\nimport {\n  iFormGroup,\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-group',\n  templateUrl: './form-group.component.html',\n  styleUrls: ['./form-group.component.scss']\n})\nexport class FormGroupComponent extends BaseComponent {\n  @Input() key: string\n  @Input() model: iFormGroup\n}\n","import {\n  Component, Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-item',\n  templateUrl: './form-item.component.html',\n  styleUrls: ['./form-item.component.scss']\n})\nexport class FormItemComponent extends BaseComponent {\n  @Input() key: string\n  @Input() item: iFormItem\n\n  classes: any = {\n    valid: 'is-valid',\n    invalid: 'is-invalid',\n  }\n\n  formGroupClass() {\n    let classes = []\n    let ngControl = this.item.ngControl\n\n    if(ngControl.valid) {\n      classes.push(this.classes.valid)\n    }\n    if(ngControl.invalid) {\n      classes.push(this.classes.invalid)\n    }\n\n    return classes\n  }\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../declarables/index'\n\nimport {\n  iFormItem,\n} from '../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-form-item-error',\n  templateUrl: './form-item-error.component.html',\n  styleUrls: ['./form-item-error.component.scss']\n})\nexport class FormItemErrorComponent extends BaseComponent {\n  @Input() key: string\n  @Input() item: iFormItem\n}\n","import { Component, Input } from '@angular/core'\n\nimport {\n  BaseComponent,\n} from '../../../../../declarables/index'\n\nimport {\n  iLabelElement,\n} from '../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent extends BaseComponent {\n  @Input() element: iLabelElement\n}\n","import {\n  Component, OnInit,\n  Input,\n} from '@angular/core'\n\nimport {\n  BaseComponent as SharedBaseComponent,\n} from '../../../../../../declarables/index'\n\n\nimport {\n  iFormControl,\n} from '../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent extends SharedBaseComponent {\n  @Input() element: iFormControl\n}\n","import { Component, Input } from '@angular/core'\n\nimport { BaseComponent } from '../base//base.component'\n\nimport {\n  iInputFormControl,\n} from '../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss']\n})\nexport class InputComponent extends BaseComponent {\n  @Input() element: iInputFormControl\n}\n","import { Component, Input } from '@angular/core'\n\nimport { BaseComponent as SharedBaseComponent } from '../../base//base.component'\n\nimport {\n  iInputFormControl,\n} from '../../../../../interfaces/index'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent extends SharedBaseComponent {\n  @Input() element: iInputFormControl\n}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent  } from '../base//base.component'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseComponent {}\n","import { Component } from '@angular/core'\n\nimport { BaseComponent  } from '../base//base.component'\n\n@Component({\n  selector: 'ceo-forms-elements-form-controls-input-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends BaseComponent {\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  Validators as NgValidators,\n} from '@angular/forms'\n\nimport {\n  iFormControl,\n} from '../../interfaces/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlFactory {\n  build(formControl: iFormControl): NgFormControl {\n    return new NgFormControl(\n      formControl.value,\n      NgValidators.compose(formControl.validators),\n    )\n  }\n}\n\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormGroup as NgFormGroup,\n  AbstractControl as NgAbstractControl,\n} from '@angular/forms'\n\nimport {\n  iMap,\n} from '../../../../providers/index'\n\nimport {\n  iFormGroup,\n  iFormMember,\n  iNgFormMemberFactory,\n} from '../../interfaces/index'\n\nimport { FormControlFactory } from './form-control-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGroupFactory {\n  constructor(\n    private formControlFactory: FormControlFactory\n  ) {}\n\n  build(formGroup: iFormGroup): NgFormGroup {\n    return this.buildNgFormGroup(formGroup)\n  }\n\n  private buildNgFormGroup(formGroup: iFormGroup): NgFormGroup {\n    let ngControls = this.buildNgControls(formGroup.members)\n    return new NgFormGroup(ngControls)\n  }\n\n  private buildNgControls(members: iMap<iFormMember>): iMap<NgAbstractControl> {\n    let getNgControl = (member: iFormMember) => {\n      return this.getNgControl(member)\n    }\n\n    return _.mapValues(members, getNgControl)\n  }\n\n  private getNgControl(member: iFormMember): NgAbstractControl {\n    if(!member.ngControl) {\n      let control = this.buildNgControl(member)\n      member.ngControl = control\n    }\n\n    return member.ngControl\n  }\n\n  private buildNgControl(member: iFormMember): NgAbstractControl {\n    let factory = <iNgFormMemberFactory>this.resolveControlFactory(member)\n    let ngControl = factory.build(member)\n    return ngControl\n  }\n\n  private resolveControlFactory(member: iFormMember) {\n    switch(member.type) {\n      case \"form-item\": {\n        return this.formControlFactory\n      }\n      case \"form-group\": {\n        return this\n      }\n      default: {\n        return this.formControlFactory\n      }\n    }\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n} from '@angular/forms'\n\nimport {\n  iFactory,\n  iFormControl,\n  iFormControlProps,\n  iFormControlConstructor,\n} from '../interfaces/index'\n\nimport {\n  CheckboxFormControl,\n  SelectFormControl,\n  InputFormControl,\n  TextboxFormControl,\n} from '../classes/index'\n\nimport { NgFormControlFactory } from './ng-forms/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlFactory\n  implements iFactory<iFormControl, any> {\n\n  constructor(\n    private ngFormControlFactory: NgFormControlFactory,\n  ) { }\n\n  build(props: iFormControlProps): iFormControl {\n    let formControl = this.buildFormControl(props)\n    formControl.ngControl = this.buildNgFormControl(formControl)\n    return formControl\n  }\n\n  private buildFormControl(props: iFormControlProps): iFormControl {\n    let controlConstructor = this.resolveControlConstructor(props)\n    return new controlConstructor(props)\n  }\n\n  private resolveControlConstructor(\n    props: iFormControlProps,\n  ): iFormControlConstructor {\n\n    switch(props.controlType) {\n      case \"input\": {\n        return InputFormControl\n      }\n      case \"textbox\": {\n        return TextboxFormControl\n      }\n      case \"select\": {\n        return SelectFormControl\n      }\n      case \"checkbox\": {\n        return CheckboxFormControl\n      }\n      default: {\n        return InputFormControl\n      }\n    }\n  }\n\n  private buildNgFormControl(formControl: iFormControl): NgFormControl {\n    return this.ngFormControlFactory.build(formControl)\n  }\n}\n","import { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFactory,\n  iFormMember,\n  iFormGroup,\n  iFormGroupProps,\n  iFormMemberFactoryParams,\n} from '../interfaces/index'\n\nimport {\n  iConstructor,\n} from '../../../providers/index'\n\nimport {\n  FormGroup,\n  FormWrapper,\n} from '../classes/index'\n\nimport { NgFormGroupFactory } from './ng-forms/index'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGroupFactory\n  implements iFactory<iFormGroup, iFormMemberFactoryParams> {\n\n  type: FormMemberType = 'form-group'\n\n  constructor(\n    private ngFormGroupFactory: NgFormGroupFactory,\n  ) { }\n\n  build(params: iFormMemberFactoryParams): iFormGroup {\n    let formGroup = this.buildFormGroup(params)\n    formGroup.ngControl = this.buildNgFormGroup(formGroup)\n    return formGroup\n  }\n\n  private buildFormGroup(params: iFormMemberFactoryParams): iFormGroup {\n    let formMemberCtor = this.resolveFormGroupCtor(params)\n    return new formMemberCtor(<iFormGroupProps>params.data)\n  }\n\n  private resolveFormGroupCtor(\n    params: iFormMemberFactoryParams\n  ): iConstructor<iFormGroup> {\n\n    switch(params.type) {\n      case \"form-group\": {\n        return FormGroup\n      }\n      case \"form\": {\n        return FormWrapper\n      }\n      default: {\n        return FormGroup\n      }\n    }\n  }\n\n  private buildNgFormGroup(formGroup: iFormGroup): NgFormGroup {\n    return this.ngFormGroupFactory.build(formGroup)\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  FormControl as NgFormControl,\n  FormGroup as NgFormGroup,\n} from '@angular/forms'\n\nimport {\n  FormMemberType,\n  iFormWrapper,\n  iFormMemberMap,\n  iFormGroupProps,\n} from '../interfaces/index'\n\nimport {\n  FormWrapper,\n} from '../classes/index'\n\nimport { FormGroupFactory } from './form-group-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormFactory {\n  constructor(\n    private formGroupFactory: FormGroupFactory\n  ) { }\n\n  build(members: iFormMemberMap): iFormWrapper {\n    let data = {\n      members: members\n    }\n    let params = {\n      type: 'form' as FormMemberType,\n      data: data as iFormGroupProps\n    }\n    return this.formGroupFactory.build(params)\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  FormMemberType,\n  iFactory,\n  iFormControl,\n  iFormItem,\n  iFormItemProps,\n  iFormMemberFactoryParams,\n  iLabelElement,\n} from '../interfaces/index'\n\nimport {\n  FormItem,\n  LabelElement,\n} from '../classes/index'\n\nimport { FormControlFactory } from './form-control-factory.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormItemFactory\n  implements iFactory<iFormItem, iFormMemberFactoryParams> {\n\n  type: FormMemberType = 'form-item'\n\n  constructor(\n    private formControlFactory: FormControlFactory,\n  ) { }\n\n  build(params: iFormMemberFactoryParams): iFormItem {\n    let label = this.buildLabel(params)\n    let control = this.buildControl(params)\n    return this.buildItem(label, control)\n  }\n\n  private buildItem(label: iLabelElement, control: iFormControl): iFormItem {\n    let itemParams = {\n      label: label,\n      control: control\n    }\n    return new FormItem(itemParams)\n  }\n\n  buildLabel(params: iFormMemberFactoryParams): iLabelElement {\n    let props = <iFormItemProps>params.data\n    return new LabelElement(props.label)\n  }\n\n  buildControl(params: iFormMemberFactoryParams): iFormControl {\n    let props = <iFormItemProps>params.data\n    return this.formControlFactory.build(props.control)\n  }\n}\n","import * as _ from 'lodash'\n\nimport { Injectable } from '@angular/core'\n\nimport {\n  iFactory,\n  iFormMember,\n  iFormMemberFactoryParams,\n} from '../interfaces/index'\n\nimport { FormItemFactory }   from './form-item-factory.service'\nimport { FormGroupFactory }  from './form-group-factory.service'\n\ninterface iFormMemberFactory extends iFactory<iFormMember, iFormMemberFactoryParams> {}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormMemberFactory\n  implements iFactory<iFormMember, iFormMemberFactoryParams> {\n\n  private factories: iFactory<iFormMember, iFormMemberFactoryParams>[]\n  private defaultMemberFactory: iFactory<iFormMember, iFormMemberFactoryParams>\n\n  constructor(\n    private formItemFactory: FormItemFactory,\n    private formGroupFactory: FormGroupFactory,\n  ) {\n    this.factories = [\n      formItemFactory,\n      formGroupFactory\n    ]\n    this.defaultMemberFactory = formItemFactory\n  }\n\n  build(params: iFormMemberFactoryParams): iFormMember {\n    let factory = this.resolveMemberFactory(params)\n    return factory.build(params)\n  }\n\n  private resolveMemberFactory(\n    params: iFormMemberFactoryParams\n  ): iFactory<iFormMember, iFormMemberFactoryParams> {\n\n    let typeFactory = _.find(this.factories, { type: params.type })\n\n    return <iFormMemberFactory>_.defaultTo(typeFactory, this.defaultMemberFactory)\n  }\n}\n","import {\n  InputFormControlComponent,\n  InputBaseFormControlComponent,\n  InputCheckboxFormControlComponent,\n  InputRadioFormControlComponent,\n} from './index'\n\nexport const components: any[] = [\n  InputFormControlComponent,\n  InputBaseFormControlComponent,\n  InputCheckboxFormControlComponent,\n  InputRadioFormControlComponent,\n]\n","import {\n  BaseFormControlComponent,\n} from './index'\n\nimport { components as inputComponents } from './input/components'\n\nexport const components: any[] = [\n  BaseFormControlComponent,\n  ...inputComponents,\n]\n","import {\n  LabelComponent,\n} from './index'\n\nimport { components as formControlsComponents } from './form-controls/components'\n\nexport const components: any[] = [\n  LabelComponent,\n  ...formControlsComponents,\n]\n","import {\n  CeoFormComponent,\n  CeoFormControlComponent,\n  CeoFormGroupComponent,\n  CeoFormItemComponent,\n  CeoFormItemErrorComponent,\n} from './index'\n\nimport { components as elementComponents } from './elements/components'\n\nexport const components: any[] = [\n  CeoFormComponent,\n  CeoFormControlComponent,\n  CeoFormGroupComponent,\n  CeoFormItemComponent,\n  CeoFormItemErrorComponent,\n  ...elementComponents,\n]\n\n","import {\n  NgFormControlFactory,\n  NgFormGroupFactory,\n} from './index'\n\nexport const services: any[] = [\n  NgFormControlFactory,\n  NgFormGroupFactory,\n]\n","import {\n  FormControlFactory,\n  FormFactory,\n  FormGroupFactory,\n  FormItemFactory,\n  FormMemberFactory,\n} from './index'\n\nimport { services as ngFormsServices } from './ng-forms/services'\n\nexport const services: any[] = [\n  FormControlFactory,\n  FormFactory,\n  FormGroupFactory,\n  FormItemFactory,\n  FormMemberFactory,\n  ...ngFormsServices,\n]\n","import { NgModule }     from '@angular/core'\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms'\nimport { CommonModule }   from '@angular/common'\n\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport {\n  MatRadioModule,\n  MatCheckboxModule,\n} from '@angular/material'\n\nimport { SharedDeclarablesModule } from '../../declarables/index'\n\nimport { components } from './components/components'\nimport { services }   from './services/services'\n\nconst angularMaterialModules: any[] = [\n  MatRadioModule,\n  MatCheckboxModule,\n\n]\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NgbDatepickerModule,\n    angularMaterialModules,\n    SharedDeclarablesModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n  ]\n})\nexport class CeoFormsModule{\n  static forRoot() {\n    return {\n      ngModule: CeoFormsModule,\n      providers: [\n        ...services,\n      ],\n    }\n  }\n}\n","// https://www.w3schools.com/tags/tag_video.asp\n\nimport * as _ from 'lodash'\n\nimport { Component, Input, } from '@angular/core'\n\nimport {\n  iHtmlVideoTagAttributes,\n  iHtmlSourceTagAttributes,\n} from '../../interfaces/index'\n\nimport { BaseComponent } from '../../../../declarables/index'\n\n@Component({\n  selector: 'ceo-html-video',\n  templateUrl: './html-video.component.html',\n  styleUrls: ['./html-video.component.scss']\n})\nexport class HtmlVideoComponent extends BaseComponent {\n  @Input() tagAttributes: iHtmlVideoTagAttributes\n\n  get videoSources(): iHtmlSourceTagAttributes[] {\n    var sources\n    if(_.isString(this.tagAttributes.src)) {\n      let source = {\n        src: this.tagAttributes.src,\n        type: 'video/mp4'\n      }\n      sources = [source]\n    }\n    else {\n      sources = this.tagAttributes.src\n    }\n    return _.flattenDeep(sources) as iHtmlSourceTagAttributes[]\n  }\n}\n","import {\n  HtmlVideoComponent,\n} from './index'\n\nexport const components: any[] = [\n  HtmlVideoComponent,\n]\n","import { components as htmlVideoComponents } from './html-video/components'\n\nexport const components: any[] = [\n  ...htmlVideoComponents,\n]\n","import { NgModule }     from '@angular/core'\nimport { CommonModule }   from '@angular/common'\n\nimport { components } from './components/components'\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    ...components,\n  ],\n  exports: [\n    ...components,\n  ],\n  entryComponents: [\n    ...components,\n  ]\n})\nexport class CeoHtmlModule{\n  static forRoot() {\n    return {\n      ngModule: CeoHtmlModule,\n      providers: [],\n    }\n  }\n}\n","export const mimeTypes: any = [\n  {\n    name: 'image/png',\n    mimeType: 'image/png',\n    mediaType: 'image',\n  },\n  {\n    name: 'audio/mpeg',\n    mimeType: 'audio/mpeg',\n    mediaType: 'video',\n  },\n  {\n    name: 'audio/ogg',\n    mimeType: 'audio/ogg',\n    mediaType: 'video',\n  },\n  {\n    name: 'audio/*',\n    mimeType: 'audio/*',\n    mediaType: 'video',\n  },\n  {\n    name: 'video/mp4',\n    mimeType: 'video/mp4',\n    mediaType: 'video',\n  },\n]\n"]}