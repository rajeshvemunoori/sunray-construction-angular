{"version":3,"file":"ceo-analytics.js.map","sources":["ng://@ceo/analytics/lib/services/analytics.service.ts","ng://@ceo/analytics/lib/services/index.ts","ng://@ceo/analytics/lib/analytics.module.ts"],"sourcesContent":["// vendor\nimport * as _ from 'lodash';\n\n// angular\nimport { Injectable, Inject } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2Segment }  from 'angulartics2/segment';\n\nexport interface iAnalyticsProperties {\n  category?: string;\n  label?: string;\n  value?: number;\n}\n\nexport interface iAnalytics {\n  track(action: string, properties: iAnalyticsProperties): void;\n}\n\n/**\n * Wrapper for Angulartics2\n */\n@Injectable()\nexport class AnalyticsService implements iAnalytics {\n  constructor(private angulartics2: Angulartics2, private segment: Angulartics2Segment) {\n    // options\n    // https://github.com/angulartics/angulartics2/blob/master/src/core/angulartics2.ts#L90-L104\n    // angulartics2.virtualPageviews(value: boolean);\n    // angulartics2.excludeRoutes(routes: Array<string>);\n    // angulartics2.firstPageview(value: boolean);\n    // angulartics2.withBase(value: string);\n\n    this.devMode(false);\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  public track(action: string, properties: iAnalyticsProperties): void {\n    if (!this.devMode()) {\n      this.segment.eventTrack(action, properties);\n    }\n  }\n\n  /**\n   * Called automatically by default with Angular 2 Routing\n   * However, that can be turned off and this could be used manually\n   **/\n  public pageTrack(path: string, location: any) {\n    if (!this.devMode()) {\n      //this.segment.pageTrack(path, location);\n      this.segment.pageTrack(path);\n    }\n  }\n\n  /**\n   * Identify authenticated users\n   **/\n  public identify(properties: any) {\n    if (!this.devMode()) {\n      this.segment.setUserProperties(properties);\n    }\n  }\n\n  /**\n   * Control whether analytics are tracked\n   * true: dev mode on, therefore do not track anything\n   * false: dev mode off, track everything\n   **/\n  public devMode(enable?: boolean): boolean {\n    //if (typeof enable !== 'undefined') {\n    //  this.angulartics2.developerMode(enable);\n    //}\n    return this.angulartics2.settings.developerMode;\n  }\n}\n\n/**\n * Base class\n * Standardizes tracking actions and categorization\n */\nexport class Analytics implements iAnalytics {\n  // sub-classes should define their category\n  public category: string;\n\n  constructor(@Inject(AnalyticsService) public analytics: AnalyticsService) {\n\n  }\n\n  /**\n   * Track actions, events, etc.\n   **/\n  track(action: string, properties: iAnalyticsProperties): void {\n    this.analytics.track(action, _.extend(properties, { category: this.category }));\n  }\n}\n","// app\nimport { AnalyticsService } from './analytics.service';\n\nexport const analyticsProviders: Array<any> = [\n  AnalyticsService\n];\n\n// services\nexport * from './analytics.service';\n","// Service Module for Analytics\n\n// angular\nimport { NgModule } from '@angular/core';\n\n// vendor\nimport { Angulartics2Module }   from 'angulartics2';\nimport { Angulartics2Segment }  from 'angulartics2/segment';\n\n// module\nimport { analyticsProviders } from './services/index';\n\n@NgModule({\n  imports: [\n    Angulartics2Module.forRoot([\n      Angulartics2Segment\n    ])\n  ],\n  providers: [\n    ...analyticsProviders\n  ]\n})\nexport class AnalyticsModule {}\n"],"names":["_.extend"],"mappings":";;;;;;;;;;;;AAuBA,MAAa,gBAAgB;;;;;IAC3B,YAAoB,YAA0B,EAAU,OAA4B;;;;;;;QAAhE,iBAAY,GAAZ,YAAY,CAAc;QAAU,YAAO,GAAP,OAAO,CAAqB;QAQlF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACrB;;;;;;;;IAKM,KAAK,CAAC,MAAc,EAAE,UAAgC;QAC3D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SAC7C;KACF;;;;;;;;;IAMM,SAAS,CAAC,IAAY,EAAE,QAAa;QAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;;YAEnB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC9B;KACF;;;;;;;IAKM,QAAQ,CAAC,UAAe;QAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;SAC5C;KACF;;;;;;;;;IAOM,OAAO,CAAC,MAAgB;;;;QAI7B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;KACjD;;;YApDF,UAAU;;;;YAhBF,YAAY;YACZ,mBAAmB;;;;;;AA0E5B,MAAa,SAAS;;;;IAIpB,YAA6C,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;KAEvE;;;;;;;;IAKD,KAAK,CAAC,MAAc,EAAE,UAAgC;QACpD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAEA,MAAQ,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;KACjF;;;;YATuD,gBAAgB,uBAA3D,MAAM,SAAC,gBAAgB;;;;;;;;AClFtC,MAAa,kBAAkB,GAAe;IAC5C,gBAAgB;CACjB;;;;;;MCiBY,eAAe;;;YAV3B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,kBAAkB,CAAC,OAAO,CAAC;wBACzB,mBAAmB;qBACpB,CAAC;iBACH;gBACD,SAAS,EAAE;oBACT,GAAG,kBAAkB;iBACtB;aACF;;;;;;;;;;;;;;;"}
